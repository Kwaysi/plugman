{"version":3,"sources":["store/actions/network.action.ts","store/reducers/network.reducer.ts","store/actions/app.action.ts","Providers/storage.service.ts","store/reducers/app.reducer.ts","store/actions/notification.action.ts","store/actions/socket.action.ts","store/reducers/socket.reducer.ts","store/reducers/index.ts","store/reducers/notification.reducer.ts","store/index.ts","Providers/core.service.ts","components/misc/DropdownClick/DropdownClick.tsx","Providers/helpers.ts","Providers/index.ts","Providers/Collections.service.ts","Providers/socket.service.ts","components/modules/Activity/Activity.tsx","components/modules/Request/Request.tsx","components/misc/Layout/Layout.tsx","components/misc/Modal/Modal.tsx","components/misc/Overlay/Overlay.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["types","initialState","loading","isPc","window","innerWidth","setTitle","data","dispatch","title","image","icon","document","length","substring","type","payload","STORAGE_CONSTANTS","setBodyDarkMode","mode","body","querySelector","className","serverUrl","localStorage","setItem","getItem","darkMode","dontAskDarkMode","userData","name","finishedAuthenticationAttempt","setTrackers","status","tracker","activities","combineReducers","network","state","action","app","newMode","notifications","m","read","n","unshift","socket","env","require","middleware","thunk","compose_","compose","applyMiddleware","prod","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","getId","Math","random","toString","DebounceTime","time","ref","active","start","fn","clearTimeout","setTimeout","this","BehaviourSubject","value","initialValue","lastValue","fns","next","newValue","subscribe","id","Object","values","forEach","_fn","unSubscribe","keys","sendToCollectionObs","possibleResizeObs","toastObs","shareObs","modalObs","alertObs","confirmObs","selectObs","promptObs","toasterBehaviourSubj","toaster","_timer","timer","incoming","attention","prompter","text","Promise","resolve","reject","cb","val","throwError","DropdownClick","textArea","copy","props","useState","clicked","setClicked","DropdownClickRef","useRef","clickedFunRef","scrollRef","componentIsMounted","preSetClicked","onScrollClose","current","removeEventListener","addEventListener","useEffect","style","zIndex","block","onClick","e","target","match","parent","child","node","parentNode","isDescendant","children","apiCacheHash","selectText","range","selection","navigator","userAgent","createRange","selectNodeContents","getSelection","removeAllRanges","addRange","setSelectionRange","select","createElement","appendChild","createTextArea","execCommand","removeChild","idToRequestHash","defaultCollection","isFolder","event","emitBody","listenBody","CollectionsService","JSON","stringify","parse","collectionsObs","d","folderParse","dd","tree","targetC","options","localCollections","treeSplit","split","filter","_","treeIndex","treeDataModifierF","lastLoop","collectionTree","setData","emit","c","load","generateRequestHash","listenEventToId","lastListenEvent","socketService","host","io","on","message","emitActivity","connected","disconnect","initialize","h","getRequestHash","b","listen","addActivity","removeListener","emitTracker","destroy","addNotification","DEFAULTS","connect","events","setEvents","eventsDisplayRef","keyGen","hash","key","console","log","undefined","setEventRefF","scrollTo","left","top","scrollHeight","behavior","totalEvents","activeEvents","marginTop","opened","map","k","i","checked","onChange","height","overflow","activity","isActivityEmit","showEvent","marginLeft","marginRight","display","textAlign","readOnly","lineNumbers","scrollBeyondLastLine","minimap","enabled","wordWrap","automaticLayout","theme","language","saved","setSaved","requestTree","setRequestTree","activeCellIndex","setActiveCellIndex","showDetails","setShowDetails","showActivity","setShowActivity","tabs","setTabs","activeRequest","setActiveRequest","subs","navbarCriticalChanged","cells","handleChange","clone","save","treeDataModifier","persist","Function","script","cancelListen","push","indexOf","tabsClone","request","plausibleOldEmittions","getLastListenEvent","listenerBody","sub","alreadyListening","handleEditorChange","ev","editNameAndDescription","alert","width","overflowX","overflowY","whiteSpace","tab","ids","getRequestFromId","activateTab","tabTreeToName","Array","from","t","deleteTab","description","disabled","placeholder","cell","borderBottomWidth","alignItems","navLinks","link","fa","setUserData","toggleDarkMode","setFinishedAuthenticationAttempt","setNotifications","sidebarMin","setSidebarMin","activeNavIndex","setActiveNavIndex","activeTree","setActiveTree","storage","socketUrl","setSocketUrl","lastSelectedFolderTree","setLastSelectedFolderTree","collections","setCollections","contextMenu","setContextMenu","activenav","contextRef","lastFolderRef","collectionsModified","matchMedia","matches","then","catch","preventDefault","initializeAndListen","paramsTree","URLSearchParams","location","search","get","onCollectionEvent","f","user","idFromTree","changeNav","nextIndex","history","treeName","a","isFolderOpened","pathname","index","removeFromTrackerIfExist","setContextMenuF","CollectionRenderer","collection","onContextMenu","x","pageX","y","pageY","lastFolderCB","paddingLeft","ContextMenu","position","src","fontSize","href","bottom","app-data-intro","app-data-step","exact","path","to","component","Request","Modal","onClose","preventCloseOnClickOutside","jsx","dangerouslySetInnerHTML","__html","Overlay","toastData","setToastData","shareContent","setShareContent","modalContent","setModalContent","confirmContent","setConfirmContent","alertContent","setAlertContent","selectContent","setSelectContent","promptContent","setPromptContent","res","incomingToastData","incomingShareContent","incomingModalContent","incomingConfirmContent","incomingAlertContent","incomingSelectContent","incomingPromptContent","helperCopy","open","encodeURIComponent","media","option","optionText","optionInfo","info","htmlFor","monaco","init","editor","defineTheme","base","inherit","colors","rules","token","background","foreground","fontStyle","App","Layout","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"qXAEaA,EACK,eADLA,EAEG,aCDVC,EAAe,CAEfC,SAAS,GCJFF,EACC,WADDA,EAGK,cAHLA,EAIK,cAJLA,EAKyB,mCAEhCG,EAAOC,OAAOC,WAAa,IACpBC,EAAW,SAACC,GAAD,OAAe,SAACC,GACtC,IAAIC,EAAQF,EAAKE,OAASF,EACpBG,EAAQH,EAAKG,OAAS,GACtBC,EAAOJ,EAAKI,MAAQ,GACxBC,SAASH,MAAT,UAAoBA,EAApB,kBAEIN,GAAQM,EAAMI,OAAS,KACvBJ,EAASA,EAAiBK,UAAU,EAAG,IAAM,QAG7CN,EAAS,CACLO,KAAMf,EACNgB,QAAS,CAACP,QAAOC,QAAOC,YCnB9BM,EACS,YADTA,EAEkB,qBAFlBA,EAGU,aAOhB,SAASC,EAAgBC,GACrB,IAAMC,EAAOR,SAASS,cAAc,QAE/BD,IAKDA,EAAKE,UADI,SAATH,IAA4B,IAATA,EACF,cAEA,kBAOlB,IAAMI,EACJ,SAACJ,GAGF,OAAOK,aAAaC,QAAQR,EAA8BE,IAJrDI,EAMJ,WAID,OAHaC,aAAaE,QAAQT,IAU7BU,EACJ,SAACR,GAIF,OAFAD,EAAgBC,GAETK,aAAaC,QAAQR,EAA6BE,IALpDQ,EAOJ,WACD,IAAMR,EAAOK,aAAaE,QAAQT,GAIlC,OAFAC,EAAgBC,GAETA,GAKFS,EACJ,SAACT,GAIF,OAAOK,aAAaC,QAAQR,EAAsCE,IAL7DS,EAOJ,WAKD,OAJaJ,aAAaE,QAAQT,IClEpChB,EAAe,CAEjBQ,MAAO,GAEPoB,SAAU,CACNC,KAAM,OAEVC,+BAA+B,EAC/BJ,SAA6B,SAAnBA,K,QCXD3B,EACiB,2BADjBA,EAEU,oBAFVA,EAGS,mBCHTA,EACU,oBADVA,EAEK,eAFLA,EAGI,eA0BJgC,EAAc,SAACzB,GAAD,OAAe,SAACC,GAEnCA,EAAS,CACLO,KAAMf,EACNgB,QAAST,MC/BfN,EAAe,CAEjBgC,OAAQ,GACRC,QAAS,GACbC,WAAY,ICDGC,cAAgB,CAC3BC,QPCW,WAAwC,IAAvCC,EAAsC,uDAA9BrC,EAAcsC,EAAgB,uCAClD,OAAQA,EAAOxB,MACX,KAAKf,EAED,OAAO,eACAsC,EADP,CACcpC,SAAS,IAE3B,KAAKF,EAED,OAAO,eACAsC,EADP,CACcpC,SAAS,IAI3B,QACI,OAAOoC,IOffE,IJQW,WAAwC,IAAvCF,EAAsC,uDAA9BrC,EAAcsC,EAAgB,uCAClD,OAAQA,EAAOxB,MACX,KAAKf,EAED,OAAO,eACAsC,EADP,CACc7B,MAAO8B,EAAOvB,UAKhC,KAAKhB,EAED,IAAMyC,GAAWH,EAAMX,SAIvB,OAHAA,EAAac,EAAU,IAGhB,eACAH,EADP,CACcX,UAAWW,EAAMX,WAInC,QACI,OAAOW,II7BfI,cCJW,WAAwC,IAAvCJ,EAAsC,uDAFjC,KAEiBC,EAAgB,uCAClD,OAAQA,EAAOxB,MACX,KAAKf,EAED,IAAM2C,EAAC,YACAL,GAKP,OAFAK,EAAEJ,EAAOvB,SAAS4B,MAAO,EAElB,YACAD,GAEX,KAAK3C,EAED,IAAM6C,EAAC,YACAP,GAKP,OAFAO,EAAEC,QAAQP,EAAOvB,SAEV,YACA6B,GAGX,KAAK7C,EAED,OAAO,YACAuC,EAAOvB,SAIlB,QACI,OAAOsB,ID5BfS,ODDW,WAAwC,IAAvCT,EAAsC,uDAA9BrC,EAAcsC,EAAgB,uCAClD,OAAQA,EAAOxB,MACX,KAAKf,EAID,OAAO,eAAIsC,EAAX,CAAkBL,OAAOM,EAAOvB,UACpC,KAAKhB,EAID,OAAO,eAAIsC,EAAX,CAAkBJ,QAAQK,EAAOvB,UACrC,KAAKhB,EAID,OAAO,eAAKsC,EAAZ,CAAmBH,WAAW,GAAD,mBAAMG,EAAMH,YAAZ,CAAwBI,EAAOvB,YAKhE,QACI,OAAOsB,MG3BZU,EAAQC,EAAQ,IAGjBC,EAAa,CAACC,KAGhBC,EAAWC,YAAQC,IAAe,WAAf,EAAmBJ,IAEtCF,EAAIO,OAEJH,EAAWC,YAAQC,IAAe,WAAf,EAAmBJ,GAAa9C,OAAOoD,8BAAgCpD,OAAOoD,iCAGrG,IAAMC,EAAQC,YAAYC,EAXL,GAYnBP,G,0ECnBWQ,GAAQ,WACnB,MAAO,IAAMC,KAAKC,SAASC,SAAS,IAAIjD,UAAU,EAAG,IAAM+C,KAAKC,SAASC,SAAS,IAAIjD,UAAU,EAAG,KAExFkD,GAAb,4DAEEC,KAAO,IAFT,KAGEC,SAHF,OAIEC,QAAS,EAJX,KAKSC,MAAQ,SAACC,EAAcJ,GACxB,EAAKC,KACPI,aAAa,EAAKJ,KAGpB,EAAKC,QAAS,EACVF,IACF,EAAKA,KAAOA,GAOd,EAAKC,IAAMK,YALK,WACdF,IACA,EAAKF,QAAS,IAGe,EAAKF,OAnBxC,uDAsBIK,aAAaE,KAAKN,SAtBtB,KA6BaO,GAKX,WAAYC,GAAa,IAAD,gCAJxBC,aAAe,KAIS,KAHxBC,UAAY,KAGY,KADxBC,IAAkC,GACV,KAKjBC,KAAO,SAACC,GACb,EAAKH,UAAYG,EACjB,EAAKC,aAPiB,KAUjBA,UAAY,SAACX,EAAeK,GACjC,IAAIO,EAgBJ,GAfIZ,IACFY,EAAKrB,KACL,EAAKiB,IAAII,GAAMZ,GAKb,EAAKQ,KACPK,OAAOC,OAAO,EAAKN,KAAKO,SAAQ,SAAAC,GAC9BA,EAAI,EAAKT,cAMTP,EAEF,MAAO,CACLiB,YAAa,kBACJ,EAAKT,IAAII,GACqB,IAAjCC,OAAOK,KAAK,EAAKV,KAAKhE,SACxB,EAAK+D,UAAY,EAAKD,iBAhC9BH,KAAKI,UAAYF,EACjBF,KAAKG,aAAeD,GA4CXc,IADqB,IAAIf,IAAiB,GACpB,IAAIA,GAAiB,OAC3CgB,GAAoB,IAAIhB,IAAiB,GAIzCiB,GAAW,IAAIjB,GAAiB,MAChCkB,GAAW,IAAIlB,GAAiB,MAChCmB,GAAW,IAAInB,GAAiB,MAChCoB,GAAW,IAAIpB,GAAiB,MAChCqB,GAAa,IAAIrB,GAAiB,MAClCsB,GAAY,IAAItB,GAAiB,MACjCuB,GAAY,IAAIvB,GAAiB,MACxCwB,GAAuB,CAAC,IAAIjC,GAAgB,IAAIA,IACzCkC,GAAU,SAAC3F,EAAW4F,GAE/B,IAAMC,EAAQD,GAAU,IACxBT,GAASZ,KAAT,eAAmBvE,EAAnB,CAAyB8F,UAAU,KAE/B9F,EAAK+F,UACLZ,GAASZ,KAAT,eAAmBvE,EAAnB,CAAyB8F,UAAU,MAGvCJ,GAAqB,GAAG7B,OAAM,kBAAMsB,GAASZ,KAAK,QAAOsB,GAGzDH,GAAqB,GAAG7B,OAAM,kBAAMsB,GAASZ,KAAT,eAAmBvE,EAAnB,CAAyB8F,UAAU,OAAUD,EAAQ,OAmDhFG,GAAW,SAACC,EAAW9B,GAEhC,OAAO,IAAI+B,SAAQ,SAACC,EAASC,GACzBX,GAAUlB,KAAK,CACX0B,OACA9B,QAEAkC,GAAI,SAACC,EAAcC,GACdA,EACDH,EAAOE,GAGPH,EAAQG,U,OC1CTE,IC+EXC,GACOC,GDhFIF,GAhHf,SAAuBG,GAAa,IAAD,EAEDC,oBAAS,GAFR,mBAExBC,EAFwB,KAEfC,EAFe,KAGzBC,EAAmBC,iBAAO,MAC1BC,EAAgBD,iBAAO,MACvBE,EAAYF,iBAAO,CAErBlD,GAAI,eAEFqD,EAAqBH,kBAAO,GAqClC,SAASI,EAAcjD,GAcfwC,EAAMU,gBACFlD,GACA+C,EAAUI,QAAQxD,GAf1B,WAGQgD,GAAW,GAEXzG,SAASkH,oBAAoB,SAAUL,EAAUI,QAAQxD,IAAI,IAa7DzD,SAASmH,iBAAiB,SAAUN,EAAUI,QAAQxD,IAAI,IAI1DzD,SAASkH,oBAAoB,SAAUL,EAAUI,QAAQxD,IAAI,IAIrEgD,EAAW3C,GAkBf,OAfAsD,qBAAU,WAGN,OAAO,WACHN,EAAmBG,SAAU,EAGzBL,EAAcK,UACdzH,OAAO0H,oBAAoB,QAASN,EAAcK,SAClDjH,SAASkH,oBAAoB,SAAUL,EAAUI,QAAQxD,IAAI,OAGtE,IAIC,yBAAKH,IAAKoD,EAAkBW,MAAO,CAC/BC,OAAQd,EAAU,EAAI,GACvB9F,UAAW,kBAAoB4F,EAAMiB,MAAQ,UAAY,mBACxD,yBAEIC,QAAS,kBArFK1D,GAqFmB0C,EApFLE,EAAiBO,QACjDX,EAAMkB,SACNlB,EAAMkB,QAAQ1D,GAEdA,GAIA8C,EAAcK,QAAU,SAACQ,IAGhBA,EAAEC,OAAOhH,UAAUiH,MAAM,yBAnC9C,SAAsBC,EAAqBC,GAEvC,IADA,IAAIC,EAAOD,EAAME,WACF,MAARD,GAAc,CACjB,GAAIA,GAAQF,EACR,OAAO,EAEXE,EAAOA,EAAKC,WAEhB,OAAO,EA2B+DC,CAAatB,EAAiBO,QAASQ,EAAEC,UAAYZ,EAAmBG,UAC1HX,EAAMkB,SACNlB,EAAMkB,SAAQ,GAElBhI,OAAO0H,oBAAoB,QAASN,EAAcK,SAClDF,GAAc,KAItBvH,OAAO2H,iBAAiB,QAASP,EAAcK,UAK3CL,EAAcK,SAEdzH,OAAO0H,oBAAoB,QAASN,EAAcK,cAI1DF,EAAcjD,GAhClB,IAA0BA,GAqF6BpD,UAAU,OACpD4F,EAAM2B,SAAS,IAEnBzB,GACG,yBAAK9F,UAAU,OACV4F,EAAM2B,SAAS,M,SErHvBjF,GAAQ,WACjB,MAAO,IAAMC,KAAKC,SAASC,SAAS,IAAIjD,UAAU,EAAG,IAAM+C,KAAKC,SAASC,SAAS,IAAIjD,UAAU,EAAG,KDAjGgI,GAAoB,GAyGb9E,GAAb,4DAEIC,KAAO,IAFX,KAGIC,SAHJ,OAIIC,QAAS,EAJb,KAKWC,MAAQ,SAACC,EAAcJ,GACtB,EAAKC,KACLI,aAAa,EAAKJ,KAGtB,EAAKC,QAAS,EACVF,IACA,EAAKA,KAAOA,GAOhB,EAAKC,IAAMK,YALK,WACZF,IACA,EAAKF,QAAS,IAGa,EAAKF,OAnB5C,uDAsBQK,aAAaE,KAAKN,SAtB1B,KAkHA,SAAS6E,KACL,IAAIC,EACAC,EAZGC,UAAUC,UAAUZ,MAAM,kBAe7BS,EAAQpI,SAASwI,eACXC,mBAAmBrC,KACzBiC,EAAY7I,OAAOkJ,gBACTC,kBACVN,EAAUO,SAASR,GACnBhC,GAASyC,kBAAkB,EAAG,SAE9BzC,GAAS0C,SASjBzC,GAAO,SAAUT,IA5BjB,SAAwBA,IAEpBQ,GAAWpG,SAAS+I,cAAc,aACzBjF,MAAQ8B,EACjB5F,SAASQ,KAAKwI,YAAY5C,IAyB1B6C,CAAerD,GACfuC,KANAnI,SAASkJ,YAAY,QACrBlJ,SAASQ,KAAK2I,YAAY/C,KE5O9B,IAAIzG,GAAc,GACZyJ,GAAuB,GAGvBC,GAAoB,CACtB,CACIhF,GAAIrB,KACJ9B,KAAM,gCACNoI,UAAU,EACVC,MAAO,UACPpJ,KAAM,OACNqJ,SAAS,iBAEb,CACInF,GAAIrB,KACJ9B,KAAM,kCACNoI,UAAU,EACVC,MAAO,UACPpJ,KAAM,SACNsJ,WAAW,iBAEf,CACIpF,GAAIrB,KACJ9B,KAAM,8BACNoI,UAAU,EACVrB,SAAS,CACL,CACI5D,GAAIrB,KACJ9B,KAAM,6BACNoI,UAAU,EACVC,MAAO,mBACPpJ,KAAM,SACNsJ,WAAW,mBAIvB,CACIpF,GAAIrB,KACJ9B,KAAM,0CACNoI,UAAU,EACVrB,SAAS,KAOJyB,GAAb,wGAEQ9I,aAAaC,QAAQ,UAAW8I,KAAKC,UAAUjK,OAFvD,6BAMQA,GAAOgK,KAAKE,MAAMjJ,aAAaE,QAAQ,YAAc6I,KAAKC,UAAUP,OAN5E,gCAU4B1J,GACpBmK,GAAe5F,KAAKvE,KAX5B,8BAc2BoK,GACnBpK,GAAOoK,IAff,6CAkBQ,SAASC,EAAYC,GACjBA,EAAGzF,SAAQ,SAAAuF,GACHA,EAAET,SACFU,EAAYD,EAAE9B,UAAY,IAE1BmB,GAAgBW,EAAE1F,IAAM0F,KAKpCC,CAAYrK,MA5BpB,uCAgCQ,OAAOyJ,KAhCf,uCAqCmCc,GAE3B,OAAOd,GAAgBc,KAvC/B,yCA0C8G,IAIlGC,EAJuBC,EAA0E,uDAA3D,GAAIF,EAAuD,uCAAzClE,EAAyC,uCAA/BqE,EAA+B,uCAC/FC,EAAYJ,EAAKK,MAAM,KAAKC,QAAO,SAAAC,GAAC,OAAIA,KAE1CC,EAAY,EAIhB,SAASC,EAAkB3E,EAAUqE,GACjC,IAAIO,GAAW,EACXF,IAAeJ,EAAUrK,OAAS,IAClC2K,GAAW,GAEf,IAAIC,EAAwBR,GAAoBV,KAAKE,MAAMF,KAAKC,UAAUjK,KAG1E,GAAyB,IAArB2K,EAAUrK,OAWV,OATI+F,GACAA,EAAG,KAAM6E,GAGbnB,EAAmBoB,QAAQD,GACvBT,EAAQW,MAERjB,GAAe5F,KAAKvE,IAEjB,CAAEqL,EAAG,KAAMH,kBAStB,IA5BgE,EA4B1DxG,EAAKiG,EAAUI,GA5B2C,eAgClDG,GAhCkD,IAgChE,2BAA8B,CAAC,IAAtBG,EAAqB,QAC1B,GAAIA,EAAE3G,KAAOA,EAwBT,OAvBA8F,EAAUa,EAENA,EAAE1B,UAAaoB,EAAaJ,EAAUrK,OAAS,IAE/CyK,IACAC,EAAkB3E,EAAIgF,EAAE/C,WAOxBjC,GAAM4E,GAEN5E,EAAGgF,EAAGH,GAGVnB,EAAmBoB,QAAQD,GACvBT,EAAQW,MAERjB,GAAe5F,KAAKvE,IAGjB,CAAEqL,EAAGb,EAASU,mBAzDmC,+BAkEpE,IAGI,OAAOF,EAAkB3E,EAAIqE,GAKjC,MAAO5C,GAEH,OAAO,UA7HnB,KAuIAiC,GAAmBuB,OACnBvB,GAAmBwB,sBAEZ,IAAMpB,GAAiB,IF/C1B,WAAYhG,GAAa,IAAD,gCAJxBC,aAAe,KAIS,KAHxBC,UAAY,KAGY,KADxBC,IAAkC,GACV,KAKjBC,KAAO,SAACC,GACX,EAAKH,UAAYG,EACjB,EAAKC,aAPe,KAUjBA,UAAY,SAACX,EAAeK,GAC/B,IAAIO,EAgBJ,GAfIZ,IACAY,EAAKrB,KACL,EAAKiB,IAAII,GAAMZ,GAKf,EAAKQ,KACLK,OAAOC,OAAO,EAAKN,KAAKO,SAAQ,SAAAC,GAC5BA,EAAI,EAAKT,cAMbP,EAEA,MAAO,CACHiB,YAAa,kBACF,EAAKT,IAAII,GACqB,IAAjCC,OAAOK,KAAK,EAAKV,KAAKhE,SACtB,EAAK+D,UAAY,EAAKD,iBAhCtCH,KAAKI,UAAYF,EACjBF,KAAKG,aAAeD,EE6CE,CAAqBnE,IAKpC+J,M,oBCvLXpI,GAMA,GACA6J,GAGF,GACEC,GAAuB,GACvB/J,GAAc,GAgMHgK,GAFO,I,iDAzLlBlJ,Y,OAEAmJ,U,0DACkBA,EAActF,GAAW,IAAD,OAElCpC,KAAK0H,KAAOA,EACZ1H,KAAKzB,OAASoJ,KAAGD,GAEjB1H,KAAKzB,OAAOqJ,GAAG,WAAW,WACtBlG,GAAQ,CAAEnF,KAAM,UAAWsL,QAAQ,0EAChCzF,GACCA,GAAG,GAGP,EAAK0F,aAAa,SAAU,WAC5BrK,GAAOsK,WAAY,EACnB,EAAKzH,OAGT,EAAK/B,OAAOqJ,GAAG,cAAc,WAEzB,EAAKI,qB,0CAQUN,GAAe,IAAD,OACrC1H,KAAKiI,WAAWP,GAAM,WAClB,IAAMQ,EAAIpC,GAAmBqC,iBAC7BzH,OAAOC,OAAOuH,GAAGtH,SAAQ,SAACwH,GACP,SAAXA,EAAE7L,MAAmB6L,EAAEzC,OACvB,EAAKwB,KAAKiB,EAAE3H,GAAI2H,EAAEzC,MAAOyC,EAAExC,UAEhB,WAAXwC,EAAE7L,MAAqB6L,EAAEzC,OACzB,EAAK0C,OAAOD,EAAE3H,GAAI2H,EAAEzC,e,6BVxDf,IAAC5J,EUqElBkD,EAAMjD,UVrEYD,EUqEO0B,GVrEO,SAACzB,GAEjCA,EAAS,CACLO,KAAMf,EACNgB,QAAST,S,mCUmEIQ,EAAcoJ,EAAe5J,GAC9CkD,EAAMjD,SV7Da,SAACD,GAAD,OAAe,SAACC,GAEnCA,EAAS,CACLO,KAAMf,EACNgB,QAAST,KUyDEuM,CAAY,CAAE/L,OAAMoJ,QAAO5J,Y,kCAG1B0E,EAAa1E,GAC7B,IAAK0E,EAGD,OAFA/C,GAAU,QACVuB,EAAMjD,SAASwB,EAAYE,KAG1B3B,EAGD2B,GAAQ+C,GAAM1E,SAFP2B,GAAQ+C,GAOnBxB,EAAMjD,SAASwB,EAAYE,O,yCAGZiI,GACf,OAAO6B,GAAgB7B,K,+CAEFlF,GAElB/C,GAAQ+C,KACkB,WAArB/C,GAAQ+C,GAAIlE,cACLgL,GAAgB7J,GAAQ+C,GAAIkF,cAC5B6B,GAAgB9J,GAAQ+C,GAAIkF,OACnC3F,KAAKzB,OAAOgK,eAAe7K,GAAQ+C,GAAIkF,QAE3C3F,KAAKwI,YAAY/H,M,mCAKrBiB,GAAQ,CAAEnF,KAAM,SAAUsL,QAAQ,uDAElC7H,KAAKzB,OAAOkK,iBAELzI,KAAKzB,OAEZyB,KAAKzB,OAAS,KAEdd,GAAOsK,WAAY,EACnB/H,KAAK8H,aAAa,SAAU,cAC5B9H,KAAKwI,cACLxI,KAAKM,OACLiH,GAAkB,GAClBC,GAAkB,K,mCAGT/G,EAAYkF,GACrB3F,KAAKwI,YAAY/H,UACV8G,GAAgB5B,UAChB6B,GAAgB7B,GACvB3F,KAAKzB,OAAOgK,eAAe5C,K,6BAIxBlF,EAAYkF,GAAgB,IAAD,OAC1B4B,GAAgB5B,GAChBjE,GAAQ,CAAEnF,KAAM,SAAUsL,QAAQ,wFAAD,OAAyFlC,EAAzF,WAGjCjI,GAAQ+C,IAA4B,WAArB/C,GAAQ+C,GAAIlE,OAG/ByD,KAAKwI,YAAY/H,EAAI,CACjBlE,KAAM,SACNoJ,UAIJ4B,GAAgB5B,GAASlF,EAEzBT,KAAKzB,OAAOqJ,GAAGjC,GAAO,SAAC5J,GAInByL,GAAgB7B,GAA0B,kBAAT5J,EAAoBA,EAAOgK,KAAKC,UAAUjK,GAC3E,EAAK+L,aAAa,SAAUnC,EAAwB,kBAAT5J,EAAoBA,EAAOgK,KAAKC,UAAUjK,U,2BAIxF0E,EAAYkF,EAAe5J,GAIxB2B,GAAQ+C,IAA4B,WAArB/C,GAAQ+C,GAAIlE,cACpBgL,GAAgB5B,GACvB3F,KAAKzB,OAAOgK,eAAe5C,IAI1BjI,GAAQ+C,IAA2B,QAApB/C,GAAQ+C,GAAIlE,MAC5ByD,KAAKwI,YAAY/H,EAAI,CACjBlE,KAAM,OACNoJ,UAKR3F,KAAKzB,OAAO4I,KAAKxB,EAAO5J,GAExBiE,KAAK8H,aAAa,OAAQnC,EAAO5J,K,gCAInBA,GAEd,GAAkB,UAAdA,EAAKQ,MAGS,WAAdR,EAAKQ,KAGT,MAAkB,qBAAdR,EAAKQ,MAEL0C,EAAMjD,SXrLa,SAACD,GAAD,OAAe,SAACC,GAEvCA,EAAS,CACLO,KAAMf,EACNgB,QAAST,KWiLM2M,CAAgB3M,EAAKA,YAEpC2F,GAAQ,CAAEmG,QAAS,8BAKvBnG,GAAQ3F,EAAKA,U,wBCxMf4M,I,OAAW,CACb,kBAAkB,EAClB,qBAAqB,IA4JzB,IAOeC,gBAPS,SAAC9K,GAAD,MAAiB,CAErCE,IAAKF,EAAME,IACXO,OAAQT,EAAMS,UAIsB,CAAEzC,YAA3B8M,EAjKf,SAAkBlG,GAAa,IAAD,EACEC,mBAASgG,IADX,mBACnBE,EADmB,KACXC,EADW,KAEpBC,EAAmBhG,iBAAO,MA0BpC,SAASiG,EAAOzM,EAAUoJ,GACtB,OAAOpJ,EAAO,IAAMoJ,EAGpBnC,qBAAU,WACN,IAAMyF,EAAY,GAEjBvI,OAAOC,OAAO+B,EAAMnE,OAAOb,SAAmBkD,SAAQ,SAAAiD,GACnD,IAAMqF,EAAMF,EAAOnF,EAAEtH,KAAOsH,EAAE8B,OAC9BsD,EAAKC,IAAO,KAlCpB,SAAsBD,EAAWpF,GAE7BsF,QAAQC,IAAI,CAACH,SAEb,IAAM7B,EAAC,eAAQyB,GAEfnI,OAAOK,KAAKkI,GAAMrI,SAAQ,SAAAsI,QAERG,GAAVjC,EAAE8B,GACF9B,EAAE8B,IAAOrF,GAAIoF,EAAKC,GACbrF,IACLuD,EAAE8B,GAAOD,EAAKC,OAUtBJ,EAAU1B,GAkBVkC,CAAaL,KAId,CAACvG,EAAMnE,OAAOb,UAEjB8F,qBAAU,WAGNzD,YAAW,WAAO,IAAD,EACb,UAAAgJ,EAAiB1F,eAAjB,SAA0BkG,SAAS,CAC/BC,KAAM,EACNC,IAAKV,EAAiB1F,QAAQqG,aAC9BC,SAAU,aAIf,OAEJ,CAACjH,EAAMnE,OAAOZ,aAGjB,IAAMiM,EAAclJ,OAAOC,OAAOkI,GAC5BgB,EAAeD,EAAYhD,QAAO,SAAAC,GAAC,OAAEA,KAE3C,OAEI,yBAAK/J,UAAU,YACX,yBAAKA,UAAU,wBAAwB2G,MAAO,CAAEqG,UAAW,QAA3D,aAEA,kBAAC,GAAD,CAAelG,QAAS,SAACmG,KAItBpG,OAAO,GACN,yBAAK7G,UAAU,uFACV+M,EAAaxN,QAAUuN,EAAYvN,OAAS,MAASwN,EAAaxN,OAAS,WAGhF,yBAAKS,UAAU,gDAEV4D,OAAOK,KAAK8H,GAAQmB,KAAI,SAACC,EAAGC,GAAJ,OAAU,yBAAKhB,IAAKgB,EAAGpN,UAAU,KAAI,oCAC1D,2BACIqN,QAAStB,EAAOoB,GACpBG,SAAU,SAACvG,GAERiF,EAAU,eACHD,EADE,gBACOoB,EAAGpG,EAAEC,OAAOqG,YAE5B5N,KAAK,WAAWO,UAAU,gBAChCmN,SAMT,6BAGA,yBAAKvK,IAAKqJ,EAAkBtF,MAAO,CAAE4G,OAAQ,sBAAuBC,SAAU,SACxE5H,EAAMnE,OAAOZ,WAAqBqM,KAAI,SAACO,EAAUL,GAC/C,IAAMM,EAAkC,QAAjBD,EAAShO,KAC1BkO,EAA6D,GAAjD5B,EAAOG,EAAOuB,EAAShO,KAAMgO,EAAS5E,QACxD,OACI,yBAAKuD,IAAKgB,GACLO,EAAW,oCACZ,yBACI3N,UAAW,0CAA4C0N,EAAiB,iBAAmB,oBAC3F/G,MACI,CACIiH,WAAaF,EAAiB,OAAS,MACvCG,YAAeH,EAA0B,MAAT,SAKpC,0BAAM/G,MAAO,CAAEmH,QAAS,QAASC,UAAYL,EAAiB,QAAU,SAAYD,EAAS5E,MAA7F,QAAwG,2BAAO7I,UAAW,0BAAsD,QAAzByN,EAAiBhO,KAAiB,eAAiB,mBAEtMgO,EAAShO,OAEhBgO,EAASxO,MAAQ,6BACd,kBAAC,IAAD,CAAQyK,QAAS,CACbsE,UAAU,EACVC,YAAa,MACbC,sBAAsB,EACtBC,QAAS,CACLC,SAAS,GAEbC,SAAU,KACVC,iBAAiB,GAElBC,MAAO3I,EAAM1E,IAAIb,SAAW,UAAY,gBACvCkN,OAAO,OACPnK,MAAOqK,EAASxO,KAAMuP,SAAS,WAI3C,8BACK,8CC4MjC,IAQe1C,gBARS,SAAC9K,GAAD,MAAiB,CAErCE,IAAKF,EAAME,IACXE,cAAeJ,EAAMI,cACrBK,OAAQT,EAAMS,UAIsB,CAAEzC,YAA3B8M,EA7Vf,SAAiBlG,GAAa,IAAD,EACCC,oBAAS,GADV,mBAClB4I,EADkB,KACXC,EADW,OAEa7I,mBAAS,IAFtB,mBAElB8I,EAFkB,KAELC,EAFK,OAGqB/I,mBAAS,GAH9B,mBAGlBgJ,EAHkB,KAGDC,EAHC,OAIajJ,oBAAS,GAJtB,mBAIlBkJ,EAJkB,KAILC,EAJK,OAKenJ,oBAAS,GALxB,mBAKlBoJ,EALkB,KAKJC,EALI,OAMDrJ,mBAAS,IANR,mBAMlBsJ,EANkB,KAMZC,EANY,OAOiBvJ,mBAAS,MAP1B,mBAOlBwJ,EAPkB,KAOHC,EAPG,KAQnBC,EAAOtJ,iBAAO,IACduJ,EAAwBvJ,kBAAO,GAE/BwJ,EAAQJ,GAAuC,QAAtBA,EAAc5P,KAAiB,CAAC,WAAY,UAAY,CAAC,aAAc,UAuDtG,SAASiQ,EAAa3I,GACd0H,GACAC,GAAS,GAEQ,QAAjB3H,EAAEC,OAAOxG,MAAmC,QAAjBuG,EAAEC,OAAOxG,OACpCgP,EAAsBjJ,SAAU,GAEpC,IAAMoJ,EAAU,eAAQN,GACxBM,EAAM5I,EAAEC,OAAOxG,MAAQuG,EAAEC,OAAO5D,MAChCkM,EAAiBK,GAKrB,SAASC,IAEL5G,GAAmB6G,iBAAiB,CAAExF,KAAMmF,EAAsBjJ,SAAWoI,GAAa,SAACtF,GAEvFgD,QAAQC,IAAI,CAAEjD,MACdzF,OAAOK,KAAKoL,GAAevL,SAAQ,SAAAqJ,GAC/B9D,EAAE8D,GAAKkC,EAAclC,SAG7BnE,GAAmBwB,sBACnBxB,GAAmB8G,UACnBpB,GAAS,GAuCb,SAASzN,EAAOxB,GACZ,GAAKmG,EAAMnE,OAAOd,OAAOsK,UAKzB,GAAY,QAARxL,EAAgB,CAChB,IACI,IAAIsQ,SAASV,EAAcW,OAA3B,GAAqCX,EAAcvG,UAAU,SAACxD,GAC1D+G,QAAQC,IAAI,CAAEhH,UAEpB,MAAOyB,IAKT4D,GAAcN,KAAKgF,EAAc1L,GAAW0L,EAAcxG,MAAOwG,EAAcvG,cAChE,UAARrJ,EACPkL,GAAcY,OAAO8D,EAAc1L,GAAW0L,EAAcxG,OAE7C,iBAARpJ,GACPkL,GAAcsF,aAAaZ,EAAc1L,GAAW0L,EAAcxG,YAnBlEjE,GAAQ,CAAEnF,KAAM,SAAUsL,QAAQ,6DAtH1CrE,qBAAU,WACNd,EAAM5G,SAAS,aAGhB,IACH0H,qBAAU,WAqCN,OAnCA6I,EAAKhJ,QAAQ2J,KAAKhM,GAAoBR,WAAU,SAACzE,GAC7C,GAAKA,EAAL,CAIA,IAAgC,GAA5BkQ,EAAKgB,QAAQlR,EAAKuK,MAAa,CAC/B,IAAM4G,EAAS,sBAAOjB,GAAP,CAAalQ,EAAKuK,OACjC4F,EAAQgB,GAQZ,GANK3B,GACDmB,IAKqB,UAArB3Q,EAAKoR,QAAQ5Q,KAAkB,CAC/B,IAAM6Q,EAAwB3F,GAAc4F,mBAAmBtR,EAAKoR,QAAQxH,OAExEyH,GAAyBA,GAAyBrR,EAAKoR,QAAQG,eAC/DvR,EAAKoR,QAAQG,aAAeF,EAE5B1L,GAAQ,CAAEnF,KAAM,OAAQsL,QAAQ,2EAChC9H,YAAW,WACPyL,GAAS,KACV,MAOXY,EAAiBrQ,EAAKoR,SACtBzB,EAAe3P,EAAKuK,WAGjB,WACH+F,EAAKhJ,QAAQzC,SAAQ,SAAC2M,GAAD,OAAcA,EAAIzM,oBAI5C,CAACmL,EAAME,IAEGzJ,EAAM1E,IAAIX,SAENqF,EAAM1E,IAAIb,SA0F3B,IAAMqQ,EAAoBrB,GAAiBzJ,EAAMnE,OAAOb,QAAQyO,EAAc1L,KAAsD,UAA/CiC,EAAMnE,OAAOb,QAAQyO,EAAc1L,IAAIlE,KAEtHkR,EAAqB,SAACC,EAASxN,EAAY3D,GAC7CiP,GAAS,GACG,QAARjP,GACA6P,EAAiB,eAAKD,EAAN,CAAqBvG,SAAU1F,KAEvC,UAAR3D,GACA6P,EAAiB,eAAKD,EAAN,CAAqBW,OAAQ5M,MAI/CyN,EAAyB,WAE3BC,MAAM,sBAKV,OAEI,yBAAK9Q,UAAU,iBAEX,yBAAKA,UAAU,aACX,yBAAKA,UAAW,cAAgB4F,EAAM1E,IAAIb,SAAW,YAAc,KAAO4O,EAAe,yBAA2B,cAChH,yBAAKjP,UAAW,mBAAqB4F,EAAM1E,IAAIb,SAAW,kBAAoB,oBAAqBsG,MAAO,CAAEoK,MAAO,OAAQC,UAAW,OAAQC,UAAW,SAAUC,WAAY,WAC1K/B,EAAKjC,KAAI,SAACiE,EAAK/D,GAAN,OAAY,0BAAMhB,IAAKgB,EAAGpN,UAAW,kCAAyC,GAALoN,EAAS,IAAM,iBAAmB+D,GAAOxC,EAAe/I,EAAM1E,IAAIb,SAAW,YAAc,SAAY,KAAK,0BAAMyG,QAAS,kBAzElO,SAAqBqK,GACjB,GAAIA,GAAOxC,EAAX,CAGKF,GACDmB,IAEJ,IAAMwB,EAAMD,EAAItH,MAAM,KAChBlG,EAAKyN,EAAIA,EAAI7R,OAAS,GAE5B+P,EAAiBtG,GAAmBqI,iBAAiB1N,IACrDiL,EAAeuC,IA8DqNG,CAAYH,IAAMnR,UAAU,+BAAjD,IAzDnN,SAAuBwJ,GACnB,IAAM4H,EAAM5H,EAAKK,MAAM,KACjBlG,EAAKyN,EAAIA,EAAI7R,OAAS,GAC5B,OAAOyJ,GAAmBqI,iBAAiB1N,GAAInD,KAsDiP+Q,CAAcJ,IAAxQ,IAAqR,0BAAMrK,QAAS,kBAvF9U,SAAmBqK,GACf9E,QAAQC,IAAI,UAAW6E,GAEnBA,GAAOxC,IACPiB,IACAN,EAAiB,MACjBV,EAAe,KAEH4C,MAAMC,KAAKtC,EAAKlL,QAAhC,IACMmM,EAAYjB,EAAKrF,QAAO,SAAA4H,GAAC,OAAIA,GAAKP,KAExC/B,EAAQgB,GA4EwUuB,CAAUR,KAA/B,IAAsC,uBAAGnR,UAAU,iBAAxU,SAE1B,yBAAK2G,MAAO,CAAE4G,OAAQ,sBAAuBC,SAAU,QAAUxN,UAAU,OACtEqP,EAAgB,oCAGb,yBAAKrP,UAAU,wBAAwB2G,MAAO,CAAEqG,UAAW,QACvD,yBAAKhN,UAAU,eACX,yBAAK8G,QAAS,kBAAMoI,GAAiBD,IAAejP,UAAU,uBACzDiP,EAAe,oCACZ,uBAAGjP,UAAU,uBACX,oCACE,uBAAGA,UAAU,wBAM7B,6BAAK,0BAAMA,UAAU,SAAS8G,QAAS,kBAAMkI,GAAgBD,KAAc,uBAAGpI,MAAO,CAAEoK,MAAO,QAAU/Q,UAAW,aAAe+O,EAAc,gBAAkB,oBAAwBM,EAAc7O,MAAxM,IAAqN,0BAAMR,UAAU,oBAAoB8G,QAAS,kBAAM+J,MAA0B,uBAAG7Q,UAAU,gBAE9S+O,GAEG,yBAAKpI,MAAO,CAAEiH,WAAY,QAAU5N,UAAU,UACzCqP,EAAcuC,YAAc,oCAAGvC,EAAcuC,aAAkB,2BAAO5R,UAAU,SAAS8G,QAAS,kBAAM+J,MAAzC,kBAAkF,uBAAG7Q,UAAU,sBAK3K,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uCAGX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uBACX,4BAAQ6R,SAAgC,UAAtBxC,EAAc5P,MAAoBiR,EAAkBlQ,KAAK,OAAO8M,SAAUoC,EAActM,MAAOiM,EAAc5P,KAAMO,UAAU,gBAC3I,4BAAQoD,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,aAKR,2BAAO3D,KAAK,OAAOoS,SAAgC,UAAtBxC,EAAc5P,MAAoBiR,EAAkBtN,MAAOiM,EAAcxG,MAAOrI,KAAK,QAAQ8M,SAAUoC,EAAc1P,UAAU,eAAe8R,YAAmC,QAAtBzC,EAAc5P,KAAiB,cAAgB,mBAK/O,yBAAKO,UAAU,uCACY,QAAtBqP,EAAc5P,MAAkB,4BAAQqH,QAAS,kBAAM7F,EAAO,SAASjB,UAAU,oBAAoBP,KAAK,UAA1E,QACV,UAAtB4P,EAAc5P,MAAoB,4BAAQqH,QAAS,kBAAM7F,EAAOyP,EAAmB,gBAAkB,WAAW1Q,UAAU,oBAAoBP,KAAK,UAAWiR,EAAmB,kBAAoB,WAG1M,yBAAK1Q,UAAU,wCAETyO,GAAS,4BAAQ3H,QAAS8I,EAAM5P,UAAU,4BAA4BP,KAAK,UAAlE,UAInB,6BACA,yBAAKO,UAAU,qBAAqB2G,MAAO,IACtC8I,EAAMvC,KAAI,SAAC6E,EAAM3E,GACd,OACI,yBAAKtG,QAAS,kBAAMgI,EAAmB1B,IAAIhB,IAAKgB,EAAGpN,UAAW,mCAAqC6O,GAAmBzB,EAAI,iCAAmC,IAAKzG,MAAO,CAAEqL,kBAAmB,QACzLD,OAIjB,6BAEoB,GAAnBlD,GAA8C,QAAtBQ,EAAc5P,MAEnC,6BAII,kBAAC,mBAAD,CAAkB8O,MAAO3I,EAAM1E,IAAIb,SAAW,UAAY,gBAAiBqJ,QAAS,CAChFyE,QAAS,CACLC,SAAS,GAEbC,SAAU,MAGXd,OAAO,sBAAsBD,SAAU,SAACsD,EAASxN,GAAV,OAAyBuN,EAAmBC,EAAIxN,EAAO,SAASA,MAAOiM,EAAcvG,UAAY,GAAI0F,SAAS,UAG5I,GAAnBK,GAA8C,UAAtBQ,EAAc5P,MAEnC,6BAEI,kBAAC,mBAAD,CAAkB8O,MAAO3I,EAAM1E,IAAIb,SAAW,UAAY,gBAAiBqJ,QAAS,CAChFyE,QAAS,CACLC,SAAS,GAEbC,SAAU,KACVL,UAAU,GAEXT,OAAO,sBAAsBnK,MAAOiM,EAAcmB,cAAgB,GAAIhC,SAAS,SAElF,2BAAOxO,UAAU,sBAAjB,mEAEY,GAAnB6O,GAEG,6BAEI,kBAAC,mBAAD,CAAkBvB,SAAU,SAACsD,EAASxN,GAAV,OAAyBuN,EAAmBC,EAAIxN,EAAO,WAAWmL,MAAO3I,EAAM1E,IAAIb,SAAW,UAAY,gBAAiBqJ,QAAS,CAC5JyE,QAAS,CACLC,SAAS,GAEbC,SAAU,MAGXd,OAAO,sBAAsBnK,MAAOiM,EAAcW,QAAU,GAAIxB,SAAS,iBAOlF,yBAAK7H,MAAO,CACd4G,OAAQ,sBACRO,QAAS,OACTmE,WAAY,WAKR,yBAAKjS,UAAU,2BAAf,iBAGA,6BACI,6BACA,yCACA,4BACI,sDACA,qDACA,uDACA,mGAEA,yCAAc,mCAAd,aACA,6CAAkB,qCAAlB,iBASxB,yBAAKA,UAAWiP,EAAe,iBAAmB,UAC9C,kBAAC,GAAD,Y,SC9TdpQ,GAAOC,OAAOC,WAAa,IAE3BmT,GAAW,CAEb,CACI1R,KAAM,cACN2R,KAAM,WACNC,GAAI,cAqkBZ,IAOetG,gBAPS,SAAC9K,GAAD,MAAiB,CACrCD,QAASC,EAAMD,QACfG,IAAKF,EAAME,IACXE,cAAeJ,EAAMI,cACrBK,OAAQT,EAAMS,UAGsB,CAAE7C,QnBrmBnB,SAACkE,GAAD,OAAgB,SAAC5D,GAGhCA,EADD4D,EACU,CACLrD,KAAMf,GAGD,CACLe,KAAMf,MmB6lBiC2T,YjB9jBxB,SAACpT,GAAD,OAAe,SAACC,GAGnCA,EAAS,CACLO,KAAMf,EACNgB,QAAST,MiByjB2CqT,ejBviBlC,kBAAM,SAACpT,GAG7BA,EAAS,CACLO,KAAMf,MiBmiB8D6T,iCjBljBhC,kBAAM,SAACrT,GAG/CA,EAAS,CACLO,KAAMf,MiB8iBgG8T,iBd9kBlF,SAACvT,GAAD,OAAe,SAACC,GAExCA,EAAS,CACLO,KAAMf,EACNgB,QAAST,Oc0kBN6M,EAtkBf,SAAgBlG,GAAa,IAAD,EAKYC,oBAAUhH,IALtB,mBAKjB4T,EALiB,KAKLC,EALK,OAMoB7M,mBAAS,GAN7B,mBAMjB8M,EANiB,KAMDC,EANC,OAOY/M,mBAAS,IAPrB,mBAOjBgN,EAPiB,KAOLC,EAPK,OAQUjN,mBAASkN,KAA2B,IAR9C,mBAQjBC,EARiB,KAQNC,EARM,OASoCpN,mBAAS,KAT7C,mBASjBqN,EATiB,KASOC,EATP,OAUctN,mBAAS,IAVvB,mBAUjBuN,EAViB,KAUJC,EAVI,OAWcxN,mBAAS,MAXvB,mBAWjByN,EAXiB,KAWJC,EAXI,KAYlBC,EAAYtB,GAASS,GACrBc,EAAaxN,iBAAO,MACpByN,EAAgBzN,iBAAO,MACvB0N,EAAsB1N,iBAAO,GAE7B5F,EAAWuF,EAAM1E,IAAIb,SAE3B,SAASiS,IACL1M,EAAM0M,iBAIV5L,qBAAU,WR0DW,IAACxB,EAAcpF,EQ5BhC,OA7BIhB,OAAO8U,WAAW,gCAAgCC,SAAqC,QAA1Bd,KAAqE,QAAjCA,MRyDnF7N,EQtDJ,oBAAD,OAAqBrG,GAAO,SAAW,QAAvC,0DRwDV,IAAIsG,SAAQ,SAACC,EAASC,GACzBb,GAAWhB,KAAK,CACd0B,OAAMpF,OAAMwF,GAAI,SAACC,EAAcC,GACzBA,EACFH,EAAOE,GAEPH,EAAQG,UQ7DLuO,MAAK,SAAA/J,GACGA,GAGLuI,OAEHyB,OAAM,WACHhB,EAA4B,WAMxC3J,GAAe1F,WAAU,SAACzE,GAEtBoU,EAAepU,MAGnBH,OAAO2H,iBAAiB,eAAe,SAACM,GAAD,OAAYA,EAAEiN,oBACjDhB,GAGArI,GAAcsJ,oBAAoBjB,GAG/B,eAKR,IAEHtM,qBAAU,WACN,GAAmC,GAA/BiN,EAAoBpN,QAAc,CAClC,IACM2N,EADS,IAAIC,gBAAgBrV,OAAOsV,SAASC,QACzBC,IAAI,eAC1BJ,GACAK,EAAkB,cAAeL,GAKzC,OADAP,EAAoBpN,UACb,eAGR,CAAC6M,IACJ1M,qBAAU,WACN,IAAM8N,EAAI,SAAJA,IAEG3V,IAAS4T,EAIV3T,OAAO0H,oBAAoB,SAAUgO,GAHrC9B,GAAc,IAiBtB,OANAzP,uBAAW,WACPnE,OAAO2H,iBAAiB,SAAU+N,KAEnC,KAGI,WACH1V,OAAO0H,oBAAoB,SAAUgO,MAG1C,CAAC/B,IACqB7M,EAAM1E,IAAIT,8BAAnC,IACMgU,EAAO7O,EAAM1E,IAAIX,SAoBvB,SAASmU,EAAWlL,GAChB,IAAM4B,EAAI5B,EAAKK,MAAM,KACrB,OAAOuB,EAAEA,EAAE7L,OAAS,GAGxB,SAASoV,EAAUpT,GACf,IAAMqT,EAAYjC,EAAiBpR,EACnCqE,EAAMiP,QAAQ3E,KAAKgC,GAAS0C,GAAWzC,MAEvCS,EAAkBgC,GAnIE,SAsITL,EAtIS,kFAsIxB,WAAiC9U,EAAc+J,EAAcsL,GAA7D,qBAAAC,EAAA,yDAGgB,gBAARtV,EAHR,gBAIQuJ,GAAmB6G,iBAAiB,CAAExF,MAAM,GAAQb,GAAM,SAACvK,GACvDA,EAAK+V,gBAAmB/V,EAAK+V,kBALzC,0BASuB,eAARvV,EATf,gBAWQ,IAIU4Q,EAAUrH,GAAmB6G,iBAAiB,CAAExF,MAAM,GAASb,GAAMc,EAE3E1E,EAAMiP,QAAQ3E,KAAKpR,OAAOsV,SAASa,SAAW,gBAAkBzL,GAChEsJ,EAActJ,GAEdtF,GAAoBV,KAAK,CAAE6M,UAAS7G,SAEtC,MAAOzC,IAtBjB,0BAgCqB,UAARtH,EAhCb,iBAkCQuJ,GAAmB6G,iBAAiB,CAAExF,MAAM,GAAQb,GAAM,SAACvK,EAAWkL,GAElE,IAAK,IAAI+K,EAAQ,EAAGA,EAAQ/K,EAAe5K,OAAQ2V,IAAS,CAC9C/K,EAAe+K,GACnBvR,IAAM1E,EAAK0E,KACbwG,EAAe+K,IAAS,OAOpCvK,GAAcwK,yBAAyBT,EAAWlL,IAClDR,GAAmBwB,sBACnBxB,GAAmB8G,UAhD3B,2BAkDqB,UAARrQ,EAlDb,kCAmD2BwF,GAAS,YAnDpC,QAmDczE,EAnDd,OAqDQwI,GAAmB6G,iBAAiB,CAAExF,MAAM,GAAQb,GAAM,SAACvK,EAAWkL,GAClElL,EAAKuB,KAAOA,KAIhBwI,GAAmBwB,sBACnBxB,GAAmB8G,UA3D3B,2BAgEqB,kBAARrQ,EAhEb,kCAiE2BwF,GAAS,gBAjEpC,QAiEczE,EAjEd,OAkEQwI,GAAmB6G,iBAAiB,CAAExF,MAAM,GAAQb,GAAM,SAACvK,EAAWkL,GAC9DlL,EACAA,EAAKsI,SAAS2I,KAAK,CACfvM,GAAIrB,KACJ9B,OACAf,KAAM,OACNoJ,MAAO,MAIXwD,QAAQC,IAAInC,GACZA,EAAe+F,KAAK,CAChBvM,GAAIrB,KACJ9B,OACAf,KAAM,OACNoJ,MAAO,SAOnBG,GAAmBwB,sBACnBxB,GAAmB8G,UAzF3B,2BA2FqB,iBAARrQ,EA3Fb,kCA4F2BwF,GAAS,eA5FpC,QA4FczE,EA5Fd,OA6FQwI,GAAmB6G,iBAAiB,CAAExF,MAAM,GAAQb,GAAM,SAACvK,EAAWkL,GAC9DlL,EACAA,EAAKsI,SAAS2I,KAAK,CACfvM,GAAIrB,KACJ9B,OACAoI,UAAU,EACVrB,SAAU,KAId4C,EAAe+F,KAAK,CAChBvM,GAAIrB,KACJ9B,OACAoI,UAAU,EACVrB,SAAU,QAOtByB,GAAmBwB,sBACnBxB,GAAmB8G,UAnH3B,6CAtIwB,sBAkRxB,SAASsF,EAAgBnW,GACjBA,GACAwU,EAAWlN,QAAU,SAAUQ,GAC3BwM,EAAe,OAInBzU,OAAO2H,iBAAiB,QAASgN,EAAWlN,UAE5CzH,OAAO0H,oBAAoB,QAASiN,EAAWlN,SAEnDgN,EAAetU,GAGnB,SAASoW,EAAmBzP,GACxB,IAAM0P,EAAmD1P,EAAM3G,KAE/D,IAAKqW,EAAc,OAAO,qCAC1B,IAAM9L,GAAQ5D,EAAM4D,MAAQ,IAAO,IAAM8L,EAAW3R,GAC9CmR,GAAYlP,EAAMkP,UAAY,IAAO,IAAMQ,EAAW9U,KAI5D,OACI,yBAAKR,UAAU,6BAEPsV,EAAW1M,SACP,oCACI,yBAAK2M,cAAe,SAACxO,GAGjBqO,EAAgB,CACZ5L,OACAgM,EAAGzO,EAAE0O,MACLC,EAAG3O,EAAE4O,MACL/M,UAAU,KAGf5I,UAAW,yBAA2BwJ,GAAQ0J,EAAyB,gBAAkB,IAAKpM,QAAS,YAvDlI,SAAsB0C,GACdA,GACAkK,EAAcnN,QAAU,SAAUQ,GAC9BoM,EAA0B,MAK9BlQ,uBAAW,WACPnE,OAAO2H,iBAAiB,QAASiN,EAAcnN,WAChD,MAGHzH,OAAO0H,oBAAoB,QAASkN,EAAcnN,SAEtD4M,EAA0B3J,GAwC4GoM,CAAapM,GAAO+K,EAAkB,eAAgB/K,EAAMsL,KAAa,uBAAGnO,MAAO,CAAEoK,MAAO,QAAU/Q,UAAW,YAAcsV,EAAWN,eAAiB,gBAAkB,oBAAwBM,EAAW9U,MAEjU8U,EAAWN,gBAAkB,yBAAKhV,UAAU,oBAAf,IAAmC,yBAAK2G,MAAO,CAAEkP,YAAa,SAAWP,EAAW/N,SAAS2F,KAAI,SAAC5C,EAAG8C,GAAJ,OAAU,6BAAK,kBAACiI,EAAD,CAAoBjJ,IAAKgB,EAAI5D,EAAMA,KAAMA,EAAMsL,SAAUA,EAAU7V,KAAMqL,SAAzL,MAKlC,oCACI,yBAAKiL,cAAe,SAACxO,GAGjBqO,EAAgB,CACZ5L,OACAgM,EAAGzO,EAAE0O,MACLC,EAAG3O,EAAE4O,MACL/M,UAAU,KAGf5I,UAAW,yBAA2BwJ,GAAQqJ,EAAa,gBAAkB,IAAK/L,QAAS,kBAAMyN,EAAkB,cAAe/K,EAAMsL,KAE3I,2BAAO9U,UAAW,0BAAwD,QAA3BsV,EAAmB7V,KAAiB,eAAiB,mBAEhG6V,EAAW7V,MAET6V,EAAW9U,QAYzC,SAASsV,EAAYlQ,GAEjB,OACI,yBAAK5F,UAAW,+BAAiCK,EAAW,cAAgB,YAAasG,MAAO,CAAEoP,SAAU,QAASnP,OAAQ,OAAQ+F,IAAM2G,EAAYoC,EAAI,KAAOhJ,KAAO4G,EAAYkC,EAAI,OAEpLlC,EAAY1K,UAAY,yBAAK9B,QAAS,kBAAMyN,EAAkB,iBAAkBjB,EAAY9J,OAAOxJ,UAAU,gCAArF,IAAqH,uBAAGA,UAAW,gCAAkCK,EAAW,aAAe,eAA/L,mBACxBiT,EAAY1K,UAAY,yBAAK9B,QAAS,kBAAMyN,EAAkB,gBAAiBjB,EAAY9J,OAAOxJ,UAAU,gCAApF,IAAoH,uBAAGA,UAAW,4BAA8BK,EAAW,aAAe,eAA1L,kBACzB,yBAAKyG,QAAS,kBAAMyN,EAAkB,SAAUjB,EAAY9J,OAAOxJ,UAAU,gCAA7E,IAA6G,uBAAGA,UAAW,oBAAsBK,EAAW,aAAe,eAA3K,WACA,yBAAKyG,QAAS,kBAAMyN,EAAkB,SAAUjB,EAAY9J,OAAOxJ,UAAU,gCAA7E,IAA6G,uBAAGA,UAAU,iCAA1H,YAQZ,OAjQuB4F,EAAMxE,eAA0B,IAAI0I,QAAO,SAAAC,GAAC,OAAKA,EAAEzI,QAkQtE,oCACKmT,EACG,yBAAKzU,WAAYyS,EAAa,UAAY,wBAA0BpS,EAAW,cAAgB,KAG3F,yBAIIL,UAAW,kDAAoDK,EAAW,cAAgB,mBAC1F,yBAAKL,UAAU,8CACX,yBAAKA,UAAU,oCACX,0BACI2G,MAAO,CAAEiH,WAAY,QACrB5N,UAAU,4BAEV,0BAAM8G,QAAS,kBAAM4L,GAAeD,KAChC,yBAAK9L,MAAO,CAAEoK,MAAO,OAAQxD,OAAQ,OAAQwI,SAAU,WAAYpJ,IAAK,QAAUqJ,IAAI,YAAYhW,UAAU,WAC1GyS,GAAc,uBAAGzS,UAAU,iBAAiB2G,MAAO,CAAEsP,SAAU,SAAjD,2BAElBxD,GAAc,uBAAGzS,UAAU,0BAA0BgH,OAAO,SAASkP,KAAK,wCAAuC,uBAAGlW,UAAU,sBAQ3IyU,GAAQ,6BAGD,yBAAKzU,UAAU,oDACX,yBAAKA,UAAU,yCACV2S,EAAiB,GAAK,yBAAK7L,QAAS,kBAAM6N,GAAW,IAAI3U,UAAU,eAChE,uBAAGA,UAAU,uBAKrB,yBAAKA,UAAU,+DAEX,yBAAKA,UAAU,qBACX,uBAAGA,UAAWwT,EAAUpB,KACxB,0BAAMpS,UAAU,gBAAgBwT,EAAUhT,QAIlD,yBAAKR,UAAU,0CACT2S,EAAiBT,GAAS3S,OAAS,GAAM,yBAAKuH,QAAS,kBAAM6N,EAAU,IAAI3U,UAAU,eACnF,uBAAGA,UAAU,0BAWd,GAAlB2S,GAEG,6BACI,yBAAK3S,UAAU,0DACX,0BAAMb,MAAM,iBAAiB2H,QAAS,WAClCyN,EAAkB,iBAAkBrB,GAA0B,MAC/DlT,UAAU,eAAc,uBAAGA,UAAU,wBACxC,0BAAMb,MAAM,gBAAgB2H,QAAS,WACjCyN,EAAkB,gBAAiBrB,GAA0B,MAC9DlT,UAAU,eAAc,uBAAGA,UAAU,wBAE5C,yBACI2G,MAAO,CAAE4G,OAAQ,sBAAuB0D,UAAW,SACnD,yBAAKjR,UAAW,SAAWyS,EAAa,SAAW,IAAK9L,MAAO,CAAEiH,WAAY,OAAQsD,WAAY,SAAUH,MAAO,OAAQvD,SAAU,SAC/H8F,GAAe,kBAACwC,EAAD,MAEf1C,EAAYlG,KAAI,SAACoI,EAAYlI,GAAb,OAAmB,kBAACiI,EAAD,CAAoBjJ,IAAKgB,EAAGnO,KAAMqW,UAatF,yBAAKtV,UAAW,QAAUyS,EAAa,SAAW,IAAK9L,MAAO,CAAEoP,SAAU,WAAYI,OAAQ,SAC1F,2BAAO7I,SAAU,SAACvG,GACdkM,EAAalM,EAAEC,OAAO5D,QACvByO,SAAUjM,EAAMnE,OAAOd,OAAOsK,UAAWjL,UAAU,qBAAqBoD,MAAO4P,EAAWlB,YAAY,qBAEzG,yBAAK9R,UAAU,QAAS4F,EAAMnE,OAAOd,OAAOsK,UAUtC,4BAAQnE,QAAS,WACnB6D,GAAcO,cACflL,UAAU,kCAFP,cAVkD,wCAAG,4BAAQ8G,QAAS,WACxEiM,EAAsBC,GACtBrI,GAAcQ,WAAW6H,IAC1BhT,UAAU,0BAH8C,WAIvD,6BACA,2BAAO8G,QAAS,WACZ6D,GAAcsJ,oBAAoBjB,IACnChT,UAAU,yBAFb,mCAaZ,yBAAKA,UAAW,WAAcK,EAA8B,cAAnB,mBACrC,0BAAM+V,iBAAe,oFAAoFC,gBAAc,IAAIrW,UAAU,UACjI,0BAAMA,UAAU,oBACZ,gCAAQ4F,EAAM1E,IAAI/B,MAAMA,OAAS,8CAG5ByG,EAAM1E,IAAI/B,MAAME,MAEb,uBAAGW,UAAW,QAAU4F,EAAM1E,IAAI/B,MAAME,MAAxC,QAUhB,yBAAKW,UAAU,eACV4F,EAAM7E,QAAQnC,SAEX,uBAAG+H,MAAO,CAAEoP,SAAU,WAAYpJ,IAAK,OAAS3M,UAAU,0BAI9D,0BAAMA,UAAU,sBACZ,0BAAM2G,MAAO,CAAEgG,IAAK,MAAOoJ,SAAU,YAAcjP,QAASwL,EAAgBtS,UAAU,QAEhFK,EAA2E,uBAAGL,UAAU,yBAA7E,uBAAG2G,MAAO,CAAEsP,SAAU,QAAUjW,UAAU,oBAK9D,IA2BT,yBAAK8G,QA7arB,WAEQjI,IAKC4T,GACDC,GAAc,IAqaqB/L,MAAO,CAAE4G,OAAQ,SAAWvN,UAAW,YAAeK,EAA8B,cAAnB,mBAExF,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOiW,OAAK,EAACC,KAAK,KACd,kBAAC,IAAD,CAAUC,GAAG,cAIjB,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAWE,UAAWC,KAExC,kBAAC,IAAD,CAAUH,KAAK,KAAKC,GAAG,YAQjC,yBAAKxW,UAAW,qBAAuBK,EAAW,cAAgB,KAChE,yBAAKL,UAAU,kBACX,yBAAKgW,IAAI,cACT,6BACA,yBAAKhW,UAAU,UACX,yBAAKA,UAAU,0B,cCrhB5B2W,OAnDf,SAAe/Q,GAEX,SAASgR,IACDhR,EAAMgR,SACNhR,EAAMgR,UASd,OACI,yBAAK5W,UAAU,sBAAsB2G,MAAO,CAAEC,OAAuB,YAAfhB,EAAMnG,KAAqB,IAAOmG,EAAMgB,QAAU,IAAOE,QAPnH,SAAwBC,GAChBA,EAAEC,OAAOhH,UAAUiH,MAAM,iBAAkC,YAAfrB,EAAMnG,OAAuBmG,EAAMiR,4BAC/ED,MAOA,yBAAK5W,UAAW,2BAA4C,YAAf4F,EAAMnG,KAAqB,IAAM,cAC1E,yBAAKO,UAAU,uBACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,oBAAoB4F,EAAMzG,QAE5B,YAAfyG,EAAMnG,MACH,yBAAKO,UAAU,uCACX,yBAAK8G,QAAS8P,EAAS5W,UAAU,yBAC7B,uBAAGA,UAAU,+BAQ3B4F,EAAMkR,KAAO,yBAAKC,wBAAyB,CAAEC,OAAQpR,EAAM2B,YAC5D3B,EAAMkR,KAAOlR,EAAM2B,SAGJ,YAAf3B,EAAMnG,MAEH,yBAAKO,UAAU,eAEX,yBAAKgW,IAAI,2BCqOlBiB,OAlRf,WAAoB,IAAD,EACmBpR,mBAAS,MAD5B,mBACRqR,EADQ,KACGC,EADH,OAEyBtR,mBAAS,MAFlC,mBAERuR,EAFQ,KAEMC,EAFN,OAGyBxR,mBAAS,MAHlC,mBAGRyR,EAHQ,KAGMC,EAHN,OAI6B1R,mBAAS,MAJtC,mBAIR2R,EAJQ,KAIQC,EAJR,OAKyB5R,mBAAS,MALlC,mBAKR6R,EALQ,KAKMC,EALN,OAM2B9R,mBAAS,MANpC,mBAMR+R,EANQ,KAMOC,EANP,OAO2BhS,mBAAS,MAPpC,mBAORiS,EAPQ,KAOOC,EAPP,KAQTC,EAAM/R,iBAAO,MA+FnB,OA7FAS,qBAAU,WACNtC,GAASV,WAAU,SAACuU,GAGZd,EADAc,GAGa,SAIrB5T,GAASX,WAAU,SAACwU,GAGZb,EADAa,GAGgB,SAIxB5T,GAASZ,WAAU,SAACyU,GAEZA,GACAZ,EAAgBY,GAChBH,EAAIzR,QAAU4R,EAAqB7S,IAEnCiS,EAAgB,SAIxB/S,GAAWd,WAAU,SAAC0U,GAEdA,IACAX,EAAkBW,GAClBJ,EAAIzR,QAAU6R,EAAuB9S,OAO7Cf,GAASb,WAAU,SAAC2U,GAEZA,GACAV,EAAgBU,MAOxB5T,GAAUf,WAAU,SAAC4U,GAEbA,GACAT,EAAiBS,GACjBN,EAAIzR,QAAU+R,EAAsBhT,IAGpCuS,EAAiB,SAGzBnT,GAAUhB,WAAU,SAAC6U,GAEbA,GACAR,EAAiBQ,GAEjBP,EAAIzR,QAAUgS,EAAsBjT,IAGpCyS,EAAiB,WAa1B,IAaC,oCACKX,GAAgB,kBAAC,GAAD,CAAON,KAAK,EAAM3X,MAAM,QAAQyX,QAAS,WAAQS,EAAgB,QAC9E,yBAAKrX,UAAU,eAEP,CACI,CACIX,KAAM,aAAcmB,KAAM,OAAQsG,QAAS,WACvC0R,GAAWpB,GACXxS,GAAQ,CAAEmG,QAAS,+BAM3B,CACI1L,KAAM,kBAAmBmB,KAAM,WAAYsG,QAAS,WAEhD0R,GAAWpB,GAEXtY,OAAO2Z,KAAP,0BAA+BC,mBAAmBtB,OAQ1D,CACI/X,KAAM,iBAAkBmB,KAAM,UAAWsG,QAAS,WAE9ChI,OAAO2Z,KAAP,+CAAoDC,mBAAmBtB,IAAiB,aAO/FlK,KAAI,SAACyL,EAAOzD,GACT,OACI,yBAAK9I,IAAK8I,EAAQlV,UAAU,QACxB,yBAAK8G,QAAS6R,EAAM7R,QAAS9G,UAAU,kBACvC,uBAAGA,UAAW2Y,EAAMtZ,KAAMsH,MAAO,CAAEsP,SAAU,UAC7C,6BACC0C,EAAMnY,YAelC8W,GAAgB,kBAAC,GAAD,CAAO7X,KAAM6X,EAAa7X,KAAMN,MAAOmY,EAAanY,MAAOyX,QAAS,WAAQW,EAAgB,MAAOS,EAAIzR,SAAQ,KAA/G,IAA2H+Q,EAAaxX,MACxJ0X,GAEG,kBAAC,GAAD,CAAOX,4BAA4B,EAAMC,KAAK,EAAM3X,MAAO,UAAWyX,QAAS,WAAQoB,EAAIzR,SAAQ,GAAO,GAAOkR,EAAkB,QAAnI,IAA+ID,EAAetS,KAEzJsS,EAAe1X,MAAQ,oCACpB,6BAEA,0BAAMiX,wBAAyB,CAAEC,OAAQQ,EAAe1X,SAE5D,6BACA,yBAAKE,UAAU,OACX,yBAAKA,UAAU,SACX,4BAAQ8G,QAAS,WAAQkR,EAAIzR,SAAQ,GAAOkR,EAAkB,OAASzX,UAAU,mBAAjF,QAEJ,yBAAKA,UAAU,oBAEX,4BAAQ8G,QAAS,WAAQkR,EAAIzR,SAAQ,GAAQkR,EAAkB,OAASzX,UAAU,mBAAlF,SAMf0X,GAEG,kBAAC,GAAD,CAAO9Q,OAAQ,IAAKiQ,4BAA4B,EAAMC,KAAK,EAAM3X,MAAO,QAASyX,QAAS,WAAQe,EAAgB,QAAlH,IAA8HD,EAAaxS,KAEtIwS,EAAa5X,MAAQ,oCAClB,6BAEA,0BAAMiX,wBAAyB,CAAEC,OAAQU,EAAa5X,UASjE8X,GAAiB,kBAAC,GAAD,CAAOd,KAAK,EAAMD,4BAA4B,EAAM1X,MAAOyY,EAAczY,MACvFyX,QAAS,WAAQoB,EAAIzR,SAAQ,GAAO,GAAOsR,EAAiB,QAC3DD,EAAclO,QAAQwD,KAAI,SAAC0L,EAAa1D,GACrC,IAAM2D,EAAaD,EAAOA,QAAUA,EAC9BE,EAAaF,EAAOG,KAE1B,OACI,yBAAK3M,IAAK8I,GACN,2BAAO9R,MAAOyV,EAAYvL,SAAU,SAACvG,GAAD,OAAY8Q,EAAiB,eAAKD,EAAN,CAAqBxU,MAAO2D,EAAEC,OAAO5D,UAAU5C,KAAK,WAAWf,KAAK,QAAQO,UAAU,OAAO2D,GAAI,YAAckV,IAE/K,2BAAOG,QAAS,YAAcH,GAAaA,GAC1CC,GAAc,0BAAM9Y,UAAU,2BAA0B,uBAAGA,UAAU,2BAElE,yBAAKA,UAAU,8CACV8Y,IAIT,iCAKZ,6BACA,yBAAK9Y,UAAU,eACX,yBAAKA,UAAU,iBACV4X,EAAcxU,OAAS,4BAAQ0D,QAAS,WAAQkR,EAAIzR,QAAQqR,EAAcxU,OAAQyU,EAAiB,OAAS7X,UAAU,mBAA/F,MAGxB,4BAAQ8G,QAAS,WAAQkR,EAAIzR,SAAQ,GAAQsR,EAAiB,OAAS7X,UAAU,0BAAjF,aAOX8X,GAAiB,kBAAC,GAAD,CAAOhB,KAAK,EAAMD,4BAA4B,EAAM1X,MAAO2Y,EAAc5S,KACvF0R,QAAS,WAAQoB,EAAIzR,SAAQ,GAAO,GAAOwR,EAAiB,QAC5D,2BAAO3U,MAAO0U,EAAc1U,MAAOkK,SAAU,SAACvG,GAAD,OAAYgR,EAAiB,eAAKD,EAAN,CAAqB1U,MAAO2D,EAAEC,OAAO5D,UAAUpD,UAAU,iBAGlI,6BACA,yBAAKA,UAAU,eACX,yBAAKA,UAAU,iBACV8X,EAAc1U,OAAS,4BAAQ0D,QAAS,WAAQkR,EAAIzR,QAAQuR,EAAc1U,OAAQ2U,EAAiB,OAAS/X,UAAU,mBAA/F,MAGxB,4BAAQ8G,QAAS,WAAQkR,EAAIzR,SAAQ,GAAQwR,EAAiB,OAAS/X,UAAU,0BAAjF,aAOXkX,GACG,yBAAKlX,UAAW,6BAA+BkX,EAAUnS,SAAW,UAAY,YAAcmS,EAAUlS,UAAY,mBAAqB,KACrI,yBAAKhF,UAAW,6EAAsEkX,EAAUzX,MAAQ,SAAYyX,EAAUnS,SAAW,eAAiB,gBACtJ,0BAAMgS,wBAAyB,CAAEC,OAAQE,EAAUnM,WAElDmM,EAAUlS,WAAa,6BACpB,6BACA,4BAAQ8B,QAvKhC,WACI1C,GAASZ,KAAT,eAAmB0T,EAAnB,CAA8BnS,UAAU,KACxC9B,YAAW,WACPmB,GAASZ,KAAK,QACf,MAmKsDxD,UAAW,mBAAqBkX,EAAUzX,MAAQ,SAAvF,WChQ5BwZ,SACKC,OACApF,MAAK,SAAAmF,GAcFA,EAAOE,OAAOC,YAAY,gBAbZ,CACVC,KAAM,KACNC,SAAS,EACTC,OAAQ,CACJ,oBAAqB,WAE1BC,MAAO,CACF,CAAEC,MAAO,QAASC,WAAY,SAAUC,WAAY,SAAUC,UAAW,UACzE,CAAEH,MAAO,MAAOE,WAAY,SAAUC,UAAW,kBACjD,CAAEF,WAAY,UACd,CAAEC,WAAY,gBAO9B,IAAM/W,GAAM,IAAIF,GAEhB5D,OAAO2H,iBAAiB,UAAU,WAC9B7D,GAAIE,OAAM,kBAAMqB,GAAkBX,MAAK,KAAO,QAoCnCqW,OAjCf,WAUI,OATAnT,qBAAU,WAGN,OAAO,eAGR,IAIC,kBAAC,IAAD,CAAUvE,MAAOA,GACb,kBAAC,GAAD,MAGA,kBAAC,IAAD,KAEI,kBAAC,IAAD,KAGI,kBAAC,IAAD,CAAOoU,KAAK,IAAIE,UAAWqD,SClD3BC,QACW,cAA7Bjb,OAAOsV,SAAS4F,UAEe,UAA7Blb,OAAOsV,SAAS4F,UAEhBlb,OAAOsV,SAAS4F,SAAS/S,MACvB,2DCZNgT,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF7a,SAAS8a,eAAe,SDkIpB,kBAAmBxS,WACrBA,UAAUyS,cAAcC,MACrBxG,MAAK,SAAAyG,GACJA,EAAaC,gBAEdzG,OAAM,SAAA0G,Q","file":"static/js/main.3d90c329.chunk.js","sourcesContent":["\n\nexport const types = {\n   LOADINGSTART : 'LOADINGSTART',\n   LOADINGEND : 'LOADINGEND',\n}\n\nexport const loading = (start: any) => (dispatch: any) => {\n  \n    if(start) {\n        dispatch({\n            type: types.LOADINGSTART\n        })\n    } else {\n        dispatch({\n            type: types.LOADINGEND\n        })\n    }\n  \n\n\n   \n}\n\n","import { types } from '../actions/network.action'\n\n\nconst initialState = {\n   \n      loading: false\n    \n}\n\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.LOADINGSTART:\n            \n            return {\n                ...state, loading: true\n            }\n        case types.LOADINGEND:\n            \n            return {\n                ...state, loading: false\n            }\n\n  \n        default:\n            return state;\n\n    }\n\n}","\nexport const types = {\n   SETTITLE : 'SETTITLE',\n   SETAPPFONT : 'SETAPPFONT',\n    SETUSERDATA : 'SETUSERDATA',\n    SETDARKMODE : 'SETDARKMODE',\n    SETFINISHEDAUTHENTICATIONATTEMPT: 'SETFINISHEDAUTHENTICATIONATTEMPT'\n}\nconst isPc = window.innerWidth > 800;\nexport const setTitle = (data: any) => (dispatch: any) => {\n  let title = data.title || data\n  const image = data.image || ''\n  const icon = data.icon || ''\n    document.title = `${title}   - Plugman `;\n\n    if(!isPc && title.length > 20){\n        title = (title as string).substring(0, 20) + ' ...'\n\n    }\n        dispatch({\n            type: types.SETTITLE,\n            payload: {title, image, icon}\n        })\n\n\n\n   \n}\nexport const setAppFont = (id: any) => (dispatch: any) => {\n   \n\n\n\n\n    \n\n\n        dispatch({\n            type: types.SETAPPFONT,\n            payload: id\n        })\n\n\n\n   \n}\nexport const setUserData = (data: any) => (dispatch: any) => {\n  \n\n        dispatch({\n            type: types.SETUSERDATA,\n            payload: data\n        })\n\n\n\n   \n}\nexport const setFinishedAuthenticationAttempt = () => (dispatch: any) => {\n  \n\n        dispatch({\n            type: types.SETFINISHEDAUTHENTICATIONATTEMPT\n        })\n\n\n\n   \n}\nexport const toggleDarkMode = () => (dispatch: any) => {\n    \n\n        dispatch({\n            type: types.SETDARKMODE\n        })\n\n\n\n   \n}\n\n","\n\nconst STORAGE_CONSTANTS = {\n    DARK_MODE: 'dark-mode',\n    DONT_ASK_DARK_MODE: 'DONT-ASK-dark-mode',\n    SERVER_URL: 'SERVER-URL',\n \n\n}\n\n\n\nfunction setBodyDarkMode(mode: string | boolean) {\n    const body = document.querySelector('body');\n\n    if (!body) {\n        return;\n    }\n\n    if (mode === 'true' || mode === true) {\n        body.className = 'bg-app-dark';\n    } else {\n        body.className = 'bg-app-default';\n    }\n\n}\n\n\n\nexport const serverUrl = {\n    set: (mode: string) => {\n\n\n        return localStorage.setItem(STORAGE_CONSTANTS.SERVER_URL, mode)\n    },\n    get: () => {\n        const mode = localStorage.getItem(STORAGE_CONSTANTS.SERVER_URL)\n     \n\n        return mode\n    }\n\n\n}\n\n\nexport const darkMode = {\n    set: (mode: string) => {\n\n        setBodyDarkMode(mode)\n\n        return localStorage.setItem(STORAGE_CONSTANTS.DARK_MODE, mode)\n    },\n    get: () => {\n        const mode = localStorage.getItem(STORAGE_CONSTANTS.DARK_MODE)\n        // @ts-ignore\n        setBodyDarkMode(mode)\n\n        return mode\n    }\n\n\n}\nexport const dontAskDarkMode = {\n    set: (mode: string) => {\n\n \n\n        return localStorage.setItem(STORAGE_CONSTANTS.DONT_ASK_DARK_MODE, mode)\n    },\n    get: () => {\n        const mode = localStorage.getItem(STORAGE_CONSTANTS.DONT_ASK_DARK_MODE)\n        // @ts-ignore\n \n\n        return mode\n    }\n\n\n}\n\n\n\n","\nimport { types } from '../actions/app.action'\nimport { darkMode} from '../../Providers/storage.service'\n\n\nconst initialState = {\n\n    title: '',\n   \n    userData: {\n        name: 'ayo'\n    },\n    finishedAuthenticationAttempt: false,\n    darkMode: darkMode.get() === 'true'\n\n}\n\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.SETTITLE:\n\n            return {\n                ...state, title: action.payload\n            }\n      \n   \n     \n        case types.SETDARKMODE:\n\n            const newMode = !state.darkMode\n            darkMode.set(newMode + '')\n\n\n            return {\n                ...state, darkMode: !state.darkMode\n            }\n\n\n        default:\n            return state;\n\n    }\n\n}","\n\nexport const types = {\n   SET_NOTIFICATION_AS_READ : 'SET_NOTIFICATION_AS_READ',\n   SET_NOTIFICATIONS : 'SET_NOTIFICATIONS',\n   ADD_NOTIFICATION : 'ADD_NOTIFICATION',\n}\n\nexport const setAsRead = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.SET_NOTIFICATION_AS_READ,\n            payload: data\n        })\n\n\n\n   \n}\nexport const addNotification = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.ADD_NOTIFICATION,\n            payload: data\n        })\n\n\n\n   \n}\nexport const setNotifications = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.SET_NOTIFICATIONS,\n            payload: data\n        })\n\n\n\n   \n}","\n\nexport const types = {\n   SET_SOCKET_STATUS : 'SET_SOCKET_STATUS',\n   SET_TRACKERS : 'SET_TRACKERS',\n    ADD_ACTIVITY:'ADD_ACTIVITY'\n\n}\n\nexport const setStatus = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.SET_SOCKET_STATUS,\n            payload: data\n        })\n\n\n\n   \n}\nexport const addActivity = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.ADD_ACTIVITY,\n            payload: data\n        })\n\n\n\n   \n}\nexport const setTrackers = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.SET_TRACKERS,\n            payload: data\n        })\n\n\n\n   \n}\n","\nimport { types } from '../actions/socket.action'\n\n\nconst initialState = { \n    \n    status: {},\n    tracker: {},\nactivities: []\n}\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.SET_SOCKET_STATUS:\n\n    \n\n            return {...state, status:action.payload}\n        case types.SET_TRACKERS:\n\n    \n\n            return {...state, tracker:action.payload}\n        case types.ADD_ACTIVITY:\n\n  \n\n            return { ...state, activities: [...state.activities, action.payload] }\n        \n   \n        \n\n        default:\n            return state;\n\n    }\n\n}","import {combineReducers} from 'redux';\n\nimport networkReducer from './network.reducer';\nimport appReducer from './app.reducer';\nimport notificationsReducer  from './notification.reducer';\nimport socketReducer from './socket.reducer';\n\nexport default combineReducers({\n    network: networkReducer,\n    app: appReducer,\n    notifications: notificationsReducer ,\n    socket: socketReducer,\n\n})","\nimport { types } from '../actions/notification.action'\n\n\nconst initialState = null as any\n\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.SET_NOTIFICATION_AS_READ:\n\n            const m = [\n                ...state\n            ]\n          \n            m[action.payload].read = true;\n\n            return [\n                ...m\n            ]\n        case types.ADD_NOTIFICATION:\n\n            const n = [\n                ...state\n            ]\n          \n            n.unshift(action.payload)\n\n            return [\n                ...n\n            ]\n        \n        case types.SET_NOTIFICATIONS:\n\n            return [\n                ...action.payload\n            ]\n        \n\n        default:\n            return state;\n\n    }\n\n}","import { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst  env  =  require('../env.json')\n\nconst initialState = {}\nconst middleware = [thunk]\n\n\nlet compose_ = compose(applyMiddleware(...middleware))\n\nif(!env.prod) {\n  // @ts-ignore\n    compose_ = compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nconst store = createStore(rootReducer, initialState, \n  compose_\n    )\n\nexport {store, Provider};","export const getId = () => {\n  return 'a' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\nexport class DebounceTime {\n\n  time = 400\n  ref: any;\n  active = false;\n  public start = (fn: Function, time?: number) => {\n    if (this.ref) {\n      clearTimeout(this.ref)\n    }\n\n    this.active = true;\n    if (time) {\n      this.time = time\n    }\n    const deffFun = () => {\n      fn()\n      this.active = false\n    }\n\n    this.ref = setTimeout(deffFun, this.time);\n  }\n  public destroy() {\n    clearTimeout(this.ref)\n  }\n\n\n}\n\n\nexport class BehaviourSubject {\n  initialValue = null\n  lastValue = null\n  // @ts-ignore\n  fns: { [id: string]: Function } = {};\n  constructor(value: any) {\n    this.lastValue = value\n    this.initialValue = value\n  }\n\n  public next = (newValue: any) => {\n    this.lastValue = newValue\n    this.subscribe()\n\n  }\n  public subscribe = (fn?: Function, value?: any) => {\n    let id: string;\n    if (fn) {\n      id = getId()\n      this.fns[id] = fn\n\n\n    }\n\n    if (this.fns) {\n      Object.values(this.fns).forEach(_fn => {\n        _fn(this.lastValue)\n      })\n\n    }\n\n\n    if (fn) {\n\n      return {\n        unSubscribe: () => {\n          delete this.fns[id]\n          if (Object.keys(this.fns).length === 0) {\n            this.lastValue = this.initialValue\n\n          }\n\n        }\n      }\n    }\n\n  }\n}\n\n\nexport const refreshUserDataObs = new BehaviourSubject(true)\nexport const sendToCollectionObs = new BehaviourSubject(null)\nexport const possibleResizeObs = new BehaviourSubject(false)\n\n\n\nexport const toastObs = new BehaviourSubject(null)\nexport const shareObs = new BehaviourSubject(null)\nexport const modalObs = new BehaviourSubject(null)\nexport const alertObs = new BehaviourSubject(null)\nexport const confirmObs = new BehaviourSubject(null)\nexport const selectObs = new BehaviourSubject(null)\nexport const promptObs = new BehaviourSubject(null)\nconst toasterBehaviourSubj = [new DebounceTime(), new DebounceTime()]\nexport const toaster = (data: any, _timer?: number) => {\n\n    const timer = _timer || 5000\n    toastObs.next({ ...data, incoming: true })\n\n    if (data.attention) {\n        toastObs.next({ ...data, incoming: true });\n        return;\n    }\n    toasterBehaviourSubj[0].start(() => toastObs.next(null), timer)\n\n\n    toasterBehaviourSubj[1].start(() => toastObs.next({ ...data, incoming: false }), timer - 500)\n}\nexport const modaler = (data: any) => {\n    return new Promise((resolve, reject) => {\n        modalObs.next({\n            ...data, cb: (closed: boolean) => {\n                resolve(closed)\n\n            }\n        })\n    })\n}\nexport const confirmer = (text: string, body? : string) => {\n\n    return new Promise((resolve, reject) => {\n        confirmObs.next({\n          text, body, cb: (val: boolean, throwError?: boolean) => {\n            if (throwError) {\n              reject(val)\n              return\n            } resolve(val)\n\n            }\n        })\n    })\n\n}\nexport const alerter = (text: string, body? : string) => {\n\n    return new Promise((resolve, reject) => {\n        alertObs.next({\n          text, body\n        })\n    })\n\n}\nexport const selecter = (data: any) => {\n\n    return new Promise((resolve, reject) => {\n        selectObs.next({\n          ...data, cb: (val: boolean, throwError?: boolean) => {\n            if (throwError) {\n              reject(val)\n              return\n            } resolve(val)\n\n            }\n        })\n    })\n\n}\nexport const prompter = (text: any, value?: string) => {\n\n    return new Promise((resolve, reject) => {\n        promptObs.next({\n            text,\n            value, \n            \n            cb: (val: boolean, throwError?: boolean) => {\n              if(throwError){\n                reject(val)\n                return\n              }\n                resolve(val)\n\n            }\n        })\n    })\n\n}\n\n\n\n\n\n\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport './DropdownClick.scss'\nimport { getId } from '../../../Providers';\n\n\n\nfunction isDescendant(parent: HTMLElement, child: HTMLElement) {\n    var node = child.parentNode;\n    while (node != null) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\nfunction DropdownClick(props: any) {\n\n    const [clicked, setClicked] = useState(false);\n    const DropdownClickRef = useRef(null as any);\n    const clickedFunRef = useRef(null as any);\n    const scrollRef = useRef({\n\n        fn: () => { }\n    });\n    const componentIsMounted = useRef(true)\n\n\n    function preSetClickedFun(value: boolean) {\n        const elem: HTMLDivElement | null = DropdownClickRef.current;\n        if (props.onClick) {\n            props.onClick(value)\n        }\n        if (value) {\n\n\n\n            clickedFunRef.current = (e: any) => {\n\n                // @ts-ignore\n                if ((e.target.className.match('dropdown-click-close') || !isDescendant(DropdownClickRef.current, e.target)) && componentIsMounted.current) {\n                    if (props.onClick) {\n                        props.onClick(false)\n                    }\n                    window.removeEventListener('click', clickedFunRef.current)\n                    preSetClicked(false)\n                }\n            }\n            \n            window.addEventListener('click', clickedFunRef.current)\n\n        } else {\n\n\n            if (clickedFunRef.current) {\n\n                window.removeEventListener('click', clickedFunRef.current)\n            }\n        }\n\n        preSetClicked(value);\n    }\n    function preSetClicked(value: boolean) {\n        function onScroll() {\n       \n    \n                setClicked(false);\n                // remove listener\n                document.removeEventListener('scroll', scrollRef.current.fn, true)\n\n            \n\n        }\n\n\n\n        if (props.onScrollClose) {\n            if (value) {\n                scrollRef.current.fn = onScroll;\n\n                // listen to scroll event\n                document.addEventListener('scroll', scrollRef.current.fn, true)\n\n\n            } else {\n                document.removeEventListener('scroll', scrollRef.current.fn, true)\n\n            }\n        }\n        setClicked(value)\n    }\n\n    useEffect(() => {\n\n\n        return () => {\n            componentIsMounted.current = false;\n\n\n            if (clickedFunRef.current) {\n                window.removeEventListener('click', clickedFunRef.current)\n                document.removeEventListener('scroll', scrollRef.current.fn, true);\n            }\n        };\n    }, []);\n\n\n    return (\n        <div ref={DropdownClickRef} style={{\n            zIndex: clicked ? 5 : 1\n        }} className={'DropdownClick ' + (props.block ? 'd-block' : 'd-inline-block')}>\n            <div\n\n                onClick={() => preSetClickedFun(!clicked)} className='one'>\n                {props.children[0]}\n            </div>\n            {clicked &&\n                <div className='two'>\n                    {props.children[1]}\n                </div>}\n\n\n\n        </div>\n    )\n\n}\n\nexport default DropdownClick;","\nimport { getId } from './index';\n\nconst apiCacheHash: any = {\n\n}\ninterface ApiCache<TR> {\n    then: (fn: (arg: TR) => any) => ApiCache<any>;\n    catch: (fn: any) => ApiCache<any>;\n    finally: (fn: any) => ApiCache<any>;\n\n\n}\ninterface ApiCacheConstructor {\n    new <TR>(url: string, p: Promise<any>): ApiCache<TR>;\n}\n\n// @ts-ignore\nexport const ApiCache: ApiCacheConstructor = class _apiCache {\n    private thenCb: CallableFunction | undefined;\n    private catchCb: CallableFunction | undefined;\n    private finallyCb: CallableFunction | undefined;\n\n    constructor(url: string, p: any) {\n\n        setTimeout(() => {\n            if (apiCacheHash[url] && this.thenCb) {\n\n                this.thenCb(apiCacheHash[url])\n            }\n        }, 1);\n\n        console.log(apiCacheHash)\n\n\n\n        p.then((_: any) => {\n            apiCacheHash[url] = _;\n            this.thenCb && this.thenCb(_)\n        })\n        p.catch((_: any) => this.catchCb && this.catchCb(_))\n        p.finally(() => this.finallyCb && this.finallyCb())\n\n    }\n\n\n    then = (cb: CallableFunction) => {\n        this.thenCb = cb\n\n        return this.chainer()\n\n    }\n    catch = (cb: CallableFunction) => {\n        this.catchCb = cb\n        return this.chainer()\n    }\n    finally = (cb: CallableFunction) => {\n        this.finallyCb = cb\n        return this.chainer()\n    }\n    private chainer = () => {\n        return {\n            catch: this.catch,\n            then: this.then,\n            finally: this.finally,\n        }\n    }\n}\n\nexport class Throttle {\n\n    time = 100\n    wait = false;\n    skip = 0\n    times = 0\n    constructor(time: number, skip?: number) {\n\n        this.time = time\n        this.skip = skip || 0\n\n    }\n    start(cb: CallableFunction) {\n\n\n        if (!this.wait) {\n            this.times++\n            if (this.skip && this.times === this.skip) {\n\n            } else {\n                cb()\n                this.wait = true;\n            }\n\n            setTimeout(() => {\n                this.wait = false;\n            }, this.time);\n        }\n\n\n    }\n    resetSkip() {\n        this.times = 0\n    }\n\n\n}\n\n\nexport class DebounceTime {\n\n    time = 400\n    ref: any;\n    active = false;\n    public start = (fn: Function, time?: number) => {\n        if (this.ref) {\n            clearTimeout(this.ref)\n        }\n\n        this.active = true;\n        if (time) {\n            this.time = time\n        }\n        const deffFun = () => {\n            fn()\n            this.active = false\n        }\n\n        this.ref = setTimeout(deffFun, this.time);\n    }\n    public destroy() {\n        clearTimeout(this.ref)\n    }\n\n\n}\n\n\nexport class BehaviourSubject {\n    initialValue = null\n    lastValue = null\n    // @ts-ignore\n    fns: { [id: string]: Function } = {};\n    constructor(value: any) {\n        this.lastValue = value\n        this.initialValue = value\n    }\n\n    public next = (newValue: any) => {\n        this.lastValue = newValue\n        this.subscribe()\n\n    }\n    public subscribe = (fn?: Function, value?: any) => {\n        let id: string;\n        if (fn) {\n            id = getId()\n            this.fns[id] = fn\n\n\n        }\n\n        if (this.fns) {\n            Object.values(this.fns).forEach(_fn => {\n                _fn(this.lastValue)\n            })\n\n        }\n\n\n        if (fn) {\n\n            return {\n                unSubscribe: () => {\n                    delete this.fns[id]\n                    if (Object.keys(this.fns).length === 0) {\n                        this.lastValue = this.initialValue\n\n                    }\n\n                }\n            }\n        }\n\n    }\n}\n\n\nexport const objectClone = <T>(obj: T) => {\n\n    if (!obj) {\n        return obj\n    }\n\n\n    return JSON.parse(JSON.stringify(obj)) as T\n}\n\nexport const wait = (miliseconds: number = 5000) => {\n\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve()\n        }, miliseconds);\n    })\n\n}\n\n\nlet textArea: any;\nexport let copy: any;\n\nfunction isOS() {\n    return navigator.userAgent.match(/ipad|iphone/i);\n}\n\nfunction createTextArea(text: any) {\n\n    textArea = document.createElement('textArea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n}\n\nfunction selectText() {\n    let range: any,\n        selection: any;\n\n    if (isOS()) {\n        range = document.createRange();\n        range.selectNodeContents(textArea);\n        selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n        textArea.setSelectionRange(0, 999999);\n    } else {\n        textArea.select();\n    }\n}\n\nfunction copyToClipboard() {\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n}\n\ncopy = function (text: any) {\n    createTextArea(text);\n    selectText();\n    copyToClipboard();\n};\n","import { CONSTANTS } from './../env';\nimport * as storage from './storage.service'\nexport const getId = () => {\n    return 'a' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}","import { getId } from './index';\nimport { BehaviourSubject } from './helpers';\n\n\nlet data: any[] = []\nconst idToRequestHash: any = {\n\n}\nconst defaultCollection = [\n    {\n        id: getId(),\n        name: 'introduction to emit requests',\n        isFolder: false,\n        event: \"message\",\n        type: \"emit\",\n        emitBody: `{\"foo\": \"bar}`\n    },\n    {\n        id: getId(),\n        name: 'introduction to listen requests',\n        isFolder: false,\n        event: \"message\",\n        type: \"listen\",\n        listenBody: `{\"foo\": \"bar}`\n    },\n    {\n        id: getId(),\n        name: 'Yep ! a folder 😉',\n        isFolder: true,\n        children:[\n            {\n                id: getId(),\n                name: 'i am a request in a folder',\n                isFolder: false,\n                event: \"message_listener\",\n                type: \"listen\",\n                listenBody: `{\"foo\": \"bar}`\n            },\n        ],\n    },\n    {\n        id: getId(),\n        name: 'Right click on me to see folder options',\n        isFolder: true,\n        children:[\n        \n        ],\n    }\n]\n\n\nexport class CollectionsService {\n    public static persist() {\n        localStorage.setItem('storage', JSON.stringify(data))\n\n    }\n    public static load() {\n        data = JSON.parse(localStorage.getItem('storage') || JSON.stringify(defaultCollection))\n\n    }\n\n    public static modifyAll(data: any) {\n        collectionsObs.next(data);\n\n    }\n    private static setData(d: any) {\n        data = d;\n    }\n    public static generateRequestHash() {\n        function folderParse(dd: any[]) {\n            dd.forEach(d => {\n                if (d.isFolder) {\n                    folderParse(d.children || [])\n                } else {\n                    idToRequestHash[d.id] = d\n                }\n            })\n\n        }\n        folderParse(data)\n\n    }\n    public static getRequestHash() {\n        return idToRequestHash;\n\n\n\n    }\n    public static getRequestFromId(tree: string) {\n\n        return idToRequestHash[tree]\n\n    }\n    public static treeDataModifier(options: any = {}, tree: string, cb?: any, localCollections?: any[]): any {\n        const treeSplit = tree.split('/').filter(_ => _)\n\n        let treeIndex = 0;\n        let targetC;\n\n\n        function treeDataModifierF(cb?: any, localCollections?: any[]): any {\n            let lastLoop = false;\n            if (treeIndex === (treeSplit.length - 1)) {\n                lastLoop = true\n            }\n            let collectionTree: any[] = localCollections || JSON.parse(JSON.stringify(data));\n\n\n            if (treeSplit.length === 0) {\n\n                if (cb) {\n                    cb(null, collectionTree)\n\n                }\n                CollectionsService.setData(collectionTree);\n                if (options.emit) {\n\n                    collectionsObs.next(data);\n                }\n                return { c: null, collectionTree }\n\n            }\n\n\n\n\n\n\n            const id = treeSplit[treeIndex];\n\n\n\n            for (let c of collectionTree) {\n                if (c.id === id) {\n                    targetC = c;\n\n                    if (c.isFolder && (treeIndex < (treeSplit.length - 1))) {\n\n                        treeIndex++\n                        treeDataModifierF(cb, c.children)\n\n\n                    }\n\n\n\n                    if (cb && lastLoop) {\n\n                        cb(c, collectionTree)\n\n                    }\n                    CollectionsService.setData(collectionTree);\n                    if (options.emit) {\n\n                        collectionsObs.next(data);\n                    }\n\n                    return { c: targetC, collectionTree }\n\n                }\n            }\n\n\n        }\n\n      \n        try {\n         \n\n            return treeDataModifierF(cb, localCollections)\n            //  data = data.[]\n\n\n        }\n        catch (e) {\n\n            return null\n\n        }\n\n    }\n\n\n\n\n}\nCollectionsService.load()\nCollectionsService.generateRequestHash();\n\nexport const collectionsObs = new BehaviourSubject(data)\n\n\n\n\nexport default CollectionsService","import { CollectionsService } from './Collections.service';\nimport { setTimeout } from 'timers';\nimport { BehaviourSubject } from './helpers';\nimport { toaster } from './core.service';\nimport io from 'socket.io-client';\n\nimport { addNotification } from '../store/actions/notification.action';\nimport { store } from '../store';\nimport { addActivity, setStatus, setTrackers } from '../store/actions/socket.action';\n\n\nlet tracker: {\n    [id: string]: {\n        type: 'emit' | 'listen'\n        event: string\n    }\n\n} = {}\nlet listenEventToId:{\n    [event: string]: string\n\n}={}\nlet lastListenEvent: any = {}\nlet status: any = {}\n\n\nclass SocketService {\n    // @ts-ignore\n    socket: SocketIOClient.Socket;\n    // @ts-ignore\n    host: string;\n    public initialize(host: string, cb?: any) {\n       \n            this.host = host;\n            this.socket = io(host)\n\n            this.socket.on('connect', () => {\n                toaster({ type: 'success', message: `<i class='fa fa-plug mr-2 '> </i>  Connected 🎉🎉` })\n                if(cb){\n                    cb(true)\n                }\n               \n                this.emitActivity('listen', 'connect')\n                status.connected = true\n                this.next()\n\n            \n            this.socket.on('disconnect', () => {\n\n                this.disconnect()\n                // this.initialize(this.host)\n\n            })\n\n        })\n      \n    }\n    public initializeAndListen(host: string) {\n        this.initialize(host, () => {\n            const h = CollectionsService.getRequestHash()\n            Object.values(h).forEach((b: any) => {\n                if (b.type === 'emit' && b.event) {\n                    this.emit(b.id, b.event, b.emitBody)\n                }\n                if (b.type === 'listen' && b.event) {\n                    this.listen(b.id, b.event)\n                }\n            })\n\n        })\n  \n      \n\n     \n\n     \n    }\n    private next() {\n        store.dispatch(setStatus(status))\n    }\n    private emitActivity(type: string, event: string, data?: any) {\n        store.dispatch(addActivity({ type, event, data }))\n\n    }\n    private emitTracker(id?: string, data?: any) {\n        if (!id) {\n            tracker = {};\n            store.dispatch(setTrackers(tracker))\n            return\n        }\n        if (!data) {\n            delete tracker[id];\n        } else {\n            tracker[id] = data\n        }\n\n\n\n        store.dispatch(setTrackers(tracker))\n\n    }\n    getLastListenEvent(event: string){\n        return lastListenEvent[event]\n    }\n    removeFromTrackerIfExist(id:string){\n        \n        if(tracker[id]){\n            if (tracker[id].type === 'listen'){\n                delete listenEventToId[tracker[id].event]\n                delete lastListenEvent[tracker[id].event]\n                this.socket.removeListener(tracker[id].event);\n            }\n            this.emitTracker(id)\n        }\n\n    }\n    public disconnect() {\n        toaster({ type: 'danger', message: `<i class='fa fa-warning mr-2 '> </i>  Disconnected` })\n        // @ts-ignore\n        this.socket.destroy();\n        // @ts-ignore\n        delete this.socket;\n        // @ts-ignore\n        this.socket = null;\n\n        status.connected = false\n        this.emitActivity('listen', 'disconnect')\n        this.emitTracker()\n        this.next()\n        listenEventToId = {}\n        lastListenEvent = {}\n    }\n\n    cancelListen(id: string, event: string) {\n        this.emitTracker(id)\n        delete listenEventToId[event]\n        delete lastListenEvent[event]\n        this.socket.removeListener(event);\n    }\n  \n\n    listen(id: string, event: string) {\n        if (listenEventToId[event] ){\n            toaster({ type: 'danger', message: `<i class='fa fa-info mr-2 '> </i>  A request is already listening to this event \"<b>${event}</b>\"` })\n            return\n        }\n        if (tracker[id] && tracker[id].type === 'listen') {\n            return;\n        }\n        this.emitTracker(id, {\n            type: 'listen',\n            event\n\n        })\n \n        listenEventToId[event] = id;\n\n        this.socket.on(event, (data: any) => {\n         \n           \n        \n            lastListenEvent[event] = (typeof data === 'string' ? data : JSON.stringify(data))\n            this.emitActivity('listen', event, (typeof data === 'string' ? data : JSON.stringify(data)))\n\n        })\n    }\n    emit(id: string, event: string, data: any) {\n\n        // if the previous one was listen, remove it\n\n        if (tracker[id] && tracker[id].type === 'listen') {\n            delete listenEventToId[event]\n            this.socket.removeListener(event);\n\n\n        }\n        if (!tracker[id] || tracker[id].type != 'emit') {\n            this.emitTracker(id, {\n                type: 'emit',\n                event\n\n            })\n        }\n\n        this.socket.emit(event, data)\n\n        this.emitActivity('emit', event, data)\n\n    }\n\n    private onMessage(data: { type: 'toast' | 'new-notification' | 'modal' | 'action', data: any }) {\n\n        if (data.type === 'modal') {\n            return\n        }\n        if (data.type === 'action') {\n            return\n        }\n        if (data.type === 'new-notification') {\n            //console.log(data)\n            store.dispatch(addNotification(data.data))\n\n            toaster({ message: '1 new notification ' })\n\n            return\n        }\n\n        toaster(data.data)\n\n\n    }\n}\n\nconst socketService = new SocketService()\n\nexport default socketService","import React, { useEffect, useRef, useState } from 'react'\nimport './Activity.scss';\nimport { connect } from 'react-redux'\nimport { setTitle } from '../../../store/actions/app.action'\nimport Editor from '@monaco-editor/react';\nimport DropdownClick from '../../misc/DropdownClick/DropdownClick';\n\nconst DEFAULTS = {\n    'listen-connect': true,\n    'listen-disconnect': true,\n}\nfunction Activity(props: any) {\n    const [events, setEvents] = useState(DEFAULTS)\n    const eventsDisplayRef = useRef(null as unknown as HTMLDivElement);\n    function setEventRefF(hash: any, e?: any) {\n    \n        console.log({hash})\n\n        const c = { ...events }\n\n        Object.keys(hash).forEach(key => {\n\n            if (c[key] == undefined) {\n                c[key] = e ? hash[key] : true\n            }else if(e){\n                c[key] = hash[key] \n            }\n            \n\n\n        })\n\n\n       \n\n        setEvents(c)\n\n    }\n\nfunction keyGen(type: any,event: any){\n    return type + '-' + event\n}\n\n    useEffect(() => {\n        const hash: any = {};\n\n        (Object.values(props.socket.tracker) as any[]).forEach(e => {\n            const key = keyGen(e.type , e.event);\n            hash[key] = true;\n\n\n        });\n     \n        setEventRefF(hash)\n\n\n\n    }, [props.socket.tracker])\n\n    useEffect(() => {\n\n\n        setTimeout(() => {\n            eventsDisplayRef.current?.scrollTo({\n                left: 0,\n                top: eventsDisplayRef.current.scrollHeight,\n                behavior: 'smooth'\n            })\n\n\n        }, 500)\n\n    }, [props.socket.activities])\n\n \n    const totalEvents = Object.values(events);\n    const activeEvents = totalEvents.filter(_=>_) \n\n    return (\n\n        <div className='Activity'>\n            <div className='change-in-dark-1 mb-2' style={{ marginTop: '5px' }}> Activity</div>\n       \n            <DropdownClick onClick={(opened:boolean) => {\n               if(!opened){\n                  \n               }\n            }} block={true}>\n                <div className='border pr-3 pl-2 pt-2 pb-2 change-in-dark-1 rounded capitalize input-mimick cursor '>\n                    {activeEvents.length == totalEvents.length ? 'All' : (activeEvents.length + \" Events\")}\n                </div>\n\n                <div className='change-in-dark-1 capitalize p-2 input-mimick'>\n \n                    {Object.keys(events).map((k, i) => <div key={i} className=' '><>\n                        <input\n                            checked={events[k]}\n                        onChange={(e: any) => {\n                            \n                           setEvents({\n                               ...events, [k]:e.target.checked\n                           })\n                        }} type='checkbox' className='cursor mr-1' />\n                    {k}</></div>)}\n                </div>\n\n\n\n            </DropdownClick>\n            <br />\n\n\n            <div ref={eventsDisplayRef} style={{ height: 'calc(100vh - 180px)', overflow: 'auto' }}>\n                {(props.socket.activities as any[]).map((activity, i) => {\n                    const isActivityEmit = activity.type == 'emit';\n                    const showEvent = events[keyGen(activity.type, activity.event)] != false\n                    return (\n                        <div key={i}>\n                            {showEvent ?<>\n                            <div\n                                className={'p-2 text-color-default border rounded ' + (isActivityEmit ? 'border-primary' : 'border-secondary')}\n                                style={\n                                    {\n                                        marginLeft: (isActivityEmit ? '80px' : '0px'),\n                                        marginRight: (!isActivityEmit ? '80px' : '0px')\n                                    }\n\n\n                                }>\n                                    <span style={{ display: 'block', textAlign: (isActivityEmit ? 'right' : 'left') }}>{activity.event} |   <small className={'p-1  font-weight-bold ' + ((activity as any).type == 'emit' ? 'text-primary' : 'text-secondary')} >{\n                                        // @ts-ignore\n                                        activity.type}</small></span>\n\n                                {activity.data && <div >\n                                    <Editor options={{\n                                        readOnly: true,\n                                        lineNumbers: \"off\",\n                                        scrollBeyondLastLine: false,\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on',\n                                        automaticLayout: true\n\n                                    }} theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'}\n                                        height='50px'\n                                        value={activity.data} language=\"json\" />\n\n                                </div>}\n                            </div>\n                            <br />\n                            </>: <></>}\n                        </div>\n                    )\n                })}\n\n\n            </div>\n        </div>\n\n\n    )\n}\n\n\nconst mapStateToProps = (state: any) => ({\n\n    app: state.app,\n    socket: state.socket\n})\n\n\nexport default connect(mapStateToProps, { setTitle })(Activity)","import React, { useEffect, useRef, useState } from 'react'\nimport './Request.scss';\nimport { connect } from 'react-redux'\nimport { setTitle } from '../../../store/actions/app.action'\nimport DropdownClick from '../../misc/DropdownClick/DropdownClick';\nimport { sendToCollectionObs, toaster } from '../../../Providers/core.service';\nimport { CollectionRequest } from '../../types';\nimport CollectionsService from '../../../Providers/Collections.service';\nimport socketService from '../../../Providers/socket.service';\nimport Activity from '../Activity/Activity';\nimport Editor, { ControlledEditor } from '@monaco-editor/react';\n\n\n\nfunction Request(props: any) {\n    const [saved, setSaved] = useState(true);\n    const [requestTree, setRequestTree] = useState('');\n    const [activeCellIndex, setActiveCellIndex] = useState(0);\n    const [showDetails, setShowDetails] = useState(false);\n    const [showActivity, setShowActivity] = useState(true);\n    const [tabs, setTabs] = useState([] as any[])\n    const [activeRequest, setActiveRequest] = useState(null as unknown as CollectionRequest);\n    const subs = useRef([] as any[])\n    const navbarCriticalChanged = useRef(false);\n\n    const cells = activeRequest && activeRequest.type == 'emit' ? ['EmitBody', 'Script'] : ['ListenBody', 'Script']\n\n\n    useEffect(() => {\n        props.setTitle('Request');\n\n\n    }, [])\n    useEffect(() => {\n\n        subs.current.push(sendToCollectionObs.subscribe((data: any) => {\n            if (!data) {\n                return\n            }\n\n            if (tabs.indexOf(data.tree) == -1) {\n                const tabsClone = [...tabs, data.tree];\n                setTabs(tabsClone)\n            }\n            if (!saved) {\n                save()\n            }\n         \n\n            // get old emitted message\n            if (data.request.type == 'listen') {\n                const plausibleOldEmittions = socketService.getLastListenEvent(data.request.event);\n                // get old emittions, the ones that happened when yoy were away\n                if (plausibleOldEmittions && plausibleOldEmittions != data.request.listenerBody){\n                    data.request.listenerBody = plausibleOldEmittions\n\n                    toaster({ type: 'info', message: `<i class='fa fa-info mr-2 '> </i> Listen Body updated for this request` })\n                    setTimeout(() => {\n                        setSaved(false)\n                    }, 500);\n                }\n\n             \n            \n\n            }\n            setActiveRequest(data.request)\n            setRequestTree(data.tree)\n        }))\n\n        return () => {\n            subs.current.forEach((sub: any) => sub.unSubscribe())\n     \n        }\n\n    }, [tabs, activeRequest])\n\n    const user = props.app.userData;\n\n    const darkMode = props.app.darkMode;\n    function handleChange(e: any) {\n        if (saved) {\n            setSaved(false);\n        }\n        if (e.target.name == 'name' || e.target.name == 'type') {\n            navbarCriticalChanged.current = true\n        }\n        const clone: any = { ...activeRequest }\n        clone[e.target.name] = e.target.value;\n        setActiveRequest(clone)\n\n\n\n    }\n    function save() {\n\n        CollectionsService.treeDataModifier({ emit: navbarCriticalChanged.current }, requestTree, (d: any) => {\n\n            console.log({ d })\n            Object.keys(activeRequest).forEach(k => {\n                d[k] = activeRequest[k]\n            })\n        })\n        CollectionsService.generateRequestHash();\n        CollectionsService.persist();\n        setSaved(true)\n\n    }\n    function deleteTab(tab: string) {\n        console.log('delete ', tab)\n\n        if (tab == requestTree) {\n            save()\n            setActiveRequest(null as unknown as any);\n            setRequestTree('')\n        }\n        const tabKeys = Array.from(tabs.keys());\n        const tabsClone = tabs.filter(t => t != tab);\n\n        setTabs(tabsClone)\n\n    }\n    function activateTab(tab: string) {\n        if (tab == requestTree) {\n            return;\n        }\n        if (!saved) {\n            save()\n        }\n        const ids = tab.split('/')\n        const id = ids[ids.length - 1]\n\n        setActiveRequest(CollectionsService.getRequestFromId(id))\n        setRequestTree(tab)\n\n\n\n    }\n    function tabTreeToName(tree: string) {\n        const ids = tree.split('/')\n        const id = ids[ids.length - 1]\n        return CollectionsService.getRequestFromId(id).name\n    }\n\n    function action(type: string) {\n        if (!props.socket.status.connected) {\n            toaster({ type: 'danger', message: `<i class='fa fa-info mr-2 '> </i>  You are not connected` })\n\n            return\n        }\n        if (type == 'emit') {\n            try {\n                new Function(activeRequest.script)()(activeRequest.emitBody, (cb: any) => {\n                    console.log({ cb })\n                })\n            } catch (e) {\n\n            }\n\n\n            socketService.emit(activeRequest.id as any, activeRequest.event, activeRequest.emitBody)\n        } else if (type == 'listen') {\n            socketService.listen(activeRequest.id as any, activeRequest.event)\n\n        } else if (type == 'cancel-listen') {\n            socketService.cancelListen(activeRequest.id as any, activeRequest.event)\n        }\n    }\n\n    const alreadyListening = (activeRequest && props.socket.tracker[activeRequest.id] && props.socket.tracker[activeRequest.id].type == 'listen')\n\n    const handleEditorChange = (ev: any, value: any, type: any) => {\n        setSaved(false)\n        if (type == 'emit') {\n            setActiveRequest({ ...activeRequest, emitBody: value });\n        }\n        if (type == 'script') {\n            setActiveRequest({ ...activeRequest, script: value });\n        }\n\n    };\n    const editNameAndDescription = () => {\n\n        alert('coming soon......')\n    }\n\n\n\n    return (\n\n        <div className='Request h-100'>\n\n            <div className='row h-100'>\n                <div className={'h-100 p-0 ' + (props.app.darkMode ? ' bg-dark ' : '') + (showActivity ? 'border-right  col-md-9' : 'col-md-12')}>\n                    <div className={'pt-2 pl-2 pr-2 ' + (props.app.darkMode ? ' bg-dark-light ' : 'bg-default-light')} style={{ width: '100%', overflowX: 'auto', overflowY: 'hidden', whiteSpace: 'nowrap' }}>\n                        {tabs.map((tab, i) => <span key={i} className={'cursor p-1 text-color-default ' + (i == 0 ? ' ' : 'border-left ') + (tab == requestTree ? (props.app.darkMode ? ' bg-dark ' : 'bg-app') : '')}><span onClick={() => activateTab(tab)} className='mr-1 small font-weight-bold'> {tabTreeToName(tab)}</span> <span onClick={() => deleteTab(tab)}> <i className='fa fa-close'></i></span> </span>)}\n                    </div>\n                    <div style={{ height: 'calc(100vh - 180px)', overflow: 'auto' }} className='p-2'>\n                        {activeRequest ? <>\n\n\n                            <div className='change-in-dark-1 mb-2' style={{ marginTop: '5px' }}>\n                                <div className='float-right'>\n                                    <div onClick={() => setShowActivity(!showActivity)} className='cursor text-primary'>\n                                        {showActivity ? <>\n                                            <i className='fa fa-arrow-right'></i>\n                                        </> : <>\n                                                <i className='fa fa-arrow-left'></i>\n                                            </>}\n\n\n                                    </div>\n                                </div>\n                                <div><span className='cursor' onClick={() => setShowDetails(!showDetails)}><i style={{ width: '15px' }} className={' fa mr-1 ' + (showDetails ? 'fa-caret-down' : 'fa-caret-right')}></i>{activeRequest.name}</span> <span className='cursor small ml-2' onClick={() => editNameAndDescription()}><i className='fa fa-pen'></i></span></div>\n\n                                {showDetails &&\n\n                                    <div style={{ marginLeft: '15px' }} className=' small'>\n                                        {activeRequest.description ? <>{activeRequest.description}</> : <small className='cursor' onClick={() => editNameAndDescription()}>Add description<i className='fa fa-pen ml-2'></i></small>}\n                                    </div>\n                                }\n                            </div>\n\n                            <div className='request-bar'>\n                                <div className='request-bar-item request-bar-item-1'>\n\n\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <select disabled={activeRequest.type == 'listen' && alreadyListening} name=\"type\" onChange={handleChange} value={activeRequest.type} className='form-control'>\n                                                <option value='emit'>Emit</option>\n                                                <option value='listen'> Listen</option>\n                                            </select>\n\n                                        </div>\n\n                                        <input type=\"text\" disabled={activeRequest.type == 'listen' && alreadyListening} value={activeRequest.event} name=\"event\" onChange={handleChange} className=\"form-control\" placeholder={activeRequest.type == 'emit' ? \"Add emitter\" : \"Add listener\"} />\n                                    </div>\n\n\n                                </div>\n                                <div className='request-bar-item request-bar-item-2'>\n                                    {activeRequest.type == 'emit' && <button onClick={() => action('emit')} className=\"btn btn-secondary\" type=\"button\" >Emit</button>}\n                                    {activeRequest.type == 'listen' && <button onClick={() => action(alreadyListening ? 'cancel-listen' : 'listen')} className=\"btn btn-secondary\" type=\"button\" >{alreadyListening ? 'Cancel listener' : 'Listen'}</button>}\n\n                                </div>\n                                <div className='request-bar-item request-bar-item-3'>\n\n                                    {!saved && <button onClick={save} className=\"btn btn-outline-secondary\" type=\"button\">Save</button>}\n                                </div>\n\n                            </div>\n                            <br />\n                            <div className='text-color-default' style={{}}>\n                                {cells.map((cell, i) => {\n                                    return (\n                                        <div onClick={() => setActiveCellIndex(i)} key={i} className={'cell mr-2 p-2  d-inline cursor ' + (activeCellIndex == i ? 'border-bottom border-secondary' : '')} style={{ borderBottomWidth: '5px' }}>\n                                            {cell}\n                                        </div>)\n                                })}\n                            </div>\n                            <br />\n\n                            {activeCellIndex == 0 && activeRequest.type == 'emit' &&\n\n                                <div>\n\n\n\n                                    <ControlledEditor theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'} options={{\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on'\n\n\n                                    }} height=\"calc(100vh - 300px)\" onChange={(ev: any, value: any) => handleEditorChange(ev, value, 'emit')} value={activeRequest.emitBody || ''} language=\"json\" />\n                                </div>}\n\n                            {activeCellIndex == 0 && activeRequest.type == 'listen' &&\n\n                                <div>\n\n                                    <ControlledEditor theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'} options={{\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on',\n                                        readOnly: true\n\n                                    }} height=\"calc(100vh - 300px)\" value={activeRequest.listenerBody || ''} language=\"json\" />\n\n                                    <small className='text-color-default'>Listen body is automatically updated when this event is called</small>\n                                </div>}\n                            {activeCellIndex == 1 &&\n\n                                <div>\n\n                                    <ControlledEditor onChange={(ev: any, value: any) => handleEditorChange(ev, value, 'script')} theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'} options={{\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on',\n\n\n                                    }} height=\"calc(100vh - 300px)\" value={activeRequest.script || ''} language=\"javascript\" />\n\n\n                                </div>}\n\n\n\n                        </> : <div style={{\n                            height: 'calc(100vh - 200px)',\n                            display: 'flex',\n                            alignItems: 'center',\n\n                            //    justifyContent: 'center'\n                        }}>\n\n                                <div className='h4 change-in-dark-1 p-4'>\n\n                                    Open a Request\n                                <br />\n                                    <br />\n                                    <b>How to use</b>\n                                    <ol>\n                                        <li>Connect  to socket url</li>\n                                        <li>Make an emit request </li>\n                                        <li>create a listen request</li>\n                                        <li>Receive the request from your server and emit back the listen event</li>\n\n                                        <li> Emit the <i>emit</i> request </li>\n                                        <li>Listen to the <i>listen</i> request</li>\n                                    </ol>\n\n                                </div>\n                            </div>\n                        }\n\n                    </div>\n                </div>\n                <div className={showActivity ? 'col-md-3 h-100' : \"d-none\"}>\n                    <Activity />\n\n\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\n\nconst mapStateToProps = (state: any) => ({\n\n    app: state.app,\n    notifications: state.notifications,\n    socket: state.socket\n})\n\n\nexport default connect(mapStateToProps, { setTitle })(Request)","import React, { useState, useEffect, useRef } from 'react'\nimport './Layout.scss'\nimport { Route, Redirect, Link, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { loading } from '../../../store/actions/network.action'\nimport { setUserData, toggleDarkMode, setFinishedAuthenticationAttempt } from '../../../store/actions/app.action'\nimport { setNotifications } from '../../../store/actions/notification.action'\n\nimport { refreshUserDataObs, confirmer, sendToCollectionObs, getId, prompter } from '../../../Providers/core.service';\n\n\nimport { toaster } from '../../../Providers/core.service'\n\nimport DropdownClick from '../DropdownClick/DropdownClick';\n\n\nimport * as storage from '../../../Providers/storage.service'\nimport socketService from '../../../Providers/socket.service';\nimport Request from '../../modules/Request/Request';\nimport { CollectionFolder, CollectionRequest } from '../../types';\nimport CollectionsService, { collectionsObs } from '../../../Providers/Collections.service';\nimport { setTimeout } from 'timers';\n\n\n\nconst isPc = window.innerWidth > 800;\n\nconst navLinks = [\n\n    {\n        name: 'Collections',\n        link: '/request',\n        fa: ' fa fa-th'\n    },\n\n\n]\n\nfunction Layout(props: any) {\n\n\n\n\n    const [sidebarMin, setSidebarMin] = useState(!isPc) //isPc\n    const [activeNavIndex, setActiveNavIndex] = useState(0)\n    const [activeTree, setActiveTree] = useState('')\n    const [socketUrl, setSocketUrl] = useState(storage.serverUrl.get() || '')\n    const [lastSelectedFolderTree, setLastSelectedFolderTree] = useState('/')\n    const [collections, setCollections] = useState([] as any[])\n    const [contextMenu, setContextMenu] = useState(null as unknown as any)\n    const activenav = navLinks[activeNavIndex];\n    const contextRef = useRef(null as unknown as any)\n    const lastFolderRef = useRef(null as unknown as any)\n    const collectionsModified = useRef(0)\n\n    const darkMode = props.app.darkMode;\n\n    function toggleDarkMode() {\n        props.toggleDarkMode()\n    }\n\n\n    useEffect(() => {\n        if (window.matchMedia('(prefers-color-scheme: dark)').matches && storage.darkMode.get() != 'true' && storage.dontAskDarkMode.get() != 'true'\n\n        ) {\n            confirmer(`We detected your ${isPc ? 'device' : 'phone'} is in dark mode, Do you want to change to dark mode ?`)\n                .then(_ => {\n                    if (!_) {\n                        return\n                    }\n                    toggleDarkMode()\n                })\n                .catch(() => {\n                    storage.dontAskDarkMode.set('true')\n\n                })\n        }\n\n\n        collectionsObs.subscribe((data: any) => {\n\n            setCollections(data)\n        })\n\n        window.addEventListener('contextmenu', (e: any) => e.preventDefault());\n        if (socketUrl) {\n\n\n            socketService.initializeAndListen(socketUrl)\n        }\n\n        return () => {\n\n\n\n        }\n    }, [])\n\n    useEffect(() => {\n        if (collectionsModified.current == 1) {\n            const params = new URLSearchParams(window.location.search)\n            const paramsTree = params.get('requestTree');\n            if (paramsTree) {\n                onCollectionEvent('openRequest', paramsTree)\n            }\n        }\n\n        collectionsModified.current++\n        return () => {\n            // cleanup\n        };\n    }, [collections]);\n    useEffect(() => {\n        const f = () => {\n\n            if (!isPc && !sidebarMin) {\n                setSidebarMin(true)\n\n            } else {\n                window.removeEventListener('scroll', f)\n            }\n\n\n\n\n\n        }\n        setTimeout(() => {\n            window.addEventListener('scroll', f)\n\n        }, 1000);\n\n\n        return () => {\n            window.removeEventListener('scroll', f)\n\n        }\n    }, [sidebarMin])\n    const initLoadFinished = props.app.finishedAuthenticationAttempt;\n    const user = props.app.userData;\n    const isGuest = initLoadFinished && !user;\n\n\n\n    const notifications = (props.notifications as any[] || []).filter(_ => !_.read);\n    function sideBarBlur() {\n\n        if (isPc) {\n            return\n        }\n\n\n        if (!sidebarMin) {\n            setSidebarMin(true)\n        }\n\n\n\n    }\n    function idFromTree(tree: string) {\n        const h = tree.split('/');\n        return h[h.length - 1]\n\n    }\n    function changeNav(n: number) {\n        const nextIndex = activeNavIndex + n;\n        props.history.push(navLinks[nextIndex].link)\n        // to={activenav.link}\n        setActiveNavIndex(nextIndex)\n    }\n\n    async function onCollectionEvent(type: string, tree: string, treeName?: string) {\n\n\n        if (type == 'toggleFolder') {\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any) => {\n                data.isFolderOpened = !(data.isFolderOpened || false)\n            })\n\n\n        } else if (type == 'openRequest') {\n\n            try {\n\n\n\n                const request = CollectionsService.treeDataModifier({ emit: false }, tree).c\n\n                props.history.push(window.location.pathname + '?requestTree=' + tree)\n                setActiveTree(tree)\n\n                sendToCollectionObs.next({ request, tree })\n\n            } catch (e) {\n\n            }\n\n        }\n\n        //create-request\n        //create-folder\n        //delete\n        //rename\n        else if (type == 'delete') {\n\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n\n                for (let index = 0; index < collectionTree.length; index++) {\n                    const t = collectionTree[index];\n                    if (t.id == data.id) {\n                        collectionTree[index] = false;\n                    }\n\n                }\n\n            })\n\n            socketService.removeFromTrackerIfExist(idFromTree(tree))\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n        }\n        else if (type == 'rename') {\n            const name = await prompter('New Name')\n\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n                data.name = name\n\n            })\n\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n\n\n\n        }\n        else if (type == 'create-request') {\n            const name = await prompter('Request Name')\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n                if (data) {\n                    data.children.push({\n                        id: getId(),\n                        name,\n                        type: 'emit',\n                        event: \"\"\n\n                    })\n                } else {\n                    console.log(collectionTree)\n                    collectionTree.push({\n                        id: getId(),\n                        name,\n                        type: 'emit',\n                        event: \"\"\n\n                    })\n                }\n\n            })\n\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n        }\n        else if (type == 'create-folder') {\n            const name = await prompter('Folder Name')\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n                if (data) {\n                    data.children.push({\n                        id: getId(),\n                        name,\n                        isFolder: true,\n                        children: []\n\n                    })\n                } else {\n                    collectionTree.push({\n                        id: getId(),\n                        name,\n                        isFolder: true,\n                        children: []\n\n                    })\n                }\n\n            })\n\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n        }\n\n\n\n\n    }\n\n    function lastFolderCB(tree?: any) {\n        if (tree) {\n            lastFolderRef.current = function (e: any) {\n                setLastSelectedFolderTree('/')\n\n\n            }\n\n            setTimeout(() => {\n                window.addEventListener('click', lastFolderRef.current)\n            }, 100)\n\n        } else {\n            window.removeEventListener('click', lastFolderRef.current)\n        }\n        setLastSelectedFolderTree(tree)\n    }\n    function setContextMenuF(data: any) {\n        if (data) {\n            contextRef.current = function (e: any) {\n                setContextMenu(null)\n\n            }\n\n            window.addEventListener('click', contextRef.current)\n        } else {\n            window.removeEventListener('click', contextRef.current)\n        }\n        setContextMenu(data)\n    }\n\n    function CollectionRenderer(props: any) {\n        const collection: CollectionFolder | CollectionRequest = props.data;\n\n        if (!collection) { return <></> }\n        const tree = (props.tree || '') + ('/' + collection.id);\n        const treeName = (props.treeName || '') + ('/' + collection.name);\n\n\n\n        return (\n            <div className='text-color-default cursor'>\n                {\n                    collection.isFolder ?\n                        <>\n                            <div onContextMenu={(e) => {\n\n\n                                setContextMenuF({\n                                    tree,\n                                    x: e.pageX,\n                                    y: e.pageY,\n                                    isFolder: true\n\n                                })\n                            }} className={'p-1 hover-collection ' + (tree == lastSelectedFolderTree ? 'bg-dark-light' : '')} onClick={() => { lastFolderCB(tree); onCollectionEvent('toggleFolder', tree, treeName) }}><i style={{ width: '15px' }} className={'fa mr-1 ' + (collection.isFolderOpened ? 'fa-angle-down' : 'fa-angle-right')}></i>{collection.name}</div>\n\n                            {collection.isFolderOpened && <div className='border-left ml-1'> <div style={{ paddingLeft: '10px' }}>{collection.children.map((c, i) => <div><CollectionRenderer key={i + tree} tree={tree} treeName={treeName} data={c} /></div>)}</div> </div>}\n\n                        </>\n                        :\n\n                        <>\n                            <div onContextMenu={(e) => {\n\n\n                                setContextMenuF({\n                                    tree,\n                                    x: e.pageX,\n                                    y: e.pageY,\n                                    isFolder: false\n\n                                })\n                            }} className={'p-1 hover-collection ' + (tree == activeTree ? 'bg-dark-light' : '')} onClick={() => onCollectionEvent('openRequest', tree, treeName)}> \n                            \n                            <small className={'p-1  font-weight-bold ' + ((collection as any).type == 'emit' ? 'text-primary' : 'text-secondary')} >{\n                                // @ts-ignore\n                                collection.type}</small>\n                                \n                                 {collection.name}</div>\n                        </>\n                }\n\n            </div>\n        )\n\n    }\n    function onContextMenu(type: string, tree: string) {\n        // const sure = await confirmer('are you sure you want to logout ?')\n    }\n\n    function ContextMenu(props: any) {\n\n        return (\n            <div className={' border text-color-default ' + (darkMode ? 'bg-app-dark' : 'bg-white')} style={{ position: 'fixed', zIndex: 'auto', top: (contextMenu.y + 'px'), left: (contextMenu.x + 'px') }}>\n\n                {contextMenu.isFolder && <div onClick={() => onCollectionEvent('create-request', contextMenu.tree)} className='p-1 cursor hover-collection '> <i className={' fa fa fa-file-medical mr-2 ' + (darkMode ? 'text-white' : 'text-dark')}></i> Create Request</div>}\n                {contextMenu.isFolder && <div onClick={() => onCollectionEvent('create-folder', contextMenu.tree)} className='p-1 cursor hover-collection '> <i className={' fa fa-folder-plus mr-2 ' + (darkMode ? 'text-white' : 'text-dark')}></i> Create Folder</div>}\n                <div onClick={() => onCollectionEvent('rename', contextMenu.tree)} className='p-1 cursor hover-collection '> <i className={' fa fa-pen mr-2 ' + (darkMode ? 'text-white' : 'text-dark')}></i> Rename</div>\n                <div onClick={() => onCollectionEvent('delete', contextMenu.tree)} className='p-1 cursor hover-collection '> <i className='text-danger fa fa-trash mr-2'></i> Delete</div>\n\n            </div>\n        )\n\n\n    }\n\n    return (\n        <>\n            {user ?\n                <div className={(sidebarMin ? 'Layout ' : 'Layout sidebar-max ') + (darkMode ? 'bg-app-dark' : '')}>\n\n\n                    <div\n\n\n\n                        className={'ml-2 mt-2 mb-2 sidebar border box-shadow pt-3 ' + (darkMode ? 'bg-app-dark' : 'bg-app-default')} >\n                        <div className='pl-4  sidebar-logo text-color-default mb-4'>\n                            <div className='d-inline-block sidebar-nav-inner'>\n                                <span\n                                    style={{ marginLeft: '-5px' }}\n                                    className='text-center mb-2 d-block'>\n\n                                    <span onClick={() => setSidebarMin(!sidebarMin)}>\n                                        <img style={{ width: '30px', height: '30px', position: 'relative', top: '-5px' }} src='/logo.png' className=' mr-3' />\n                                        {!sidebarMin && <b className='text-dark pt-2' style={{ fontSize: '25px' }}>PlugMan 🚀 </b>}\n                                    </span>\n                                    {!sidebarMin && <a className='ml-2 text-color-default' target=\"_blank\" href='https://github.com/ayotycoon/plugman'><i className='fab fa-github'></i></a>}\n\n                                </span>\n\n                            </div>\n\n\n                        </div>\n                        {user && <div >\n\n                            {\n                                <div className=\"navbar-ticker border-top border-bottom pt-2 pb-2\">\n                                    <div className='navbar-ticker-left text-color-default'>\n                                        {activeNavIndex > 0 && <div onClick={() => changeNav(-1)} className='w-100 h-100'>\n                                            <i className='fa fa-angle-left'></i>\n                                        </div>}\n\n\n                                    </div>\n                                    <div className='navbar-ticker-main sidebar-nav text-color-default text-dark'>\n\n                                        <div className='sidebar-nav-inner'>\n                                            <i className={activenav.fa}></i>\n                                            <span className='sidebar-text'>{activenav.name}</span>\n                                        </div>\n\n                                    </div>\n                                    <div className='navbar-ticker-right text-color-default'>\n                                        {(activeNavIndex < navLinks.length - 1) && <div onClick={() => changeNav(1)} className='w-100 h-100'>\n                                            <i className='fa fa-angle-right'></i>\n                                        </div>}\n                                    </div>\n                                </div>\n\n                            }\n\n                        </div>}\n\n\n\n                        {activeNavIndex == 0 &&\n\n                            <div>\n                                <div className='pr-2 pl-2 pb-1 pt-1  border-bottom text-color-default '>\n                                    <span title='Create request' onClick={() => {\n                                        onCollectionEvent('create-request', lastSelectedFolderTree || '/');\n                                    }} className='cursor mr-2'><i className='fa fa-file-medical'></i></span>\n                                    <span title='Create folder' onClick={() => {\n                                        onCollectionEvent('create-folder', lastSelectedFolderTree || '/');\n                                    }} className='cursor mr-2'><i className='fa fa-folder-plus'></i></span>\n                                </div>\n                                <div\n                                    style={{ height: 'calc(100vh - 350px)', overflowY: 'auto' }}>\n                                    <div className={'pt-2 ' + (sidebarMin ? 'd-none' : '')} style={{ marginLeft: '10px', whiteSpace: 'nowrap', width: '100%', overflow: 'auto' }}>\n                                        {contextMenu && <ContextMenu />}\n\n                                        {collections.map((collection, i) => <CollectionRenderer key={i} data={collection} />)}\n                                    </div>\n                                </div>\n                            </div>\n\n                        }\n\n                       \n\n                         \n\n                    \n\n                        <div className={'p-2 ' + (sidebarMin ? 'd-none' : '')} style={{ position: 'absolute', bottom: '30px' }}>\n                            <input onChange={(e: any) => {\n                                setSocketUrl(e.target.value)\n                            }} disabled={props.socket.status.connected} className='form-control small' value={socketUrl} placeholder='Enter socket url' />\n\n                            <div className='mt-1'>{!props.socket.status.connected ? <> <button onClick={() => {\n                                storage.serverUrl.set(socketUrl);\n                                socketService.initialize(socketUrl)\n                            }} className='btn btn-sm btn-primary'>Connect</button>\n                                <br />\n                                <small onClick={() => {\n                                    socketService.initializeAndListen(socketUrl)\n                                }} className='text-primary cursor \n                                '>Connect and fire all events</small>\n\n                            </> : <button onClick={() => {\n                                socketService.disconnect()\n                            }} className='btn btn-sm btn-outline-primary'>Disconnect</button>}\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className={'topbar ' + (!darkMode ? 'bg-app-default' : 'bg-app-dark')}>\n                        <span app-data-intro='Displays the current page you are on. Can also click here to show or hide sidebar' app-data-step='2' className='small '>\n                            <span className='change-in-dark-1'>\n                                <b  >  {props.app.title.title || <>Inngle</>}\n                           \n\n                                    {props.app.title.icon &&\n\n                                        <i className={'ml-2 ' + props.app.title.icon} > </i>\n                                    }\n\n                                </b>\n                            </span>\n                        </span>\n\n\n\n\n                        <div className='float-right'>\n                            {props.network.loading &&\n\n                                <i style={{ position: 'relative', top: '3px' }} className=' fa fa-sync spin mr-2'></i>\n                            }\n                           \n                           \n                            <span className='cursor text-center'>\n                                <span style={{ top: '5px', position: 'relative' }} onClick={toggleDarkMode} className='pl-2'>\n\n                                    {!darkMode ? <i style={{ fontSize: '20px' }} className=' far fa-moon'></i> : <i className='text-white fa fa-sun'></i>}\n                                </span>\n\n                            </span>\n\n                            {false && <DropdownClick>\n                                <span className='cursor text-center'>\n                                    <span style={{ top: '5px', position: 'relative' }} className='pl-2 text-dark'>\n                                        <i className='far fa-bell' style={{ fontSize: '20px' }}></i>\n\n                                    </span>\n\n                                </span>\n\n                                <div className='dropdown-click-close change-in-dark-1 border rounded p-2 bg-white ' style={{ width: '200px', position: 'relative', left: isPc ? `-170px` : '-170px' }}>\n                                    notifications\n\n                                    </div>\n\n                            </DropdownClick>}\n\n\n\n\n\n\n                        </div>\n                    </div>\n\n\n\n\n                    <div onClick={sideBarBlur} style={{ height: '100vh' }} className={'content ' + (!darkMode ? 'bg-app-default' : 'bg-app-dark')}>\n\n                        <Switch>\n\n                            <Route exact path=\"/\">\n                                <Redirect to='/request' />\n                            </Route>\n\n\n                            <Route exact path=\"/request\" component={Request} />\n\n                            <Redirect path='**' to='/404' />\n                        </Switch>\n\n\n\n                    </div>\n\n                </div>\n                : <div className={'splash-container ' + (darkMode ? 'bg-app-dark' : '')}>\n                    <div className='d-inline-block'>\n                        <img src='/logo.png' />\n                        <br></br>\n                        <div className='loader'>\n                            <div className='bar bg-primary'>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>}</>)\n\n}\n\n\n\nconst mapStateToProps = (state: any) => ({\n    network: state.network,\n    app: state.app,\n    notifications: state.notifications,\n    socket: state.socket\n})\n\nexport default connect(mapStateToProps, { loading, setUserData, toggleDarkMode, setFinishedAuthenticationAttempt, setNotifications })(Layout)","import React from 'react'\nimport './Modal.scss'\n\ninterface ModalI {\n    title?: string;\n    zIndex?: number;\n    preventCloseOnClickOutside?: boolean;\n    jsx?: boolean;\n\n    type?: 'loading';\n    onClose?: CallableFunction;\n    children?: any;\n}\n\n\nfunction Modal(props: ModalI) {\n\n    function onClose() {\n        if (props.onClose) {\n            props.onClose()\n        }\n    }\n    function clickedOutside(e: any) {\n        if (e.target.className.match('Modal-center') && props.type !== 'loading' && !props.preventCloseOnClickOutside) {\n            onClose()\n        }\n    }\n\n    return (\n        <div className='Modal Modal-center ' style={{ zIndex: props.type === 'loading' ? 100 : (props.zIndex || 30) }} onClick={clickedOutside}>\n\n            <div className={'Modal-inner p-3 rounded' + (props.type === 'loading' ? ' ' : ' bg-white')}>\n                <div className='Modal-inner-heading'>\n                    <div className='Modal-inner-heading-text'>\n                        <h4 className='font-weight-bold'>{props.title}</h4>\n                    </div>\n                    {props.type !== 'loading' &&\n                        <div className='Modal-inner-heading-close-container'>\n                            <div onClick={onClose} className='Modal-close bg-danger'>\n                                <i className='fa fa-close text-white'>\n\n                                </i>\n                            </div>\n                        </div>}\n\n\n                </div>\n                {!props.jsx && <div dangerouslySetInnerHTML={{ __html: props.children }}></div>}\n                {props.jsx && props.children}\n\n\n                {props.type === 'loading' &&\n\n                    <div className='text-center'>\n\n                        <img src='/assets/loader.svg' />\n                    </div>\n                }\n\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default Modal;","import React, { useState, useEffect, useRef } from 'react'\nimport './Overlay.scss'\nimport { toastObs, alertObs, shareObs, modalObs, confirmObs, selectObs, promptObs, toaster } from '../../../Providers/core.service'\nimport Modal from '../Modal/Modal'\n\nimport { copy as helperCopy } from '../../../Providers/helpers'\n\n\n\n\nfunction Overlay() {\n    const [toastData, setToastData] = useState(null as any)\n    const [shareContent, setShareContent] = useState(null as any);\n    const [modalContent, setModalContent] = useState(null as any);\n    const [confirmContent, setConfirmContent] = useState(null as any);\n    const [alertContent, setAlertContent] = useState(null as any);\n    const [selectContent, setSelectContent] = useState(null as any);\n    const [promptContent, setPromptContent] = useState(null as any);\n    const res = useRef(null as any)\n\n    useEffect(() => {\n        toastObs.subscribe((incomingToastData: any) => {\n\n            if (incomingToastData) {\n                setToastData(incomingToastData)\n            } else {\n                setToastData(null)\n            }\n\n        })\n        shareObs.subscribe((incomingShareContent: any) => {\n\n            if (incomingShareContent) {\n                setShareContent(incomingShareContent)\n            } else {\n                setShareContent(null)\n            }\n\n        })\n        modalObs.subscribe((incomingModalContent: any) => {\n\n            if (incomingModalContent) {\n                setModalContent(incomingModalContent)\n                res.current = incomingModalContent.cb\n            } else {\n                setModalContent(null)\n            }\n\n        })\n        confirmObs.subscribe((incomingConfirmContent: any) => {\n\n            if (incomingConfirmContent) {\n                setConfirmContent(incomingConfirmContent)\n                res.current = incomingConfirmContent.cb\n\n            } else {\n                //setConfirmContent(null)\n            }\n\n        })\n        alertObs.subscribe((incomingAlertContent: any) => {\n\n            if (incomingAlertContent) {\n                setAlertContent(incomingAlertContent)\n\n            } else {\n                //setConfirmContent(null)\n            }\n\n        })\n        selectObs.subscribe((incomingSelectContent: any) => {\n\n            if (incomingSelectContent) {\n                setSelectContent(incomingSelectContent)\n                res.current = incomingSelectContent.cb\n\n            } else {\n                setSelectContent(null)\n            }\n        })\n        promptObs.subscribe((incomingPromptContent: any) => {\n\n            if (incomingPromptContent) {\n                setPromptContent(incomingPromptContent)\n\n                res.current = incomingPromptContent.cb\n\n            } else {\n                setPromptContent(null)\n            }\n\n        })\n\n\n\n\n\n\n\n\n\n    }, [])\n\n\n\n    function hideAttentionToast() {\n        toastObs.next({ ...toastData, incoming: false })\n        setTimeout(() => {\n            toastObs.next(null)\n        }, 500);\n    }\n\n\n    return (\n        <>\n            {shareContent && <Modal jsx={true} title='Share' onClose={() => { setShareContent(null) }} >\n                <div className='text-center'>\n                    {\n                        [\n                            {\n                                icon: 'fa fa-copy', name: 'Copy', onClick: () => {\n                                    helperCopy(shareContent)\n                                    toaster({ message: 'Successfully copied link' })\n\n\n\n                                }\n                            },\n                            {\n                                icon: 'fab fa-whatsapp', name: 'whatsapp', onClick: () => {\n\n                                    helperCopy(shareContent)\n\n                                    window.open(`whatsapp://send?${encodeURIComponent(shareContent)}`);\n                                }\n                            },\n                            /*\n                            { icon: 'fab fa-facebook', name: 'facebook', onClick: () => { } },\n                            { icon: 'fab fa-instagram', name: 'instagram', onClick: () => { } },\n\n                            */\n                            {\n                                icon: 'fab fa-twitter', name: 'twitter', onClick: () => {\n\n                                    window.open(`https://twitter.com/intent/tweet?url=${encodeURIComponent(shareContent)}`, '_blank');\n\n\n                                }\n                            },\n\n                        ]\n                            .map((media, index) => {\n                                return (\n                                    <div key={index}  className='mt-2'>\n                                        <div onClick={media.onClick} className='d-inline-block'>\n                                        <i className={media.icon} style={{ fontSize: '40px' }} />\n                                        <br />\n                                        {media.name}\n                                        </div>\n\n                                    </div>\n                                )\n                            })\n                    }\n                </div>\n\n\n            </Modal>}\n\n\n\n\n            {modalContent && <Modal type={modalContent.type} title={modalContent.title} onClose={() => { setModalContent(null); res.current(true) }} > {modalContent.body}</Modal>}\n            {confirmContent &&\n\n                <Modal preventCloseOnClickOutside={true} jsx={true} title={'Confirm'} onClose={() => { res.current(false, true); setConfirmContent(null) }} > {confirmContent.text}\n\n                    {confirmContent.body && <>\n                        <br />\n\n                        <span dangerouslySetInnerHTML={{ __html: confirmContent.body }}></span>\n                    </>}\n                    <hr />\n                    <div className='row'>\n                        <div className='col-6'>\n                            <button onClick={() => { res.current(true); setConfirmContent(null) }} className='btn btn-primary'>Yes</button>\n                        </div>\n                        <div className='col-6 text-right'>\n\n                            <button onClick={() => { res.current(false); setConfirmContent(null) }} className='btn text-danger'>No</button>\n                        </div>\n                    </div>\n                </Modal>}\n\n\n            {alertContent &&\n\n                <Modal zIndex={100} preventCloseOnClickOutside={true} jsx={true} title={'Alert'} onClose={() => { setAlertContent(null) }} > {alertContent.text}\n\n                    {alertContent.body && <>\n                        <br />\n\n                        <span dangerouslySetInnerHTML={{ __html: alertContent.body }}></span>\n                    </>}\n               \n\n                 \n                </Modal>}\n\n\n\n            {selectContent && <Modal jsx={true} preventCloseOnClickOutside={true} title={selectContent.title}\n                onClose={() => { res.current(false, true); setSelectContent(null) }} >\n                {selectContent.options.map((option: any, index: number) => {\n                    const optionText = option.option || option;\n                    const optionInfo = option.info;\n\n                    return (\n                        <div key={index}>\n                            <input value={optionText} onChange={(e: any) => setSelectContent({ ...selectContent, value: e.target.value })} name='selector' type='radio' className='mr-2' id={'selector-' + optionText}></input>\n\n                            <label htmlFor={'selector-' + optionText}>{optionText}</label>\n                            {optionInfo && <span className='float-right each-select'><i className='fa fa-question-circle '></i>\n\n                                <div className='select-info bg-info rounded p-2 text-white'>\n                                    {optionInfo}\n                                </div>\n\n                            </span>}\n                            <br />\n                        </div>\n                    )\n                })}\n\n                <hr />\n                <div className='text-center'>\n                    <div className='btn btn-group'>\n                        {selectContent.value && <button onClick={() => { res.current(selectContent.value); setSelectContent(null) }} className='btn btn-primary'>Ok</button>}\n\n\n                        <button onClick={() => { res.current(false); setSelectContent(null) }} className='btn btn-outline-danger'>Cancel</button>\n                    </div>\n                </div>\n\n            </Modal>}\n\n\n            {promptContent && <Modal jsx={true} preventCloseOnClickOutside={true} title={promptContent.text}\n                onClose={() => { res.current(false, true); setPromptContent(null) }} >\n                <input value={promptContent.value} onChange={(e: any) => setPromptContent({ ...promptContent, value: e.target.value })} className='form-control'></input>\n\n\n                <hr />\n                <div className='text-center'>\n                    <div className='btn btn-group'>\n                        {promptContent.value && <button onClick={() => { res.current(promptContent.value); setPromptContent(null) }} className='btn btn-primary'>Ok</button>}\n\n\n                        <button onClick={() => { res.current(false); setPromptContent(null) }} className='btn btn-outline-danger'>Cancel</button>\n                    </div>\n                </div>\n\n            </Modal>}\n\n\n            {toastData &&\n                <div className={'Alert animated pt-3 pl-3 ' + (toastData.incoming ? ' fadeIn' : 'fadeOut') + (toastData.attention ? ' alert-attention' : '')}>\n                    <div className={`d-inline-block animated alert-inner box-shadow rounded alert alert-${toastData.type || 'info'}` + (toastData.incoming ? ' slideInDown' : ' slideOutUp')}>\n                        <span dangerouslySetInnerHTML={{ __html: toastData.message }}></span>\n\n                        {toastData.attention && <div>\n                            <hr />\n                            <button onClick={hideAttentionToast} className={'btn btn-sm btn-' + (toastData.type || 'info')}>\n                                Ok\n                        </button>\n\n                        </div>}\n                    </div>\n                </div>}</>\n\n    )\n\n}\n\nexport default Overlay;","import React, { useEffect } from 'react';\nimport './App.scss';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport { store, Provider } from './store'\nimport { monaco } from '@monaco-editor/react';\n\nimport Layout from './components/misc/Layout/Layout';\nimport Overlay from './components/misc/Overlay/Overlay';\nimport { possibleResizeObs } from './Providers/core.service';\nimport {  DebounceTime } from './Providers/helpers';\n\n\nmonaco\n    .init()\n    .then(monaco => {\n        const theme = {\n            base: 'vs',\n            inherit: true,\n            colors: {\n                \"editor.background\": '#f6f7fa'\n            },\n           rules: [\n                { token: 'green', background: 'FF0000', foreground: '00FF00', fontStyle: 'italic' },\n                { token: 'red', foreground: 'FF0000', fontStyle: 'bold underline' },\n                { background: '000000' },\n                { foreground: 'FFFFFF' }\n            ],\n        }\n        monaco.editor.defineTheme('plugman-light', theme)\n\n    \n})\nconst ref = new DebounceTime()\n\nwindow.addEventListener('resize', () => {\n    ref.start(() => possibleResizeObs.next(true), 500)\n})\n//socketService.initialize()\nfunction App() {\n    useEffect(() => {\n \n        \n        return () => {\n        \n        };\n    }, []);\n\n\n    return (\n        <Provider store={store}>\n            <Overlay />\n            \n      \n            <Router>\n                \n                <Switch>\n               \n                \n                    <Route path=\"/\" component={Layout}>\n                    </Route>\n                  \n\n                </Switch>\n            </Router >\n        </Provider>\n    );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n    \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              //console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      //console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        //console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
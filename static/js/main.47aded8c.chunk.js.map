{"version":3,"sources":["store/actions/network.action.ts","store/reducers/network.reducer.ts","store/actions/app.action.ts","Providers/storage.service.ts","store/reducers/app.reducer.ts","store/actions/socket.action.ts","store/reducers/socket.reducer.ts","store/reducers/index.ts","store/index.ts","Providers/core.service.ts","components/misc/DropdownClick/DropdownClick.tsx","Providers/helpers.ts","Providers/index.ts","Providers/Workspace.service.ts","Providers/socket.service.ts","components/misc/TypePill/TypePill.tsx","components/modules/Activity/Activity.tsx","components/misc/Blank/Blank.tsx","components/modules/Request/Request.tsx","components/misc/WorkspaceToggle/WorkspaceToggle.tsx","components/Layout/Layout.tsx","components/misc/Modal/Modal.tsx","components/misc/Overlay/Overlay.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["types","initialState","loading","isPc","window","innerWidth","setTitle","data","dispatch","title","image","icon","document","length","substring","type","payload","setActiveTree","STORAGE_CONSTANTS","setBodyDarkMode","mode","body","querySelector","className","darkMode","localStorage","setItem","getItem","dontAskDarkMode","userData","name","activeTree","finishedAuthenticationAttempt","setTrackers","status","tracker","activities","combineReducers","network","state","action","app","newMode","socket","env","require","middleware","thunk","compose_","compose","applyMiddleware","prod","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","getId","Math","random","toString","DebounceTime","time","ref","active","start","fn","clearTimeout","setTimeout","this","BehaviourSubject","value","initialValue","lastValue","fns","next","newValue","subscribe","id","Object","values","forEach","_fn","unSubscribe","keys","sendToCollectionObs","possibleResizeObs","toastObs","shareObs","modalObs","alertObs","confirmObs","selectObs","promptObs","toasterBehaviourSubj","toaster","_timer","timer","incoming","attention","prompter","text","Promise","resolve","reject","cb","val","throwError","DropdownClick","textArea","copy","props","useState","clicked","setClicked","DropdownClickRef","useRef","clickedFunRef","scrollRef","componentIsMounted","oneRef","preSetClicked","onScrollClose","current","removeEventListener","addEventListener","useEffect","prevStyle","style","verticalAlign","zIndex","block","onClick","e","target","match","parent","child","node","parentNode","isDescendant","children","width","childBlock","clientWidth","apiCacheHash","selectText","range","selection","navigator","userAgent","createRange","selectNodeContents","getSelection","removeAllRanges","addRange","setSelectionRange","select","createElement","appendChild","createTextArea","execCommand","removeChild","workspaces","activeWorkSpaceKey","activeWorkspaceData","serverUrl","version","folders","idToRequestHash","defaultFolderStructure","isFolder","event","emitBody","listenBody","defaultWorkspacesStructure","key","WorkspaceService","JSON","stringify","parse","location","reload","_workspace","getWorkspaces","changeWorkspace","url","persist","folderParse","dd","d","tree","targetC","options","localFolders","treeSplit","split","filter","_","treeIndex","treeDataModifierF","lastLoop","folderTree","setDataFolders","emit","foldersObs","c","loadWorkspaces","load","generateRequestHash","listenEventToId","lastListenEvent","socketService","host","io","on","message","emitActivity","connected","disconnect","initialize","h","getRequestHash","b","listen","addActivity","removeListener","emitTracker","destroy","console","log","TypePill","DEFAULTS","connect","events","setEvents","eventsDisplayRef","keyGen","scrollTo","left","top","scrollHeight","behavior","hash","prevValue","undefined","setEventRefF","totalEvents","activeEvents","marginTop","opened","map","k","i","checked","onChange","height","overflow","activity","isActivityEmit","showEvent","marginLeft","marginRight","display","textAlign","readOnly","lineNumbers","scrollBeyondLastLine","minimap","enabled","wordWrap","automaticLayout","theme","language","Blank","alignItems","bodyTypes","notifications","saved","setSaved","requestTree","setRequestTree","activeCellIndex","setActiveCellIndex","showDetails","setShowDetails","showActivity","setShowActivity","tabs","setTabs","activeRequest","setActiveRequest","subs","navbarCriticalChangedRef","saveKeyRef","cells","handleChange","clone","save","CollectionsService","treeDataModifier","deleteTab","tab","tabsClone","t","activateTab","history","push","pathname","ids","getRequestFromId","a","bodyType","cancelListen","indexOf","request","plausibleOldEmittions","getLastListenEvent","listenerBody","envJson","onbeforeunload","activeElement","keyCode","metaKey","ctrlKey","nodeName","preventDefault","sub","alreadyListening","editNameAndDescription","alert","overflowX","overflowY","whiteSpace","tabTreeToName","description","disabled","placeholder","cell","borderBottomWidth","ev","script","handleEditorChange","scope","WorkspaceToggle","activeWorkspace","getActiveWorkspaceKey","addWorkspace","position","w","setUserData","toggleDarkMode","sidebarMin","setSidebarMin","getServerUrl","socketUrl","setSocketUrl","lastSelectedFolderTree","setLastSelectedFolderTree","collections","setCollections","contextMenu","setContextMenu","contextRef","lastFolderRef","collectionsModified","matchMedia","matches","storage","then","catch","initializeAndListen","paramsTree","URLSearchParams","search","get","onCollectionEvent","f","user","idFromTree","treeName","other","isFolderOpened","collectionTree","index","removeFromTrackerIfExist","setContextMenuF","CollectionRenderer","collection","onContextMenu","x","pageX","y","pageY","lastFolderCB","paddingLeft","ContextMenu","src","fontSize","href","bottom","setServerUrl","app-data-intro","app-data-step","exact","path","to","component","Request","Modal","onClose","preventCloseOnClickOutside","jsx","dangerouslySetInnerHTML","__html","Overlay","toastData","setToastData","shareContent","setShareContent","modalContent","setModalContent","confirmContent","setConfirmContent","alertContent","setAlertContent","selectContent","setSelectContent","promptContent","setPromptContent","res","incomingToastData","incomingShareContent","incomingModalContent","incomingConfirmContent","incomingAlertContent","incomingSelectContent","incomingPromptContent","helperCopy","open","encodeURIComponent","media","option","optionText","optionInfo","info","htmlFor","monaco","init","editor","defineTheme","base","inherit","colors","rules","token","background","foreground","fontStyle","App","Layout","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.47aded8c.chunk.js","sourcesContent":["\n\nexport const types = {\n   LOADINGSTART : 'LOADINGSTART',\n   LOADINGEND : 'LOADINGEND',\n}\n\nexport const loading = (start: any) => (dispatch: any) => {\n  \n    if(start) {\n        dispatch({\n            type: types.LOADINGSTART\n        })\n    } else {\n        dispatch({\n            type: types.LOADINGEND\n        })\n    }\n  \n\n\n   \n}\n\n","import { types } from '../actions/network.action'\n\n\nconst initialState = {\n   \n      loading: false\n    \n}\n\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.LOADINGSTART:\n            \n            return {\n                ...state, loading: true\n            }\n        case types.LOADINGEND:\n            \n            return {\n                ...state, loading: false\n            }\n\n  \n        default:\n            return state;\n\n    }\n\n}","\nexport const types = {\n   SETTITLE : 'SETTITLE',\n   SETAPPFONT : 'SETAPPFONT',\n    SETUSERDATA : 'SETUSERDATA',\n    SETDARKMODE : 'SETDARKMODE',\n    SETACTIVETREE : 'SETACTIVETREE',\n \n}\nconst isPc = window.innerWidth > 800;\nexport const setTitle = (data: any) => (dispatch: any) => {\n  let title = data.title || data\n  const image = data.image || ''\n  const icon = data.icon || ''\n    document.title = `Plugman - ${title} `;\n\n    if(!isPc && title.length > 20){\n        title = (title as string).substring(0, 20) + ' ...'\n\n    }\n        dispatch({\n            type: types.SETTITLE,\n            payload: {title, image, icon}\n        })\n\n\n\n   \n}\nexport const setAppFont = (id: any) => (dispatch: any) => {\n   \n\n\n\n\n    \n\n\n        dispatch({\n            type: types.SETAPPFONT,\n            payload: id\n        })\n\n\n\n   \n}\nexport const setUserData = (data: any) => (dispatch: any) => {\n  \n\n        dispatch({\n            type: types.SETUSERDATA,\n            payload: data\n        })\n\n\n\n   \n}\nexport const setActiveTree = (data: any) => (dispatch: any) => {\n  \n\n        dispatch({\n            type: types.SETACTIVETREE,\n            payload: data\n        })\n\n\n\n   \n}\n\nexport const toggleDarkMode = () => (dispatch: any) => {\n    \n\n        dispatch({\n            type: types.SETDARKMODE\n        })\n\n\n\n   \n}\n\n","\n\nconst STORAGE_CONSTANTS = {\n    DARK_MODE: 'dark-mode',\n    DONT_ASK_DARK_MODE: 'DONT-ASK-dark-mode'\n \n\n}\n\n\n\nfunction setBodyDarkMode(mode: string | boolean) {\n    const body = document.querySelector('body');\n\n    if (!body) {\n        return;\n    }\n\n    if (mode === 'true' || mode === true) {\n        body.className = 'bg-app-dark';\n    } else {\n        body.className = 'bg-app-default';\n    }\n\n}\n\n\n\n\n\nexport const darkMode = {\n    set: (mode: string) => {\n\n        setBodyDarkMode(mode)\n\n        return localStorage.setItem(STORAGE_CONSTANTS.DARK_MODE, mode)\n    },\n    get: () => {\n        const mode = localStorage.getItem(STORAGE_CONSTANTS.DARK_MODE)\n        // @ts-ignore\n        setBodyDarkMode(mode)\n\n        return mode\n    }\n\n\n}\nexport const dontAskDarkMode = {\n    set: (mode: string) => {\n\n \n\n        return localStorage.setItem(STORAGE_CONSTANTS.DONT_ASK_DARK_MODE, mode)\n    },\n    get: () => {\n        const mode = localStorage.getItem(STORAGE_CONSTANTS.DONT_ASK_DARK_MODE)\n        // @ts-ignore\n \n\n        return mode\n    }\n\n\n}\n\n\n\n","\nimport { types } from '../actions/app.action'\nimport { darkMode} from '../../Providers/storage.service'\n\n\nconst initialState = {\n\n    title: '',\n   \n    userData: {\n        name: 'ayo'\n    },\n    activeTree: '',\n    finishedAuthenticationAttempt: false,\n    darkMode: darkMode.get() === 'true'\n\n}\n\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.SETTITLE:\n\n            return {\n                ...state, title: action.payload\n            }\n      \n   \n     \n        case types.SETDARKMODE:\n\n            const newMode = !state.darkMode\n            darkMode.set(newMode + '')\n\n\n            return {\n                ...state, darkMode: !state.darkMode\n            }\n        case types.SETACTIVETREE:\n\n          \n            return {...state, activeTree: action.payload}\n\n\n        default:\n            return state;\n\n    }\n\n}","\n\nexport const types = {\n   SET_SOCKET_STATUS : 'SET_SOCKET_STATUS',\n   SET_TRACKERS : 'SET_TRACKERS',\n    ADD_ACTIVITY:'ADD_ACTIVITY'\n\n}\n\nexport const setStatus = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.SET_SOCKET_STATUS,\n            payload: data\n        })\n\n\n\n   \n}\nexport const addActivity = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.ADD_ACTIVITY,\n            payload: data\n        })\n\n\n\n   \n}\nexport const setTrackers = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.SET_TRACKERS,\n            payload: data\n        })\n\n\n\n   \n}\n","\nimport { types } from '../actions/socket.action'\n\n\nconst initialState = {\n\n    status: {},\n    tracker: {},\n    activities: []\n}\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.SET_SOCKET_STATUS:\n\n\n\n            return { ...state, status: action.payload }\n        case types.SET_TRACKERS:\n\n\n\n            return { ...state, tracker: action.payload }\n        case types.ADD_ACTIVITY:\n\n\n\n            return { ...state, activities: [...state.activities, action.payload] }\n\n\n\n\n        default:\n            return state;\n\n    }\n\n}","import {combineReducers} from 'redux';\n\nimport networkReducer from './network.reducer';\nimport appReducer from './app.reducer';\nimport socketReducer from './socket.reducer';\n\nexport default combineReducers({\n    network: networkReducer,\n    app: appReducer,\n    socket: socketReducer,\n\n})","import { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst  env  =  require('../env.json')\n\nconst initialState = {}\nconst middleware = [thunk]\n\n\nlet compose_ = compose(applyMiddleware(...middleware))\n\nif(!env.prod) {\n  // @ts-ignore\n    compose_ = compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nconst store = createStore(rootReducer, initialState, \n  compose_\n    )\n\nexport {store, Provider};","export const getId = () => {\n  return 'a' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\nexport class DebounceTime {\n\n  time = 400\n  ref: any;\n  active = false;\n  public start = (fn: Function, time?: number) => {\n    if (this.ref) {\n      clearTimeout(this.ref)\n    }\n\n    this.active = true;\n    if (time) {\n      this.time = time\n    }\n    const deffFun = () => {\n      fn()\n      this.active = false\n    }\n\n    this.ref = setTimeout(deffFun, this.time);\n  }\n  public destroy() {\n    clearTimeout(this.ref)\n  }\n\n\n}\n\n\nexport class BehaviourSubject {\n  initialValue = null\n  lastValue = null\n  // @ts-ignore\n  fns: { [id: string]: Function } = {};\n  constructor(value: any) {\n    this.lastValue = value\n    this.initialValue = value\n  }\n\n  public next = (newValue: any) => {\n    this.lastValue = newValue\n    this.subscribe()\n\n  }\n  public subscribe = (fn?: Function, value?: any) => {\n    let id: string;\n    if (fn) {\n      id = getId()\n      this.fns[id] = fn\n\n\n    }\n\n    if (this.fns) {\n      Object.values(this.fns).forEach(_fn => {\n        _fn(this.lastValue)\n      })\n\n    }\n\n\n    if (fn) {\n\n      return {\n        unSubscribe: () => {\n          delete this.fns[id]\n          if (Object.keys(this.fns).length === 0) {\n            this.lastValue = this.initialValue\n\n          }\n\n        }\n      }\n    }\n\n  }\n}\n\n\nexport const refreshUserDataObs = new BehaviourSubject(true)\nexport const sendToCollectionObs = new BehaviourSubject(null)\nexport const possibleResizeObs = new BehaviourSubject(false)\n\n\n\nexport const toastObs = new BehaviourSubject(null)\nexport const shareObs = new BehaviourSubject(null)\nexport const modalObs = new BehaviourSubject(null)\nexport const alertObs = new BehaviourSubject(null)\nexport const confirmObs = new BehaviourSubject(null)\nexport const selectObs = new BehaviourSubject(null)\nexport const promptObs = new BehaviourSubject(null)\nconst toasterBehaviourSubj = [new DebounceTime(), new DebounceTime()]\nexport const toaster = (data: any, _timer?: number) => {\n\n    const timer = _timer || 5000\n    toastObs.next({ ...data, incoming: true })\n\n    if (data.attention) {\n        toastObs.next({ ...data, incoming: true });\n        return;\n    }\n    toasterBehaviourSubj[0].start(() => toastObs.next(null), timer)\n\n\n    toasterBehaviourSubj[1].start(() => toastObs.next({ ...data, incoming: false }), timer - 500)\n}\nexport const modaler = (data: any) => {\n    return new Promise((resolve, reject) => {\n        modalObs.next({\n            ...data, cb: (closed: boolean) => {\n                resolve(closed)\n\n            }\n        })\n    })\n}\nexport const confirmer = (text: string, body? : string) => {\n\n    return new Promise((resolve, reject) => {\n        confirmObs.next({\n          text, body, cb: (val: boolean, throwError?: boolean) => {\n            if (throwError) {\n              reject(val)\n              return\n            } resolve(val)\n\n            }\n        })\n    })\n\n}\nexport const alerter = (text: string, body? : string) => {\n\n    return new Promise((resolve, reject) => {\n        alertObs.next({\n          text, body\n        })\n    })\n\n}\nexport const selecter = (data: any) => {\n\n    return new Promise((resolve, reject) => {\n        selectObs.next({\n          ...data, cb: (val: boolean, throwError?: boolean) => {\n            if (throwError) {\n              reject(val)\n              return\n            } resolve(val)\n\n            }\n        })\n    })\n\n}\nexport const prompter = (text: any, value?: string) => {\n\n    return new Promise((resolve, reject) => {\n        promptObs.next({\n            text,\n            value, \n            \n            cb: (val: boolean, throwError?: boolean) => {\n              if(throwError){\n                reject(val)\n                return\n              }\n                resolve(val)\n\n            }\n        })\n    })\n\n}\n\n\n\n\n\n\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport './DropdownClick.scss'\nimport { getId } from '../../../Providers';\n\n\n\nfunction isDescendant(parent: HTMLElement, child: HTMLElement) {\n    var node = child.parentNode;\n    while (node != null) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\nfunction DropdownClick(props: any) {\n\n    const [clicked, setClicked] = useState(false);\n    const DropdownClickRef = useRef(null as any);\n    const clickedFunRef = useRef(null as any);\n    const scrollRef = useRef({\n\n        fn: () => { }\n    });\n    const componentIsMounted = useRef(true)\n    const oneRef = useRef(null as unknown as HTMLDivElement)\n\n\n    function preSetClickedFun(value: boolean) {\n        const elem: HTMLDivElement | null = DropdownClickRef.current;\n        if (props.onClick) {\n            props.onClick(value)\n        }\n        if (value) {\n\n\n\n            clickedFunRef.current = (e: any) => {\n\n                // @ts-ignore\n                if ((e.target.className.match('dropdown-click-close') || !isDescendant(DropdownClickRef.current, e.target)) && componentIsMounted.current) {\n                    if (props.onClick) {\n                        props.onClick(false)\n                    }\n                    window.removeEventListener('click', clickedFunRef.current)\n                    preSetClicked(false)\n                }\n            }\n            \n            window.addEventListener('click', clickedFunRef.current)\n\n        } else {\n\n\n            if (clickedFunRef.current) {\n\n                window.removeEventListener('click', clickedFunRef.current)\n            }\n        }\n\n        preSetClicked(value);\n    }\n    function preSetClicked(value: boolean) {\n        function onScroll() {\n       \n    \n                setClicked(false);\n                // remove listener\n                document.removeEventListener('scroll', scrollRef.current.fn, true)\n\n            \n\n        }\n\n\n\n        if (props.onScrollClose) {\n            if (value) {\n                scrollRef.current.fn = onScroll;\n\n                // listen to scroll event\n                document.addEventListener('scroll', scrollRef.current.fn, true)\n\n\n            } else {\n                document.removeEventListener('scroll', scrollRef.current.fn, true)\n\n            }\n        }\n        setClicked(value)\n    }\n\n    useEffect(() => {\n\n\n        return () => {\n            componentIsMounted.current = false;\n\n\n            if (clickedFunRef.current) {\n                window.removeEventListener('click', clickedFunRef.current)\n                document.removeEventListener('scroll', scrollRef.current.fn, true);\n            }\n        };\n    }, []);\n\nconst prevStyle = props.style || {};\n    return (\n        <div ref={DropdownClickRef} style={{\n            ...prevStyle,\n\n            verticalAlign: 'top',\n            zIndex: clicked ? 5 : 1\n        }} className={'DropdownClick ' + (props.block ? 'd-block' : 'd-inline-block')}>\n            <div\n            ref={oneRef}\n            \n\n                onClick={() => preSetClickedFun(!clicked)} className='one'>\n                {props.children[0]}\n            </div>\n            {clicked &&\n                <div className='two' style={{ width: props.childBlock ? oneRef.current.clientWidth+ 'px' : 'auto'}}>\n                    {props.children[1]}\n                </div>}\n\n\n\n        </div>\n    )\n\n}\n\nexport default DropdownClick;","\nimport { getId } from './index';\n\nconst apiCacheHash: any = {\n\n}\ninterface ApiCache<TR> {\n    then: (fn: (arg: TR) => any) => ApiCache<any>;\n    catch: (fn: any) => ApiCache<any>;\n    finally: (fn: any) => ApiCache<any>;\n\n\n}\ninterface ApiCacheConstructor {\n    new <TR>(url: string, p: Promise<any>): ApiCache<TR>;\n}\n\n// @ts-ignore\nexport const ApiCache: ApiCacheConstructor = class _apiCache {\n    private thenCb: CallableFunction | undefined;\n    private catchCb: CallableFunction | undefined;\n    private finallyCb: CallableFunction | undefined;\n\n    constructor(url: string, p: any) {\n\n        setTimeout(() => {\n            if (apiCacheHash[url] && this.thenCb) {\n\n                this.thenCb(apiCacheHash[url])\n            }\n        }, 1);\n\n        console.log(apiCacheHash)\n\n\n\n        p.then((_: any) => {\n            apiCacheHash[url] = _;\n            this.thenCb && this.thenCb(_)\n        })\n        p.catch((_: any) => this.catchCb && this.catchCb(_))\n        p.finally(() => this.finallyCb && this.finallyCb())\n\n    }\n\n\n    then = (cb: CallableFunction) => {\n        this.thenCb = cb\n\n        return this.chainer()\n\n    }\n    catch = (cb: CallableFunction) => {\n        this.catchCb = cb\n        return this.chainer()\n    }\n    finally = (cb: CallableFunction) => {\n        this.finallyCb = cb\n        return this.chainer()\n    }\n    private chainer = () => {\n        return {\n            catch: this.catch,\n            then: this.then,\n            finally: this.finally,\n        }\n    }\n}\n\nexport class Throttle {\n\n    time = 100\n    wait = false;\n    skip = 0\n    times = 0\n    constructor(time: number, skip?: number) {\n\n        this.time = time\n        this.skip = skip || 0\n\n    }\n    start(cb: CallableFunction) {\n\n\n        if (!this.wait) {\n            this.times++\n            if (this.skip && this.times === this.skip) {\n\n            } else {\n                cb()\n                this.wait = true;\n            }\n\n            setTimeout(() => {\n                this.wait = false;\n            }, this.time);\n        }\n\n\n    }\n    resetSkip() {\n        this.times = 0\n    }\n\n\n}\n\n\nexport class DebounceTime {\n\n    time = 400\n    ref: any;\n    active = false;\n    public start = (fn: Function, time?: number) => {\n        if (this.ref) {\n            clearTimeout(this.ref)\n        }\n\n        this.active = true;\n        if (time) {\n            this.time = time\n        }\n        const deffFun = () => {\n            fn()\n            this.active = false\n        }\n\n        this.ref = setTimeout(deffFun, this.time);\n    }\n    public destroy() {\n        clearTimeout(this.ref)\n    }\n\n\n}\n\n\nexport class BehaviourSubject {\n    initialValue = null\n    lastValue = null\n    // @ts-ignore\n    fns: { [id: string]: Function } = {};\n    constructor(value: any) {\n        this.lastValue = value\n        this.initialValue = value\n    }\n\n    public next = (newValue: any) => {\n        this.lastValue = newValue\n        this.subscribe()\n\n    }\n    public subscribe = (fn?: Function, value?: any) => {\n        let id: string;\n        if (fn) {\n            id = getId()\n            this.fns[id] = fn\n\n\n        }\n\n        if (this.fns) {\n            Object.values(this.fns).forEach(_fn => {\n                _fn(this.lastValue)\n            })\n\n        }\n\n\n        if (fn) {\n\n            return {\n                unSubscribe: () => {\n                    delete this.fns[id]\n                    if (Object.keys(this.fns).length === 0) {\n                        this.lastValue = this.initialValue\n\n                    }\n\n                }\n            }\n        }\n\n    }\n}\n\n\nexport const objectClone = <T>(obj: T) => {\n\n    if (!obj) {\n        return obj\n    }\n\n\n    return JSON.parse(JSON.stringify(obj)) as T\n}\n\nexport const wait = (miliseconds: number = 5000) => {\n\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve()\n        }, miliseconds);\n    })\n\n}\n\n\nlet textArea: any;\nexport let copy: any;\n\nfunction isOS() {\n    return navigator.userAgent.match(/ipad|iphone/i);\n}\n\nfunction createTextArea(text: any) {\n\n    textArea = document.createElement('textArea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n}\n\nfunction selectText() {\n    let range: any,\n        selection: any;\n\n    if (isOS()) {\n        range = document.createRange();\n        range.selectNodeContents(textArea);\n        selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n        textArea.setSelectionRange(0, 999999);\n    } else {\n        textArea.select();\n    }\n}\n\nfunction copyToClipboard() {\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n}\n\ncopy = function (text: any) {\n    createTextArea(text);\n    selectText();\n    copyToClipboard();\n};\n","import { CONSTANTS } from './../env';\nimport * as storage from './storage.service'\nexport const getId = () => {\n    return 'a' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}","import { getId } from './index';\nimport { BehaviourSubject } from './helpers';\n\nlet activeWorkSpaceKey = 'default-workspace'\nlet activeWorkspaceData: {\n    name: string;\n    serverUrl: string;\n    version: string;\n    folders: any[]\n\n} = {\n    name: '',\n    serverUrl: '',\n    version: '',\n    folders: []\n\n}\nconst idToRequestHash: any = {\n\n}\nconst defaultFolderStructure = {\n    name: 'default',\n    version: '1.1',\n    serverUrl: '',\n    folders: [\n    {\n        id: getId(),\n        name: 'Sample emit request',\n        isFolder: false,\n        event: \"message\",\n        type: \"emit\",\n        emitBody: `{\"foo\": \"bar\"}`\n    },\n    {\n        id: getId(),\n        name: 'Sample listen request',\n        isFolder: false,\n        event: \"message\",\n        type: \"listen\",\n        listenBody: `{\"foo\": \"bar\"}`\n    },\n    {\n        id: getId(),\n        name: 'Yep ! a folder 😉',\n        isFolder: true,\n        children:[\n            {\n                id: getId(),\n                name: 'i am a request in a folder',\n                isFolder: false,\n                event: \"message_listener\",\n                type: \"listen\",\n                listenBody: `{\"foo\": \"bar\"}`\n            },\n        ],\n    },\n    {\n        id: getId(),\n        name: 'Right click on me to see folder options',\n        isFolder: true,\n        children:[\n        \n        ],\n    }\n]}\n\nconst defaultWorkspacesStructure = {\n    'default-workspace':{name:'Default', key: 'default-workspace'}\n}\nlet workspaces: any;\n\n/**\n * Helps to remove un wanted code next time the application initializes\n * @param data\n */\nfunction sanitize(data: any){\n\n\n    return data\n\n}\nexport class WorkspaceService {\n    public static persist() {\n        localStorage.setItem(activeWorkSpaceKey, JSON.stringify(activeWorkspaceData))\n\n    }\n    public static load() {\n        activeWorkspaceData = sanitize(JSON.parse(localStorage.getItem(activeWorkSpaceKey) || JSON.stringify(defaultFolderStructure)))\n\n    }\n    // ww\n    public static loadWorkspaces() {\n        workspaces = JSON.parse(localStorage.getItem('workspaces') || JSON.stringify(defaultWorkspacesStructure))\n        activeWorkSpaceKey = localStorage.getItem('active-workspace') || activeWorkSpaceKey\n\n       \n    }\n    public static getWorkspaces() {\n        return  workspaces;\n\n    }\n    public static changeWorkspace(key:string) {\n        if(key == activeWorkSpaceKey){\n            return\n        }\n        localStorage.setItem('active-workspace', key)\n        window.location.reload()\n\n    }\n    public static addWorkspace(name:string) {\n        name = name.substring(0,13)\n        const key: string = getId()\n        const _workspace = this.getWorkspaces()\n        _workspace[key]={name,key}\n\n        localStorage.setItem('workspaces', JSON.stringify(_workspace))\n        localStorage.setItem('active-workspace', key)\n        this.changeWorkspace(key);\n\n    }\n    public static getActiveWorkspaceKey() {\n        return  activeWorkSpaceKey\n\n    }\n    public static getServerUrl(){\n\n        return activeWorkspaceData.serverUrl;\n\n    }\n    public static setServerUrl(url:string){\n\n        activeWorkspaceData.serverUrl = url\n        this.persist()\n\n    }\n\n\n    private static setDataFolders(folders: any[]) {\n        activeWorkspaceData.folders = folders;\n    }\n    public static generateRequestHash() {\n        function folderParse(dd: any[]) {\n            dd.forEach(d => {\n                if (d.isFolder) {\n                    folderParse(d.children || [])\n                } else {\n                    idToRequestHash[d.id] = d\n                }\n            })\n\n        }\n        folderParse(activeWorkspaceData.folders)\n\n    }\n    public static getRequestHash() {\n        return idToRequestHash;\n\n\n\n    }\n    public static getRequestFromId(tree: string) {\n\n        return idToRequestHash[tree]\n\n    }\n    public static treeDataModifier(options: any = {}, tree: string, cb?: any, localFolders?: any[]): any {\n        const treeSplit = tree.split('/').filter(_ => _)\n\n        let treeIndex = 0;\n        let targetC;\n\n\n        function treeDataModifierF(cb?: any, localFolders?: any[]): any {\n            let lastLoop = false;\n            if (treeIndex === (treeSplit.length - 1)) {\n                lastLoop = true\n            }\n            let folderTree: any[] = localFolders || JSON.parse(JSON.stringify(activeWorkspaceData.folders));\n\n\n            if (treeSplit.length === 0) {\n\n                if (cb) {\n                    cb(null, folderTree)\n\n                }\n                WorkspaceService.setDataFolders(folderTree);\n                if (options.emit) {\n\n                    foldersObs.next(activeWorkspaceData.folders);\n                }\n                return { c: null, folderTree }\n\n            }\n\n\n\n\n\n\n            const id = treeSplit[treeIndex];\n\n\n\n            for (let c of folderTree) {\n                if (c.id === id) {\n                    targetC = c;\n\n                    if (c.isFolder && (treeIndex < (treeSplit.length - 1))) {\n\n                        treeIndex++\n                        treeDataModifierF(cb, c.children)\n\n\n                    }\n\n\n\n                    if (cb && lastLoop) {\n\n                        cb(c, folderTree)\n\n                    }\n                    WorkspaceService.setDataFolders(folderTree);\n                    if (options.emit) {\n\n                        foldersObs.next(activeWorkspaceData.folders);\n                    }\n\n                    return { c: targetC, folderTree }\n\n                }\n            }\n\n\n        }\n\n      \n        try {\n         \n\n            return treeDataModifierF(cb, localFolders)\n            //  data = data.[]\n\n\n        }\n        catch (e) {\n\n            return null\n\n        }\n\n    }\n\n\n\n\n}\nWorkspaceService.loadWorkspaces()\nWorkspaceService.load()\nWorkspaceService.generateRequestHash();\n\nexport const foldersObs = new BehaviourSubject(activeWorkspaceData.folders)\n\n\n\n\nexport default WorkspaceService","import { WorkspaceService } from './Workspace.service';\nimport { toaster } from './core.service';\nimport io from 'socket.io-client';\nimport { store } from '../store';\nimport { addActivity, setStatus, setTrackers } from '../store/actions/socket.action';\n\n\nlet tracker: {\n    [id: string]: {\n        type: 'emit' | 'listen'\n        event: string\n    }\n\n} = {}\nlet listenEventToId:{\n    [event: string]: string\n\n}={}\nlet lastListenEvent: any = {}\nlet status: any = {}\n\n\nclass SocketService {\n    // @ts-ignore\n    socket: SocketIOClient.Socket;\n    // @ts-ignore\n    host: string;\n    public initialize(host: string, cb?: any) {\n       \n            this.host = host;\n            this.socket = io(host)\n\n            this.socket.on('connect', () => {\n                toaster({ type: 'success', message: `<i class='fa fa-plug mr-2 '> </i>  Connected 🎉🎉` })\n                if(cb){\n                    cb(true)\n                }\n               \n                this.emitActivity('listen', 'connect')\n                status.connected = true\n                this.next()\n\n            \n            this.socket.on('disconnect', () => {\n\n                this.disconnect()\n                // this.initialize(this.host)\n\n            })\n\n        })\n      \n    }\n    public initializeAndListen(host: string) {\n        this.initialize(host, () => {\n            const h = WorkspaceService.getRequestHash()\n            Object.values(h).forEach((b: any) => {\n                if (b.type === 'emit' && b.event) {\n                    this.emit(b.id, b.event, b.emitBody)\n                }\n                if (b.type === 'listen' && b.event) {\n                    this.listen(b.id, b.event)\n                }\n            })\n\n        })\n  \n      \n\n     \n\n     \n    }\n    private next() {\n        store.dispatch(setStatus(status))\n    }\n    private emitActivity(type: string, event: string, data?: any) {\n        store.dispatch(addActivity({ type, event, data }))\n\n    }\n    private emitTracker(id?: string, data?: any) {\n        if (!id) {\n            tracker = {};\n            store.dispatch(setTrackers(tracker))\n            return\n        }\n        if (!data) {\n            delete tracker[id];\n        } else {\n            tracker[id] = data\n        }\n\n\n\n        store.dispatch(setTrackers(tracker))\n\n    }\n    getLastListenEvent(event: string){\n        return lastListenEvent[event]\n    }\n    removeFromTrackerIfExist(id:string){\n        \n        if(tracker[id]){\n            if (tracker[id].type === 'listen'){\n                delete listenEventToId[tracker[id].event]\n                delete lastListenEvent[tracker[id].event]\n                this.socket.removeListener(tracker[id].event);\n            }\n            this.emitTracker(id)\n        }\n\n    }\n    public disconnect() {\n        toaster({ type: 'danger', message: `<i class='fa fa-warning mr-2 '> </i>  Disconnected` })\n        // @ts-ignore\n        this.socket.destroy();\n        // @ts-ignore\n        delete this.socket;\n        // @ts-ignore\n        this.socket = null;\n\n        status.connected = false\n        this.emitActivity('listen', 'disconnect')\n        this.emitTracker()\n        this.next()\n        listenEventToId = {}\n        lastListenEvent = {}\n    }\n\n    cancelListen(id: string, event: string) {\n        this.emitTracker(id)\n        delete listenEventToId[event]\n        delete lastListenEvent[event]\n        this.socket.removeListener(event);\n    }\n  \n\n    listen(id: string, event: string) {\n       \n        if (listenEventToId[event] ){\n            toaster({ type: 'danger', message: `<i class='fa fa-info mr-2 '> </i>  A request is already listening to this event \"<b>${event}</b>\"` })\n            return\n        }\n        if (tracker[id] && tracker[id].type === 'listen') {\n            return;\n        }\n        this.emitTracker(id, {\n            type: 'listen',\n            event\n\n        })\n \n        listenEventToId[event] = id;\n\n        this.socket.on(event, (data: any) => {\n         \n            console.log({event})\n           \n        \n            lastListenEvent[event] = (typeof data === 'string' ? data : JSON.stringify(data))\n            this.emitActivity('listen', event, (typeof data === 'string' ? data : JSON.stringify(data)))\n\n        })\n    }\n    emit(id: string, event: string, data: any) {\n\n        // if the previous one was listen, remove it\n\n        if (tracker[id] && tracker[id].type === 'listen') {\n            delete listenEventToId[event]\n            this.socket.removeListener(event);\n\n\n        }\n        if (!tracker[id] || tracker[id].type != 'emit') {\n            this.emitTracker(id, {\n                type: 'emit',\n                event\n\n            })\n        }\n      \n        this.socket.emit(event, data)\n\n        this.emitActivity('emit', event,( typeof data == 'string' ? data : JSON.stringify(data)) )\n\n    }\n\n\n}\n/*\nversion 2 scripting\n\n\n    if (activeRequest.script) {\n                try {\n                    const newBody = await new Function(activeRequest.script)()(activeRequest.emitBody);\n                    if(!newBody){\n                        throw ''\n                    }\n\n                    return socketService.emit(activeRequest.id as any, activeRequest.event, newBody)\n\n                } catch (e) {\n                    toaster({ type: 'danger', message: `<i class='fa fa-info mr-2 '> </i> Your script is invalid, skipping...` })\n\n\n                }\n\n            }\n\n*/\n\nconst socketService = new SocketService()\n\nexport default socketService","import React from 'react'\n\nexport default function TypePill(props: any){\n    return(\n        <small className={'p-1  font-weight-bold ' + (props.type == 'emit' ? 'text-primary' : 'text-secondary')} >{ props.type}</small>\n    )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport './Activity.scss';\nimport { connect } from 'react-redux'\nimport { setTitle } from '../../../store/actions/app.action'\nimport Editor from '@monaco-editor/react';\nimport DropdownClick from '../../misc/DropdownClick/DropdownClick';\nimport TypePill from '../../misc/TypePill/TypePill';\n\nconst DEFAULTS = {\n    'listen-connect': true,\n    'listen-disconnect': true,\n}\n\nfunction Activity(props: any) {\n    const [events, setEvents] = useState({} as any)\n    const eventsDisplayRef = useRef(null as unknown as HTMLDivElement);\n    function setEventRefF(hash: any) {\n    \n       \n\n  \n        const h = {...hash}\n\n        Object.keys(events).forEach(key => {\n            const prevValue = events[key]\n    \n\n            if (prevValue == undefined) {\n                h[key] =  true\n            }else {\n                h[key] = prevValue\n            }\n            \n\n\n        })\n\n\n       \n\n        setEvents(h)\n\n    }\n\nfunction keyGen(type: any,event: any){\n    return type + '-' + event\n}\n\n\n    useEffect(() => {\n\n\n        setTimeout(() => {\n            eventsDisplayRef.current?.scrollTo({\n                left: 0,\n                top: eventsDisplayRef.current.scrollHeight,\n                behavior: 'smooth'\n            })\n\n\n        }, 500)\n\n\n      \n        \n        const hash: any = {...DEFAULTS} ;\n        (Object.values(props.socket.tracker) as any[]).forEach(e => {\n            const key = keyGen(e.type, e.event);\n            hash[key] = true;\n\n        });\n\n        setEventRefF(hash)\n\n    }, [props.socket.activities, props.socket.tracker])\n\n \n    const totalEvents = Object.values(events);\n    const activeEvents = totalEvents.filter(_=>_) \n\n    return (\n\n        <div className='Activity'>\n            <div className='change-in-dark-1 mb-2' style={{ marginTop: '5px' }}> Activity</div>\n       \n            <DropdownClick onClick={(opened:boolean) => {\n               if(!opened){\n                  \n               }\n            }} block={true}>\n                <div className='border pr-3 pl-2 pt-2 pb-2 change-in-dark-1 rounded capitalize input-mimick cursor '>\n                    {activeEvents.length == totalEvents.length ? 'All' : (activeEvents.length + \" Events\")}\n                    <i className='fa fa-angle-down float-right '></i>\n                </div>\n\n                <div className='change-in-dark-1 capitalize p-2 input-mimick'>\n \n                    {Object.keys(events).map((k, i) => <div key={i} className=' '><>\n                        <input\n                            checked={events[k]}\n                        onChange={(e: any) => {\n                            \n                           setEvents({\n                               ...events, [k]:e.target.checked\n                           })\n                        }} type='checkbox' className='cursor mr-1' />\n                    {k}</></div>)}\n                </div>\n\n\n\n            </DropdownClick>\n            <br />\n\n\n            <div ref={eventsDisplayRef} style={{ height: 'calc(100vh - 180px)', overflow: 'auto' }}>\n                {(props.socket.activities as any[]).map((activity, i) => {\n                    const isActivityEmit = activity.type == 'emit';\n                    const showEvent = events[keyGen(activity.type, activity.event)] != false\n                    return (\n                        <div key={i}>\n                            {showEvent ?<>\n                            <div\n                                className={'p-2 text-color-default border rounded ' + (isActivityEmit ? 'border-primary' : 'border-secondary')}\n                                style={\n                                    {\n                                        marginLeft: (isActivityEmit ? '80px' : '0px'),\n                                        marginRight: (!isActivityEmit ? '80px' : '0px')\n                                    }\n\n\n                                }>\n                                    <span style={{ display: 'block', textAlign: (isActivityEmit ? 'right' : 'left') }}>{activity.event} |   <TypePill type={(activity as any).type} /></span>\n\n                                {activity.data && <div >\n                                    <Editor options={{\n                                        readOnly: true,\n                                        lineNumbers: \"off\",\n                                        scrollBeyondLastLine: false,\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on',\n                                        automaticLayout: true\n\n                                    }} theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'}\n                                        height='50px'\n                                        value={activity.data} language=\"json\" />\n\n                                </div>}\n                            </div>\n                            <br />\n                            </>: <></>}\n                        </div>\n                    )\n                })}\n\n\n            </div>\n        </div>\n\n\n    )\n}\n\n\nconst mapStateToProps = (state: any) => ({\n\n    app: state.app,\n    socket: state.socket\n})\n\n\nexport default connect(mapStateToProps, { setTitle })(Activity)","import React from 'react'\n\n\nexport default function Blank(props: any) {\n    const isPc = window.innerWidth > 800;\n\n    return (\n        <div style={{\n            height: 'calc(100vh - 200px)',\n            display: 'flex',\n            alignItems: isPc ? 'center': '',\n\n            //    justifyContent: 'center'\n        }}>\n\n            <div className={'change-in-dark-1 ' + (isPc ? 'p-4' : '' )}>\n             \n\n                <span className='h3 d-block text-center'>Open a Request</span>\n                    <br />\n                <br />\n\n                <div className='row'>\n                    <div className='mb-3 col-md-6'>\n                        <b className='h4'>How to use</b>\n                        <ul className='h6 mt-2'>\n                            <li className='mb-2'>Connect  to socket url</li>\n\n                            <li className='mb-2'>Make an emit request </li>\n                            <li className='mb-2'>create a listen request</li>\n                            <li className='mb-2'>Receive the request from your server and emit back the listen event</li>\n\n                            <li className='mb-2'> Emit the <code>emit</code> request </li>\n                            <li className='mb-2'>Listen to the <code>listen</code> request</li>\n                        </ul>\n\n                    </div>\n                    <div className='mb-3 col-md-6'>\n                        <b className='h4'>Testing with socketio demo server </b>\n                        <ul className='h6 mt-2'>\n                            <li className='mb-2'>Connect  to socket url <code className='small'>https://socketio-chat-h9jt.herokuapp.com/</code></li>\n                            <li className='mb-2'>create a listen request <code className='small'>new message</code></li>\n                            <li className='mb-2'>Make an emit request  <code className='small'>add user</code> with message body as your username</li>\n                            <li className='mb-2'>Make another emit request  <code className='small'>new message</code> with message body</li>\n                     <li className='mb-2'> You will not see the <code className='small'>new message</code>  listener emitted back because the demo server does not send back your requests but you will see the messages of other people streaming down the activity bar  </li>\n                     </ul>\n\n                    </div></div>\n          \n            \n\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport './Request.scss';\nimport { connect } from 'react-redux'\nimport { setTitle, setActiveTree } from '../../../store/actions/app.action'\nimport DropdownClick from '../../misc/DropdownClick/DropdownClick';\nimport { sendToCollectionObs, toaster } from '../../../Providers/core.service';\nimport { CollectionRequest } from '../../types';\nimport CollectionsService from '../../../Providers/Workspace.service';\nimport socketService from '../../../Providers/socket.service';\nimport Activity from '../Activity/Activity';\nimport Editor, { ControlledEditor } from '@monaco-editor/react';\nimport * as envJson from '../../../env.json'\nimport Blank from '../../misc/Blank/Blank';\n\nconst bodyTypes = [\"json\", \"object\", \"string\"]\nfunction Request(props: any) {\n    const [saved, setSaved] = useState(true);\n    const [requestTree, setRequestTree] = useState('');\n    const [activeCellIndex, setActiveCellIndex] = useState(0);\n    const [showDetails, setShowDetails] = useState(false);\n    const [showActivity, setShowActivity] = useState(true);\n    const [tabs, setTabs] = useState([] as any[])\n    const [activeRequest, setActiveRequest] = useState(null as unknown as CollectionRequest);\n    const subs = useRef([] as any[])\n    const navbarCriticalChangedRef = useRef(false);\n    const saveKeyRef = useRef(null as unknown as any);\n\n    const cells = activeRequest && activeRequest.type == 'emit' ? ['EmitBody', 'Options'] : ['ListenBody', 'Options']\n\n\n\n    useEffect(() => {\n\n\n        subs.current.push(sendToCollectionObs.subscribe((data: any) => {\n            if (!data) {\n                return\n            }\n\n            switch (data.type) {\n                case 'open-request':\n\n                    // if tab doesnt exist before, create a new pne\n                    if (tabs.indexOf(data.tree) == -1) {\n                        const tabsClone = [...tabs, data.tree];\n                        setTabs(tabsClone)\n                    }\n                    // if the previous request was not saved, save it\n                    if (!saved) {\n                        save()\n                    }\n\n\n                    // get old emitted message\n                    if (data.request.type == 'listen') {\n                        const plausibleOldEmittions = socketService.getLastListenEvent(data.request.event);\n                        // get old emittions, the ones that happened when yoy were away\n                        if (plausibleOldEmittions && plausibleOldEmittions != data.request.listenerBody) {\n                            data.request.listenerBody = plausibleOldEmittions\n\n                            toaster({ type: 'info', message: `<i class='fa fa-info mr-2 '> </i> Listen Body updated for this request` })\n                            setTimeout(() => {\n                                setSaved(false)\n                            }, 500);\n                        }\n\n\n\n\n                    }\n                    setActiveRequest(data.request)\n                    setRequestTree(data.tree)\n\n\n                    break;\n                case 'del-request':\n\n                    if (tabs.indexOf(data.tree) != -1) {\n                        deleteTab(data.tree)\n                    }\n                    break;\n                case 'rename-request':\n\n                    if (data.tree == requestTree) {\n                        setActiveRequest({ ...activeRequest, name: data.name })\n                    }\n                    break;\n            }\n\n\n\n        }\n\n        ))\n        props.setTitle(activeRequest ? activeRequest.name : '')\n        if (envJson.prod && !saved) {\n            window.onbeforeunload = function (event: any) {\n                if (!saved) {\n                    save()\n                }\n                return true\n            };\n\n        }\n\n        saveKeyRef.current = function (event: any) {\n            var S: any = 83,\n                activeElement: any = document.activeElement;\n           \n\n            if ((event.key === S || event.keyCode === S) && (event.metaKey || event.ctrlKey) && activeElement.nodeName === 'TEXTAREA') {\n              \n                    event.preventDefault();\n                   if(!saved){\n                       save()\n                   }\n                \n            }\n        }\n\n        document.addEventListener('keydown', saveKeyRef.current);\n    \n\n\n        return () => {\n            subs.current.forEach((sub: any) => sub.unSubscribe())\n           // document.removeEventListener('keydown', saveKeyRef.current);\n\n\n        }\n\n    }, [tabs, activeRequest])\n\n    const user = props.app.userData;\n\n    const darkMode = props.app.darkMode;\n    function handleChange(e: any) {\n        if (saved) {\n            setSaved(false);\n        }\n        if (e.target.name == 'name' || e.target.name == 'type') {\n            navbarCriticalChangedRef.current = true\n        }\n        const clone: any = { ...activeRequest }\n        clone[e.target.name] = e.target.value;\n        setActiveRequest(clone)\n\n\n\n    }\n    function save() {\n\n        CollectionsService.treeDataModifier({ emit: navbarCriticalChangedRef.current }, requestTree, (d: any) => {\n\n     \n            Object.keys(activeRequest).forEach(k => {\n                d[k] = activeRequest[k]\n            })\n        })\n        CollectionsService.generateRequestHash();\n        CollectionsService.persist();\n        setSaved(true)\n\n    }\n    function deleteTab(tab: string) {\n        const tabsClone = tabs.filter(t => t != tab);\n\n\n        if (tab == requestTree) {\n            save()\n\n            if (tabsClone.length > 0) {\n                activateTab(tabsClone[tabsClone.length - 1])\n            } else {\n                // clear the location request tree\n                props.history.push(window.location.pathname)\n                setActiveRequest(null as unknown as any);\n                setRequestTree('')\n            }\n\n\n        }\n\n\n\n        setTabs(tabsClone)\n\n    }\n    function activateTab(tree: string) {\n        if (tree == requestTree) {\n            return;\n        }\n        if (!saved) {\n            save()\n        }\n        // update the location request tree\n        props.history.push(window.location.pathname + '?requestTree=' + tree)\n        props.setActiveTree(tree)\n\n        const ids = tree.split('/')\n        const id = ids[ids.length - 1]\n\n        setActiveRequest(CollectionsService.getRequestFromId(id))\n        setRequestTree(tree)\n\n\n\n    }\n    function tabTreeToName(tree: string) {\n        const ids = tree.split('/')\n        const id = ids[ids.length - 1]\n        return CollectionsService.getRequestFromId(id)?.name\n    }\n\n\n    async function action(type: string) {\n        if (!props.socket.status.connected) {\n            toaster({ type: 'danger', message: `<i class='fa fa-info mr-2 '> </i>  You are not connected` })\n\n            return\n        }\n        if (type == 'emit') {\n            let body = activeRequest.emitBody;\n\n\n            try {\n                if (activeRequest.bodyType == 'object') {\n                    body = JSON.parse(activeRequest.emitBody)\n                }\n\n            } catch (e) {\n                toaster({ type: 'info', message: `<i class='fa fa-info mr-2 '> </i> Cound not convert body to '${activeRequest.bodyType}'.. sending body as string instead` })\n\n\n            }\n\n\n\n\n            socketService.emit(activeRequest.id as any, activeRequest.event, body)\n        } else if (type == 'listen') {\n            socketService.listen(activeRequest.id as any, activeRequest.event)\n\n        } else if (type == 'cancel-listen') {\n            socketService.cancelListen(activeRequest.id as any, activeRequest.event)\n        }\n    }\n\n    const alreadyListening = (activeRequest && props.socket.tracker[activeRequest.id] && props.socket.tracker[activeRequest.id].type == 'listen')\n\n    const handleEditorChange = (ev: any, value: any, type: any) => {\n        setSaved(false)\n        if (type == 'emit') {\n            setActiveRequest({ ...activeRequest, emitBody: value });\n        }\n        if (type == 'script') {\n            setActiveRequest({ ...activeRequest, script: value });\n        }\n\n    };\n    const editNameAndDescription = () => {\n\n        alert('coming soon......')\n    }\n\n\n\n    return (\n\n        <div className='Request h-100'>\n\n            <div className='row h-100'>\n                <div className={'h-100 p-0 ' + (props.app.darkMode ? ' bg-dark ' : '') + (showActivity ? 'border-right  col-md-9' : 'col-md-12')}>\n                    <div className={'pt-2 pl-2 pr-2 ' + (props.app.darkMode ? ' bg-dark-light ' : 'bg-default-light')} style={{ width: '100%', overflowX: 'auto', overflowY: 'hidden', whiteSpace: 'nowrap' }}>\n                        {tabs.map((tab, i) => <span key={i} className={'cursor p-1 text-color-default ' + (i == 0 ? ' ' : 'border-left ') + (tab == requestTree ? (props.app.darkMode ? ' bg-dark ' : 'bg-app') : '')}><span onClick={() => activateTab(tab)} className='mr-1 small font-weight-bold'> {tabTreeToName(tab)}</span> <span onClick={() => deleteTab(tab)}> <i className='fa fa-close'></i></span> </span>)}\n                    </div>\n                    <div style={{ height: 'calc(100vh - 180px)', overflow: 'auto' }} className='p-2'>\n                        {activeRequest ? <>\n\n\n                            <div className='change-in-dark-1 mb-2' style={{ marginTop: '5px' }}>\n                                <div className='float-right'>\n                                    <div onClick={() => setShowActivity(!showActivity)} className='cursor text-primary'>\n                                        {showActivity ? <>\n                                            <i className='fa fa-arrow-right'></i>\n                                        </> : <>\n                                                <i className='fa fa-arrow-left'></i>\n                                            </>}\n\n\n                                    </div>\n                                </div>\n                                <div><span className='cursor' onClick={() => setShowDetails(!showDetails)}><i style={{ width: '15px' }} className={' fa mr-1 ' + (showDetails ? 'fa-caret-down' : 'fa-caret-right')}></i>{activeRequest.name}</span> <span className='cursor small ml-2' onClick={() => editNameAndDescription()}><i className='fa fa-pen'></i></span></div>\n\n                                {showDetails &&\n\n                                    <div style={{ marginLeft: '15px' }} className=' small'>\n                                        {activeRequest.description ? <>{activeRequest.description}</> : <small className='cursor' onClick={() => editNameAndDescription()}>Add description<i className='fa fa-pen ml-2'></i></small>}\n                                    </div>\n                                }\n                            </div>\n\n                            <div className='request-bar'>\n                                <div className='request-bar-item request-bar-item-1'>\n\n\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <select disabled={activeRequest.type == 'listen' && alreadyListening} name=\"type\" onChange={handleChange} value={activeRequest.type} className='form-control'>\n                                                <option value='emit'>Emit</option>\n                                                <option value='listen'> Listen</option>\n                                            </select>\n\n                                        </div>\n\n                                        <input type=\"text\" disabled={activeRequest.type == 'listen' && alreadyListening} value={activeRequest.event} name=\"event\" onChange={handleChange} className=\"form-control\" placeholder={activeRequest.type == 'emit' ? \"Add emit event\" : \"Add listen event\"} />\n\n                                    </div>\n\n\n                                </div>\n                                <div className='request-bar-item request-bar-item-2'>\n                                    {activeRequest.type == 'emit' && <button onClick={() => action('emit')} className=\"btn btn-secondary\" type=\"button\" >Emit</button>}\n                                    {activeRequest.type == 'listen' && <button onClick={() => action(alreadyListening ? 'cancel-listen' : 'listen')} className=\"btn btn-secondary\" type=\"button\" >{alreadyListening ? 'Cancel listener' : 'Listen'}</button>}\n\n                                </div>\n                                <div className='request-bar-item request-bar-item-3'>\n\n                                    {!saved && <button onClick={save} className=\"btn btn-outline-secondary\" type=\"button\">Save</button>}\n                                </div>\n\n                            </div>\n                            <br />\n                            <div className='text-color-default' style={{}}>\n                                {cells.map((cell, i) => {\n                                    return (\n                                        <div onClick={() => setActiveCellIndex(i)} key={i} className={'cell mr-2 p-2  d-inline cursor ' + (activeCellIndex == i ? 'border-bottom border-secondary' : '')} style={{ borderBottomWidth: '5px' }}>\n                                            {cell}\n                                        </div>)\n                                })}\n                            </div>\n                            <br />\n\n                            {activeCellIndex == 0 && activeRequest.type == 'emit' &&\n\n                                <div>\n\n\n\n\n\n                                    <ControlledEditor theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'} options={{\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on'\n\n\n                                    }} height=\"calc(100vh - 300px)\" onChange={(ev: any, value: any) => handleEditorChange(ev, value, 'emit')} value={activeRequest.emitBody || ''} language=\"json\" />\n                                </div>}\n\n                            {activeCellIndex == 0 && activeRequest.type == 'listen' &&\n\n                                <div>\n\n                                    <ControlledEditor theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'} options={{\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on',\n                                        readOnly: true\n\n                                    }} height=\"calc(100vh - 300px)\" value={activeRequest.listenerBody || ''} language=\"json\" />\n\n                                    <small className='text-color-default'>Listen body is automatically updated when this event is called</small>\n                                </div>}\n                            {activeCellIndex == 1 &&\n\n                                <div>\n\n                                    <table className=\"table text-color-default\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">Option</th>\n                                                <th scope=\"col\">Value</th>\n                                                <th scope=\"col\">description</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n\n                                                <td> Body Type</td>\n                                                <td><select name=\"bodyType\" onChange={handleChange} value={activeRequest.bodyType} className=''> {bodyTypes.map(bodyType => <option value={bodyType}>{bodyType}</option>)} </select>\n                                                </td>\n                                                <td className='small'>Determines what the body should be sent as for emit requests and also what type of body the listen requests are receiving</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n\n\n                                </div>}\n                            {\n                                /*\n                            activeCellIndex == 2 &&\n\n                                <div>\n\n                                    <ControlledEditor onChange={(ev: any, value: any) => handleEditorChange(ev, value, 'script')} theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'} options={{\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on',\n\n\n                                    }} height=\"calc(100vh - 300px)\" value={activeRequest.script || ''} language=\"javascript\" />\n\n\n                                </div>\n                                */\n\n                            }\n\n\n\n                        </> : \n                        \n                       <Blank />\n                        }\n\n                    </div>\n                </div>\n                <div className={showActivity ? 'col-md-3 h-100' : \"d-none\"}>\n                    <Activity />\n\n\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\n\nconst mapStateToProps = (state: any) => ({\n\n    app: state.app,\n    notifications: state.notifications,\n    socket: state.socket\n})\n\n\nexport default connect(mapStateToProps, { setTitle, setActiveTree })(Request)","import React from 'react'\nimport { prompter } from '../../../Providers/core.service'\nimport WorkspaceService from '../../../Providers/Workspace.service'\nimport DropdownClick from '../DropdownClick/DropdownClick'\n\n\nexport default function WorkspaceToggle(props: any) {\n    const activeWorkspace = WorkspaceService.getActiveWorkspaceKey()\n    const workspaces = WorkspaceService.getWorkspaces()\n    function changeWorkspace(key: string){\n        WorkspaceService.changeWorkspace(key)\n\n    }\n    async function addWorkspace(){\n        const name: any = await prompter('Enter workspace name')\n        WorkspaceService.addWorkspace(name)\n\n    }\n    \n    return (\n        <span className='d-inline-block' style={{verticalAlign: 'top'}}>\n            <DropdownClick style={{ width: '156px', top: '5px', position: 'relative' }} childBlock={true}>\n            <small className='d-block bg-primary cursor font-weight-bold border rounded p-1 text-white '>\n                <i className='fa fa-th'></i> {workspaces[activeWorkspace].name}  <i className='float-right mt-1 fa fa-angle-down ml-2'></i>\n            </small>\n\n            <div className='dropdown-click-close change-in-dark-1 border rounded bg-white '>\n                {(Object.values(workspaces) as any[]).map((w, i) => <small key={i} onClick={()=>changeWorkspace(w.key)} className='p-1 cursor d-block hover-collection'>{w.name}</small>)}\n\n\n\n                <small onClick={()=>addWorkspace()} className='p-1 cursor d-block hover-collection text-right'><i>Create new</i> <i className='fa fa-plus'></i></small>\n\n            </div>\n\n        </DropdownClick>\n        </span>\n    )\n}","import React, { useState, useEffect, useRef } from 'react'\nimport './Layout.scss'\nimport { Route, Redirect, Link, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { loading } from '../../store/actions/network.action'\nimport { setUserData, toggleDarkMode, setActiveTree } from '../../store/actions/app.action'\n\nimport { confirmer, sendToCollectionObs, getId, prompter } from '../../Providers/core.service';\n\nimport * as envJson from '../../env.json'\nimport { toaster } from '../../Providers/core.service'\n\nimport DropdownClick from '../misc/DropdownClick/DropdownClick';\n\n\nimport * as storage from '../../Providers/storage.service'\nimport socketService from '../../Providers/socket.service';\nimport Request from '../modules/Request/Request';\nimport { CollectionFolder, CollectionRequest } from '../types';\nimport CollectionsService, { foldersObs, WorkspaceService } from '../../Providers/Workspace.service';\nimport { setTimeout } from 'timers';\nimport TypePill from '../misc/TypePill/TypePill';\nimport WorkspaceToggle from '../misc/WorkspaceToggle/WorkspaceToggle';\n\n\n\nconst isPc = window.innerWidth > 800;\n\n\n\nfunction Layout(props: any) {\n\n\n\n\n    const [sidebarMin, setSidebarMin] = useState(!isPc) //isPc\n    const [activeNavIndex, setActiveNavIndex] = useState(0)\n\n    const [socketUrl, setSocketUrl] = useState(WorkspaceService.getServerUrl() || '')\n    const [lastSelectedFolderTree, setLastSelectedFolderTree] = useState('/')\n    const [collections, setCollections] = useState([] as any[])\n    const [contextMenu, setContextMenu] = useState(null as unknown as any);\n    const contextRef = useRef(null as unknown as any)\n    const lastFolderRef = useRef(null as unknown as any)\n    const collectionsModified = useRef(0)\n\n    \n    const darkMode = props.app.darkMode;\n    const activeTree = props.app.activeTree;\n\n    function toggleDarkMode() {\n        props.toggleDarkMode()\n    }\n\n\n\n    useEffect(() => {\n        if (window.matchMedia('(prefers-color-scheme: dark)').matches && storage.darkMode.get() != 'true' && storage.dontAskDarkMode.get() != 'true'\n\n        ) {\n            confirmer(`We detected your ${isPc ? 'device' : 'phone'} is in dark mode, Do you want to change to dark mode ?`)\n                .then(_ => {\n                    if (!_) {\n                        return\n                    }\n                    toggleDarkMode()\n                })\n                .catch(() => {\n                    storage.dontAskDarkMode.set('true')\n\n                })\n        }\n\n\n        foldersObs.subscribe((data: any) => {\n\n            setCollections(data)\n        })\n\n        window.addEventListener('contextmenu', (e: any) => e.preventDefault());\n        if (socketUrl) {\n\n\n            socketService.initializeAndListen(socketUrl)\n        }\n\n        return () => {\n\n\n\n        }\n    }, [])\n\n    useEffect(() => {\n        if (collectionsModified.current == 1) {\n            const params = new URLSearchParams(window.location.search)\n            const paramsTree = params.get('requestTree');\n            if (paramsTree) {\n                onCollectionEvent('openRequest', paramsTree)\n            }\n        }\n\n        collectionsModified.current++\n        return () => {\n            // cleanup\n        };\n    }, [collections]);\n    useEffect(() => {\n        const f = () => {\n\n            if (!isPc && !sidebarMin) {\n                setSidebarMin(true)\n\n            } else {\n                window.removeEventListener('scroll', f)\n            }\n\n\n\n\n\n        }\n        setTimeout(() => {\n            window.addEventListener('scroll', f)\n\n        }, 1000);\n\n\n        return () => {\n            window.removeEventListener('scroll', f)\n\n        }\n    }, [sidebarMin])\n    const initLoadFinished = props.app.finishedAuthenticationAttempt;\n    const user = props.app.userData;\n\n    function sideBarBlur() {\n\n        if (isPc) {\n            return\n        }\n\n\n        if (!sidebarMin) {\n            setSidebarMin(true)\n        }\n\n\n\n    }\n    function idFromTree(tree: string) {\n        const h = tree.split('/');\n        return h[h.length - 1]\n\n    }\n    function changeCollection(id: number) {\n    \n    }\n\n    async function onCollectionEvent(type: string, tree: string, treeName?: string, other?:string) {\n\n\n        if (type == 'toggleFolder') {\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any) => {\n                data.isFolderOpened = !(data.isFolderOpened || false)\n            })\n\n\n        } else if (type == 'openRequest') {\n\n            try {\n\n                if (tree == activeTree) {\n                    return\n                }\n\n                const request = CollectionsService.treeDataModifier({ emit: false }, tree).c\n\n                props.history.push(window.location.pathname + '?requestTree=' + tree)\n\n                props.setActiveTree(tree)\n\n                sendToCollectionObs.next({ type: 'open-request', request, tree })\n\n            } catch (e) {\n                props.history.push(window.location.pathname)\n\n            }\n\n        }\n\n        //create-request\n        //create-folder\n        //delete\n        //rename\n        else if (type == 'delete') {\n\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n\n                for (let index = 0; index < collectionTree.length; index++) {\n                    const t = collectionTree[index];\n                    if (t.id == data.id) {\n                        collectionTree[index] = false;\n                    }\n\n                }\n\n            })\n            sendToCollectionObs.next({ type: 'del-request', tree })\n            socketService.removeFromTrackerIfExist(idFromTree(tree))\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n        }\n        else if (type == 'rename') {\n     \n            const name = await prompter('New Name',other)\n\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n                data.name = name\n\n            })\n            sendToCollectionObs.next({ type: 'rename-request', tree, name })\n\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n\n\n\n        }\n        else if (type == 'create-request') {\n            const name = await prompter('Request Name')\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n                if (data) {\n                    data.children.push({\n                        id: getId(),\n                        name,\n                        type: 'emit',\n                        event: \"\"\n\n                    })\n                } else {\n            \n                    collectionTree.push({\n                        id: getId(),\n                        name,\n                        type: 'emit',\n                        event: \"\"\n\n                    })\n                }\n\n            })\n\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n        }\n        else if (type == 'create-folder') {\n            const name = await prompter('Folder Name')\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n                if (data) {\n                    data.children.push({\n                        id: getId(),\n                        name,\n                        isFolder: true,\n                        children: []\n\n                    })\n                } else {\n                    collectionTree.push({\n                        id: getId(),\n                        name,\n                        isFolder: true,\n                        children: []\n\n                    })\n                }\n\n            })\n\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n        }\n\n\n\n\n    }\n\n    function lastFolderCB(tree?: any) {\n        if (tree) {\n            lastFolderRef.current = function (e: any) {\n                setLastSelectedFolderTree('/')\n\n\n            }\n\n            setTimeout(() => {\n                window.addEventListener('click', lastFolderRef.current)\n            }, 100)\n\n        } else {\n            window.removeEventListener('click', lastFolderRef.current)\n        }\n        setLastSelectedFolderTree(tree)\n    }\n    function setContextMenuF(data: any) {\n        if (data) {\n            contextRef.current = function (e: any) {\n                setContextMenu(null)\n\n            }\n\n            window.addEventListener('click', contextRef.current)\n        } else {\n            window.removeEventListener('click', contextRef.current)\n        }\n        setContextMenu(data)\n    }\n\n    function CollectionRenderer(props: any) {\n        const collection: CollectionFolder | CollectionRequest = props.data;\n\n        // handles deleted collections\n        if (!collection) { return <></> }\n        const tree = (props.tree || '') + ('/' + collection.id);\n        const treeName = (props.treeName || '') + ('/' + collection.name);\n\n\n\n        return (\n            <div className='text-color-default cursor'>\n                {\n                    collection.isFolder ?\n                        <>\n                            <div onContextMenu={(e) => {\n\n\n                                setContextMenuF({\n                                    tree,\n                                    x: e.pageX,\n                                    y: e.pageY,\n                                    type:'folder',\n                                    other: collection.name\n\n                                })\n                            }} className={'p-1 hover-collection ' + (tree == lastSelectedFolderTree ? 'bg-dark-light' : '')} onClick={() => { lastFolderCB(tree); onCollectionEvent('toggleFolder', tree, treeName) }}><i style={{ width: '15px' }} className={'fa mr-1 ' + (collection.isFolderOpened ? 'fa-angle-down' : 'fa-angle-right')}></i>{collection.name}</div>\n\n                            {collection.isFolderOpened && <div className='border-left ml-1'> <div style={{ paddingLeft: '10px' }}>{collection.children.map((c, i) => <div><CollectionRenderer key={i + tree} tree={tree} treeName={treeName} data={c} /></div>)}</div> </div>}\n\n                        </>\n                        :\n\n                        <>\n                            <div onContextMenu={(e) => {\n\n\n                                setContextMenuF({\n                                    tree,\n                                    x: e.pageX,\n                                    y: e.pageY,\n                                    type:'request',\n                                    other: collection.name\n\n                                })\n                            }} className={'p-1 hover-collection ' + (tree == activeTree ? 'bg-dark-light' : '')} onClick={() => onCollectionEvent('openRequest', tree, treeName)}>\n\n                                <TypePill type={(collection as any).type} />\n\n                                {collection.name}</div>\n                        </>\n                }\n\n            </div>\n        )\n\n    }\n    function onContextMenu(type: string, tree: string) {\n        // const sure = await confirmer('are you sure you want to logout ?')\n    }\n\n    function ContextMenu(props: any) {\n\n        return (\n            <div className={'border rounded text-color-default ' + (darkMode ? 'bg-app-dark' : 'bg-white')} style={{ position: 'fixed', zIndex: 'auto', top: (contextMenu.y + 'px'), left: (contextMenu.x + 'px') }}>\n\n                {(contextMenu.type=='folder' || contextMenu.type=='blank') && <div onClick={() => onCollectionEvent('create-request', contextMenu.tree,contextMenu.treeName, contextMenu.other)} className='pr-2 pl-2 pt-1 pb-1 cursor hover-collection '> <i className={' fa fa fa-file-medical mr-2 ' + (darkMode ? 'text-white' : 'text-dark')}></i> Create Request</div>}\n                {(contextMenu.type=='folder' || contextMenu.type=='blank') && <div onClick={() => onCollectionEvent('create-folder', contextMenu.tree,contextMenu.treeName, contextMenu.other)} className='pr-2 pl-2 pt-1 pb-1 cursor hover-collection '> <i className={' fa fa-folder-plus mr-2 ' + (darkMode ? 'text-white' : 'text-dark')}></i> Create Folder</div>}\n                {(contextMenu.type == 'folder' || contextMenu.type == 'request' ) && <div onClick={() => onCollectionEvent('rename', contextMenu.tree,contextMenu.treeName, contextMenu.other)} className='pr-2 pl-2 pt-1 pb-1 cursor hover-collection '> <i className={' fa fa-pen mr-2 ' + (darkMode ? 'text-white' : 'text-dark')}></i> Rename</div>}\n                {(contextMenu.type == 'folder' || contextMenu.type == 'request') &&<div onClick={() => onCollectionEvent('delete', contextMenu.tree,contextMenu.treeName, contextMenu.other)} className='pr-2 pl-2 pt-1 pb-1 cursor hover-collection '> <i className='text-danger fa fa-trash mr-2'></i> Delete</div>}\n\n            </div>\n        )\n\n\n    }\n\n    return (\n        <>\n            {user ?\n                <div className={(sidebarMin ? 'Layout ' : 'Layout sidebar-max ') + (darkMode ? 'bg-app-dark' : '')}>\n\n\n                    <div\n\n\n\n                        className={'ml-2 mt-2 mb-2 sidebar border box-shadow pt-3 ' + (darkMode ? 'bg-app-dark' : 'bg-app-default')} >\n                        <div className='pl-4  sidebar-logo text-color-default mb-2'>\n                            <div className='d-inline-block sidebar-nav-inner'>\n                                <span\n                                    style={{ marginLeft: '-5px' }}\n                                    className='text-center mb-2 d-block'>\n\n                                    <span onClick={() => setSidebarMin(!sidebarMin)}>\n                                        <img style={{ width: '30px', height: '30px', position: 'relative', top: '-5px' }} src='/logo.png' className=' mr-3' />\n                                        {!sidebarMin && <b className='text-dark pt-2' style={{ fontSize: '25px' }}>PlugMan 🚀 </b>}\n                                    </span>\n                                    {!sidebarMin && <a className='ml-2 text-color-default' target=\"_blank\" href='https://github.com/ayotycoon/plugman'><i className='fab fa-github'></i></a>}\n                                    {!sidebarMin && <small className='d-block text-right text-color-default' >\n                                        v {envJson.version}\n                                    </small>}\n\n                                </span>\n\n                            </div>\n\n\n                        </div>\n                       \n\n\n\n                     \n\n                            <div>\n                                <div className='pr-2 pl-2 pb-1 pt-1  border-bottom text-color-default '>\n                                    <span title='Create request' onClick={() => {\n                                        onCollectionEvent('create-request', lastSelectedFolderTree || '/');\n                                    }} className='cursor mr-2'><i className='fa fa-file-medical'></i></span>\n                                    <span title='Create folder' onClick={() => {\n                                        onCollectionEvent('create-folder', lastSelectedFolderTree || '/');\n                                    }} className='cursor mr-2'><i className='fa fa-folder-plus'></i></span>\n                                </div>\n                                <div className={'pt-2 ' + (sidebarMin ? 'd-none' : '')}\n                                    style={{ height: 'calc(100vh - 350px)', overflowY: 'auto', overflowX: 'auto', marginLeft: '10px', whiteSpace: 'nowrap', width: '100%', }}>\n\n                                    {contextMenu && <ContextMenu />}\n\n                                    {collections.map((collection, i) => <CollectionRenderer key={i} data={collection} />)}\n\n                                    <div\n                                    onContextMenu={(e)=>{\n                                        setContextMenuF({\n                                            tree:'/',\n                                            x: e.pageX,\n                                            y: e.pageY,\n                                            type: 'blank'\n\n                                        })\n                                    }}\n                                    \n                                    className='h-100'>\n\n                                    </div>\n                                </div>\n                            </div>\n\n                        \n\n\n\n\n\n\n\n                        <div className={'p-2 ' + (sidebarMin ? 'd-none' : '')} style={{ position: 'absolute', bottom: '30px' }}>\n                            <input onChange={(e: any) => {\n                                setSocketUrl(e.target.value)\n                            }} disabled={props.socket.status.connected} className='form-control small' value={socketUrl} placeholder='Enter socket url' />\n\n                            <div className='mt-1'>{!props.socket.status.connected ? <> <button onClick={() => {\n                                WorkspaceService.setServerUrl(socketUrl);\n                                socketService.initialize(socketUrl)\n                            }} disabled={!socketUrl} className='btn btn-sm btn-primary'>Connect</button>\n                                <br />\n                                <small onClick={() => {\n                                    socketService.initializeAndListen(socketUrl)\n                                }} className='text-primary cursor \n                                '>Connect and fire all events</small>\n\n                            </> : <button onClick={() => {\n                                socketService.disconnect()\n                            }} className='btn btn-sm btn-outline-primary'>Disconnect</button>}\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className={'topbar ' + (!darkMode ? 'bg-app-default' : 'bg-app-dark')}>\n                        <span app-data-intro='Displays the current page you are on. Can also click here to show or hide sidebar' app-data-step='2' className='small '>\n                            <span className='change-in-dark-1'>\n                                <b  >  {props.app.title.title || <>...</>}\n\n\n                                    {props.app.title.icon &&\n\n                                        <i className={'ml-2 ' + props.app.title.icon} > </i>\n                                    }\n\n                                </b>\n                            </span>\n                        </span>\n\n\n\n\n                        <div className='float-right'>\n                            {props.network.loading &&\n\n                                <i style={{ position: 'relative', top: '3px' }} className=' fa fa-sync spin mr-2'></i>\n                            }\n\n                          \n                        <WorkspaceToggle />\n\n\n                            <span className='cursor text-center'>\n                                <span style={{ top: '5px', position: 'relative' }} onClick={toggleDarkMode} className='pl-2'>\n\n                                    {!darkMode ? <i style={{ fontSize: '20px' }} className=' far fa-moon'></i> : <i className='text-white fa fa-sun'></i>}\n                                </span>\n\n                            </span>\n\n                            {false && <DropdownClick>\n                                <span className='cursor text-center'>\n                                    <span style={{ top: '5px', position: 'relative' }} className='pl-2 text-dark'>\n                                        <i className='far fa-bell' style={{ fontSize: '20px' }}></i>\n\n                                    </span>\n\n                                </span>\n\n                                <div className='dropdown-click-close change-in-dark-1 border rounded p-2 bg-white ' style={{ width: '200px', position: 'relative', left: isPc ? `-170px` : '-170px' }}>\n                                    notifications\n\n                                    </div>\n\n                            </DropdownClick>}\n\n\n\n\n\n\n                        </div>\n                    </div>\n\n\n\n\n                    <div onClick={sideBarBlur} style={{ height: '100vh' }} className={'content ' + (!darkMode ? 'bg-app-default' : 'bg-app-dark')}>\n\n                        <Switch>\n\n                            <Route exact path=\"/\">\n                                <Redirect to='/request' />\n                            </Route>\n\n\n                            <Route exact path=\"/request\" component={Request} />\n\n                            <Redirect path='**' to='/404' />\n                        </Switch>\n\n\n\n                    </div>\n\n                </div>\n                : <div className={'splash-container ' + (darkMode ? 'bg-app-dark' : '')}>\n                    <div className='d-inline-block'>\n                        <img src='/logo.png' />\n                        <br></br>\n                        <div className='loader'>\n                            <div className='bar bg-primary'>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>}</>)\n\n}\n\n\n\nconst mapStateToProps = (state: any) => ({\n    network: state.network,\n    app: state.app,\n    notifications: state.notifications,\n    socket: state.socket\n})\n\nexport default connect(mapStateToProps, { loading, setUserData, toggleDarkMode, setActiveTree })(Layout)","import React from 'react'\nimport './Modal.scss'\n\ninterface ModalI {\n    title?: string;\n    zIndex?: number;\n    preventCloseOnClickOutside?: boolean;\n    jsx?: boolean;\n\n    type?: 'loading';\n    onClose?: CallableFunction;\n    children?: any;\n}\n\n\nfunction Modal(props: ModalI) {\n\n    function onClose() {\n        if (props.onClose) {\n            props.onClose()\n        }\n    }\n    function clickedOutside(e: any) {\n        if (e.target.className.match('Modal-center') && props.type !== 'loading' && !props.preventCloseOnClickOutside) {\n            onClose()\n        }\n    }\n\n    return (\n        <div className='Modal Modal-center ' style={{ zIndex: props.type === 'loading' ? 100 : (props.zIndex || 30) }} onClick={clickedOutside}>\n\n            <div className={'Modal-inner p-3 rounded' + (props.type === 'loading' ? ' ' : ' bg-white')}>\n                <div className='Modal-inner-heading'>\n                    <div className='Modal-inner-heading-text'>\n                        <h4 className='font-weight-bold'>{props.title}</h4>\n                    </div>\n                    {props.type !== 'loading' &&\n                        <div className='Modal-inner-heading-close-container'>\n                            <div onClick={onClose} className='Modal-close bg-danger'>\n                                <i className='fa fa-close text-white'>\n\n                                </i>\n                            </div>\n                        </div>}\n\n\n                </div>\n                {!props.jsx && <div dangerouslySetInnerHTML={{ __html: props.children }}></div>}\n                {props.jsx && props.children}\n\n\n                {props.type === 'loading' &&\n\n                    <div className='text-center'>\n\n                        <img src='/assets/loader.svg' />\n                    </div>\n                }\n\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default Modal;","import React, { useState, useEffect, useRef } from 'react'\nimport './Overlay.scss'\nimport { toastObs, alertObs, shareObs, modalObs, confirmObs, selectObs, promptObs, toaster } from '../../../Providers/core.service'\nimport Modal from '../Modal/Modal'\n\nimport { copy as helperCopy } from '../../../Providers/helpers'\n\n\n\n\nfunction Overlay() {\n    const [toastData, setToastData] = useState(null as any)\n    const [shareContent, setShareContent] = useState(null as any);\n    const [modalContent, setModalContent] = useState(null as any);\n    const [confirmContent, setConfirmContent] = useState(null as any);\n    const [alertContent, setAlertContent] = useState(null as any);\n    const [selectContent, setSelectContent] = useState(null as any);\n    const [promptContent, setPromptContent] = useState(null as any);\n    const res = useRef(null as any)\n\n    useEffect(() => {\n        toastObs.subscribe((incomingToastData: any) => {\n\n            if (incomingToastData) {\n                setToastData(incomingToastData)\n            } else {\n                setToastData(null)\n            }\n\n        })\n        shareObs.subscribe((incomingShareContent: any) => {\n\n            if (incomingShareContent) {\n                setShareContent(incomingShareContent)\n            } else {\n                setShareContent(null)\n            }\n\n        })\n        modalObs.subscribe((incomingModalContent: any) => {\n\n            if (incomingModalContent) {\n                setModalContent(incomingModalContent)\n                res.current = incomingModalContent.cb\n            } else {\n                setModalContent(null)\n            }\n\n        })\n        confirmObs.subscribe((incomingConfirmContent: any) => {\n\n            if (incomingConfirmContent) {\n                setConfirmContent(incomingConfirmContent)\n                res.current = incomingConfirmContent.cb\n\n            } else {\n                //setConfirmContent(null)\n            }\n\n        })\n        alertObs.subscribe((incomingAlertContent: any) => {\n\n            if (incomingAlertContent) {\n                setAlertContent(incomingAlertContent)\n\n            } else {\n                //setConfirmContent(null)\n            }\n\n        })\n        selectObs.subscribe((incomingSelectContent: any) => {\n\n            if (incomingSelectContent) {\n                setSelectContent(incomingSelectContent)\n                res.current = incomingSelectContent.cb\n\n            } else {\n                setSelectContent(null)\n            }\n        })\n        promptObs.subscribe((incomingPromptContent: any) => {\n\n            if (incomingPromptContent) {\n                setPromptContent(incomingPromptContent)\n\n                res.current = incomingPromptContent.cb\n\n            } else {\n                setPromptContent(null)\n            }\n\n        })\n\n\n\n\n\n\n\n\n\n    }, [])\n\n\n\n    function hideAttentionToast() {\n        toastObs.next({ ...toastData, incoming: false })\n        setTimeout(() => {\n            toastObs.next(null)\n        }, 500);\n    }\n\n\n    return (\n        <>\n            {shareContent && <Modal jsx={true} title='Share' onClose={() => { setShareContent(null) }} >\n                <div className='text-center'>\n                    {\n                        [\n                            {\n                                icon: 'fa fa-copy', name: 'Copy', onClick: () => {\n                                    helperCopy(shareContent)\n                                    toaster({ message: 'Successfully copied link' })\n\n\n\n                                }\n                            },\n                            {\n                                icon: 'fab fa-whatsapp', name: 'whatsapp', onClick: () => {\n\n                                    helperCopy(shareContent)\n\n                                    window.open(`whatsapp://send?${encodeURIComponent(shareContent)}`);\n                                }\n                            },\n                        \n                            {\n                                icon: 'fab fa-twitter', name: 'twitter', onClick: () => {\n\n                                    window.open(`https://twitter.com/intent/tweet?url=${encodeURIComponent(shareContent)}`, '_blank');\n\n\n                                }\n                            },\n\n                        ]\n                            .map((media, index) => {\n                                return (\n                                    <div key={index}  className='mt-2'>\n                                        <div onClick={media.onClick} className='d-inline-block'>\n                                        <i className={media.icon} style={{ fontSize: '40px' }} />\n                                        <br />\n                                        {media.name}\n                                        </div>\n\n                                    </div>\n                                )\n                            })\n                    }\n                </div>\n\n\n            </Modal>}\n\n\n\n\n            {modalContent && <Modal type={modalContent.type} title={modalContent.title} onClose={() => { setModalContent(null); res.current(true) }} > {modalContent.body}</Modal>}\n            {confirmContent &&\n\n                <Modal preventCloseOnClickOutside={true} jsx={true} title={'Confirm'} onClose={() => { res.current(false, true); setConfirmContent(null) }} > {confirmContent.text}\n\n                    {confirmContent.body && <>\n                        <br />\n\n                        <span dangerouslySetInnerHTML={{ __html: confirmContent.body }}></span>\n                    </>}\n                    <hr />\n                    <div className='row'>\n                        <div className='col-6'>\n                            <button onClick={() => { res.current(true); setConfirmContent(null) }} className='btn btn-primary'>Yes</button>\n                        </div>\n                        <div className='col-6 text-right'>\n\n                            <button onClick={() => { res.current(false); setConfirmContent(null) }} className='btn text-danger'>No</button>\n                        </div>\n                    </div>\n                </Modal>}\n\n\n            {alertContent &&\n\n                <Modal zIndex={100} preventCloseOnClickOutside={true} jsx={true} title={'Alert'} onClose={() => { setAlertContent(null) }} > {alertContent.text}\n\n                    {alertContent.body && <>\n                        <br />\n\n                        <span dangerouslySetInnerHTML={{ __html: alertContent.body }}></span>\n                    </>}\n               \n\n                 \n                </Modal>}\n\n\n\n            {selectContent && <Modal jsx={true} preventCloseOnClickOutside={true} title={selectContent.title}\n                onClose={() => { res.current(false, true); setSelectContent(null) }} >\n                {selectContent.options.map((option: any, index: number) => {\n                    const optionText = option.option || option;\n                    const optionInfo = option.info;\n\n                    return (\n                        <div key={index}>\n                            <input value={optionText} onChange={(e: any) => setSelectContent({ ...selectContent, value: e.target.value })} name='selector' type='radio' className='mr-2' id={'selector-' + optionText}></input>\n\n                            <label htmlFor={'selector-' + optionText}>{optionText}</label>\n                            {optionInfo && <span className='float-right each-select'><i className='fa fa-question-circle '></i>\n\n                                <div className='select-info bg-info rounded p-2 text-white'>\n                                    {optionInfo}\n                                </div>\n\n                            </span>}\n                            <br />\n                        </div>\n                    )\n                })}\n\n                <hr />\n                <div className='text-center'>\n                    <div className='btn btn-group'>\n                        {selectContent.value && <button onClick={() => { res.current(selectContent.value); setSelectContent(null) }} className='btn btn-primary'>Ok</button>}\n\n\n                        <button onClick={() => { res.current(false); setSelectContent(null) }} className='btn btn-outline-danger'>Cancel</button>\n                    </div>\n                </div>\n\n            </Modal>}\n\n\n            {promptContent && <Modal jsx={true} preventCloseOnClickOutside={true} title={promptContent.text}\n                onClose={() => { res.current(false, true); setPromptContent(null) }} >\n                <input value={promptContent.value} onChange={(e: any) => setPromptContent({ ...promptContent, value: e.target.value })} className='form-control'></input>\n\n\n                <hr />\n                <div className='text-center'>\n                    <div className='btn btn-group'>\n                        {promptContent.value && <button onClick={() => { res.current(promptContent.value); setPromptContent(null) }} className='btn btn-primary'>Ok</button>}\n\n\n                        <button onClick={() => { res.current(false); setPromptContent(null) }} className='btn btn-outline-danger'>Cancel</button>\n                    </div>\n                </div>\n\n            </Modal>}\n\n\n            {toastData &&\n                <div className={'Alert animated pt-3 pl-3 ' + (toastData.incoming ? ' fadeIn' : 'fadeOut') + (toastData.attention ? ' alert-attention' : '')}>\n                    <div className={`d-inline-block animated alert-inner box-shadow rounded alert alert-${toastData.type || 'info'}` + (toastData.incoming ? ' slideInDown' : ' slideOutUp')}>\n                        <span dangerouslySetInnerHTML={{ __html: toastData.message }}></span>\n\n                        {toastData.attention && <div>\n                            <hr />\n                            <button onClick={hideAttentionToast} className={'btn btn-sm btn-' + (toastData.type || 'info')}>\n                                Ok\n                        </button>\n\n                        </div>}\n                    </div>\n                </div>}</>\n\n    )\n\n}\n\nexport default Overlay;","import React, { useEffect } from 'react';\nimport './App.scss';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport { store, Provider } from './store'\nimport { monaco } from '@monaco-editor/react';\n\nimport Layout from './components/Layout/Layout';\nimport Overlay from './components/misc/Overlay/Overlay';\nimport { possibleResizeObs } from './Providers/core.service';\nimport {  DebounceTime } from './Providers/helpers';\n\nconst log = console.log;\nconsole.log = (...args : any) => {\n\n   if(process.env.NODE_ENV !== 'development'){\n    return\n   }\n    log(...args);\n\n}\n\nmonaco\n    .init()\n    .then(monaco => {\n        const theme = {\n            base: 'vs',\n            inherit: true,\n            colors: {\n                \"editor.background\": '#f6f7fa'\n            },\n           rules: [\n                { token: 'green', background: 'FF0000', foreground: '00FF00', fontStyle: 'italic' },\n                { token: 'red', foreground: 'FF0000', fontStyle: 'bold underline' },\n                { background: '000000' },\n                { foreground: '000000' }\n            ],\n        }\n        monaco.editor.defineTheme('plugman-light', theme)\n\n    \n})\nconst ref = new DebounceTime()\n\nwindow.addEventListener('resize', () => {\n    ref.start(() => possibleResizeObs.next(true), 500)\n})\n//socketService.initialize()\nfunction App() {\n    useEffect(() => {\n \n        \n        return () => {\n        \n        };\n    }, []);\n\n\n    return (\n        <Provider store={store}>\n            <Overlay />\n            \n      \n            <Router>\n                \n                <Switch>\n               \n                \n                    <Route path=\"/\" component={Layout}>\n                    </Route>\n                  \n\n                </Switch>\n            </Router >\n        </Provider>\n    );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n    \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              //console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      //console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        //console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}